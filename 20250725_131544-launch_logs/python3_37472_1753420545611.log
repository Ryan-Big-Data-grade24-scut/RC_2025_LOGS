[INFO] [1753420545.775377348] [solver_node]: [Case1BatchSolver] Case1BatchSolver初始化完成: 场地尺寸: 9.998x8.0, 容差: 0.001
[INFO] [1753420545.776291806] [solver_node]: [Case3BatchSolver] Case3BatchSolver初始化完成: 场地尺寸: 9.998x8.0, 容差: 0.001
[INFO] [1753420545.776953616] [solver_node]: [PoseSolver] PoseSolver初始化完成: 场地(9.998x8.0), 4个激光
[INFO] [1753420545.893284289] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420545.894453377] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420545.954713508] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420545.955789570] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420546.056301406] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420546.057435165] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420546.155973475] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420546.157139684] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420546.254842515] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420546.257697282] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420546.355964384] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420546.357044766] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420546.455259643] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420546.456265271] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420546.555083557] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420546.556148674] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420546.655731109] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420546.656941991] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420546.754769305] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420546.755883192] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420546.855337655] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420546.857347727] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420546.956240511] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420546.959710687] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420547.055663070] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420547.057610419] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420547.159827648] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420547.161060002] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420547.255196495] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420547.256219372] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420547.355995765] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420547.358379127] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420547.456415312] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420547.457441132] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420547.555160988] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420547.556166360] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420547.654776737] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420547.655838686] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420547.758181454] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420547.759594965] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420547.857137185] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420547.858839888] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420547.956184822] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420547.957971911] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420548.057497802] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420548.058574567] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420548.156816615] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420548.157864004] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420548.256039618] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420548.257190497] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420548.356074355] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420548.357331989] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420548.456655059] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420548.457739025] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420548.555690600] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420548.558075242] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420548.662318800] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420548.663426190] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420548.758276592] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420548.760347369] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420548.855946976] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420548.857920310] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420548.956323706] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420548.957679968] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420549.059116024] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420549.060243095] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420549.159304302] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420549.162239711] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420549.255350738] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420549.256552307] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420549.356503906] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420549.357554816] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420549.455422933] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420549.456703769] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420549.556107545] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420549.557154038] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420549.656372594] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420549.657440367] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420549.754739573] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420549.755758866] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420549.855191315] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420549.856251024] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420549.955162723] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420549.956226912] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420550.055431228] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420550.056823906] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420550.155446222] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420550.157475142] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420550.256276599] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.0, 0.0, 0.0])
[WARN] [1753420550.257344756] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420550.356384011] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7160000205039978, 0.0, 0.0])
[WARN] [1753420550.357489642] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420550.456188792] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7160000205039978, 0.0, 0.0])
[WARN] [1753420550.457281782] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420550.555191534] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7160000205039978, 0.0, 0.0])
[WARN] [1753420550.556266476] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420550.656280926] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7160000205039978, 0.0, 0.0])
[WARN] [1753420550.657305626] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420550.754469309] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7160000205039978, 0.0, 0.0])
[WARN] [1753420550.755534843] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420550.855232324] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 0.0, 0.0])
[WARN] [1753420550.856258689] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420550.956022444] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 0.0, 0.0])
[WARN] [1753420550.957580279] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420551.054718586] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 0.0, 0.0])
[WARN] [1753420551.056017694] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420551.154860112] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 0.0, 0.0])
[WARN] [1753420551.156043057] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420551.257488396] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 0.0, 0.0])
[WARN] [1753420551.258564809] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420551.355458342] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 0.0, 0.0])
[WARN] [1753420551.356581733] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420551.455568475] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 0.0, 0.0])
[WARN] [1753420551.456599832] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420551.554991294] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 0.0, 0.0])
[WARN] [1753420551.556069052] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420551.654789035] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 0.0, 0.0])
[WARN] [1753420551.656002573] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420551.755668118] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 0.0, 0.0])
[WARN] [1753420551.756723635] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420551.854953877] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 0.0, 0.0])
[WARN] [1753420551.857397016] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420551.954643551] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420551.955714972] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420552.057458432] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420552.060009094] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420552.155109234] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420552.156174767] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420552.254649208] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420552.255835449] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420552.355083448] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420552.356266009] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420552.455865921] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420552.458256195] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420552.556382627] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420552.557454144] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420552.655344377] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420552.656790561] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420552.754630393] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420552.755708791] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420552.855752491] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420552.856808968] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420552.955798848] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420552.957016610] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420553.054481039] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420553.055553869] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420553.154939568] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420553.155970925] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420553.255693113] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420553.256741750] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420553.355810768] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420553.356993713] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420553.454719526] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420553.455772676] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420553.559183062] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420553.562738361] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420553.655461443] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420553.656481056] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420553.755859042] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420553.756921216] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420553.855046848] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420553.856395366] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420553.954760844] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7170000076293945, 4.626999855041504, 0.0])
[WARN] [1753420553.956137331] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420554.055684059] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7170000076293945, 4.626999855041504, 0.0])
[WARN] [1753420554.056748632] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420554.155767730] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7170000076293945, 4.626999855041504, 0.0])
[WARN] [1753420554.156886417] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420554.254865006] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7170000076293945, 4.626999855041504, 0.0])
[WARN] [1753420554.256447898] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420554.354789057] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7170000076293945, 4.626999855041504, 0.0])
[WARN] [1753420554.355875135] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420554.455862579] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420554.457232153] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420554.554942863] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420554.556083951] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420554.655482099] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420554.656526000] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420554.754938617] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 0.0])
[WARN] [1753420554.756051640] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420554.855655714] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 31.591999053955078])
[WARN] [1753420554.856756512] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420554.955346414] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 31.591999053955078])
[WARN] [1753420554.956546927] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420555.054937688] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 31.591999053955078])
[WARN] [1753420555.056187995] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420555.155335673] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 31.591999053955078])
[WARN] [1753420555.156366293] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420555.255700889] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 31.591999053955078])
[WARN] [1753420555.257059486] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420555.354736692] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 31.583999633789062])
[WARN] [1753420555.355815570] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420555.454569445] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.626999855041504, 31.583999633789062])
[WARN] [1753420555.455650531] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420555.555448115] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.626999855041504, 31.583999633789062])
[WARN] [1753420555.556509169] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420555.656220030] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.626999855041504, 31.583999633789062])
[WARN] [1753420555.657262843] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420555.755461887] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 31.583999633789062])
[WARN] [1753420555.756557758] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420555.856214250] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.770000457763672])
[WARN] [1753420555.857505742] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420555.956897587] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.770000457763672])
[WARN] [1753420555.959281717] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420556.058990883] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.770000457763672])
[WARN] [1753420556.060579215] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420556.155872099] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.770000457763672])
[WARN] [1753420556.156934304] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420556.255311882] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.770000457763672])
[WARN] [1753420556.256784755] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420556.355147548] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.770000457763672])
[WARN] [1753420556.356144632] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420556.455360024] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.770000457763672])
[WARN] [1753420556.456504440] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420556.556703604] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.770000457763672])
[WARN] [1753420556.559765897] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420556.656727948] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.770000457763672])
[WARN] [1753420556.657897356] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420556.755926124] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.770000457763672])
[WARN] [1753420556.756971657] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420556.854949927] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.770000457763672])
[WARN] [1753420556.856042726] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420556.957487140] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.770000457763672])
[WARN] [1753420556.958510817] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420557.054609164] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.770000457763672])
[WARN] [1753420557.055794700] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420557.154850058] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.770000457763672])
[WARN] [1753420557.155906951] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420557.254908867] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.770000457763672])
[WARN] [1753420557.255974880] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420557.354956347] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.770000457763672])
[WARN] [1753420557.356068858] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420557.454823631] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.770000457763672])
[WARN] [1753420557.455917197] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420557.555509433] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.770000457763672])
[WARN] [1753420557.556554390] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420557.655544722] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.770000457763672])
[WARN] [1753420557.656929240] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420557.755900787] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.770000457763672])
[WARN] [1753420557.756954800] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420557.856601086] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.770000457763672])
[WARN] [1753420557.857641115] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420557.954578525] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7170000076293945, 4.625999927520752, 31.58099937438965])
[WARN] [1753420557.955842688] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420558.055897050] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7170000076293945, 4.625999927520752, 31.58099937438965])
[WARN] [1753420558.056946071] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420558.155443365] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 31.58099937438965])
[WARN] [1753420558.156565060] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420558.255440637] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 31.58099937438965])
[WARN] [1753420558.256769346] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420558.356225515] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 31.58099937438965])
[WARN] [1753420558.357247112] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420558.455397676] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.760000228881836])
[WARN] [1753420558.456688976] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420558.554716082] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.760000228881836])
[WARN] [1753420558.556015894] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420558.657039114] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.760000228881836])
[WARN] [1753420558.658142473] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420558.755907171] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.760000228881836])
[WARN] [1753420558.756980417] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420558.855817657] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.760000228881836])
[WARN] [1753420558.862265196] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420558.955273378] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.777999877929688])
[WARN] [1753420558.956322463] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420559.054867599] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.777999877929688])
[WARN] [1753420559.055967694] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420559.155965735] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.777999877929688])
[WARN] [1753420559.157094054] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420559.256551344] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.777999877929688])
[WARN] [1753420559.257625262] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420559.354598227] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.777999877929688])
[WARN] [1753420559.355653456] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420559.455680298] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.59600067138672])
[WARN] [1753420559.456716807] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420559.554942990] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.59600067138672])
[WARN] [1753420559.556009484] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420559.654949352] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.59600067138672])
[WARN] [1753420559.656346318] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420559.755063172] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.59600067138672])
[WARN] [1753420559.756181187] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420559.855246338] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.59600067138672])
[WARN] [1753420559.856479908] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420559.955745257] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 31.59600067138672])
[WARN] [1753420559.957086766] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420560.055112432] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 31.59600067138672])
[WARN] [1753420560.056209391] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420560.155087498] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 31.59600067138672])
[WARN] [1753420560.156387150] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420560.255292297] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 31.59600067138672])
[WARN] [1753420560.256330694] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420560.354903160] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 31.59600067138672])
[WARN] [1753420560.356004183] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420560.459476433] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.59600067138672])
[WARN] [1753420560.462303071] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420560.555072432] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.59600067138672])
[WARN] [1753420560.556495928] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420560.654891333] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.59600067138672])
[WARN] [1753420560.655957699] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420560.755128261] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.59600067138672])
[WARN] [1753420560.756476139] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420560.854893209] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.59600067138672])
[WARN] [1753420560.855970231] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420560.955446274] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 31.59600067138672])
[WARN] [1753420560.956888106] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420561.058872731] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 31.59600067138672])
[WARN] [1753420561.060292963] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420561.154881031] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 31.59600067138672])
[WARN] [1753420561.156018439] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420561.255059654] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 31.59600067138672])
[WARN] [1753420561.256406860] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420561.358425247] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 31.59600067138672])
[WARN] [1753420561.361158251] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420561.454955001] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.59600067138672])
[WARN] [1753420561.456030775] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420561.559239818] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 2.9149999618530273])
[INFO] [1753420561.562095930] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71899998 4.62599993 2.91499996]
[INFO] [1753420561.567859386] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420561.569813872] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420561.570587686] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420561.571369435] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420561.572148017] [solver_node]: 求解器返回结果: [((1.0755389755511937, 1.0775389755511935), (4.874659120495724, 4.876659120495725), -1.4145153478108403), ((8.920461024448807, 8.922461024448806), (3.123340879504276, 3.1253408795042756), 1.7270773057789528), ((8.945384867370459, 8.947384867370458), (3.249865395824569, 3.2518653958245687), 1.833443153484275), ((1.0506151326295412, 1.052615132629541), (4.74813460417543, 4.750134604175431), -1.3081495001055181), ((4.74813460417543, 4.750134604175431), (6.947384867370459, 6.949384867370459), -2.8789458269004147), ((5.247865395824568, 5.2498653958245685), (1.0506151326295412, 1.052615132629541), 0.2626468266893784), ((6.839593754764188, 6.8415937547641885), (6.939378088787432, 6.941378088787433), 2.893837188311104), ((3.1564062452358117, 3.1584062452358115), (1.058621911212567, 1.0606219112125668), -0.247755465278689)]
[INFO] [1753420561.655331096] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 2.9149999618530273])
[INFO] [1753420561.656787425] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71899998 4.62599993 2.91499996]
[INFO] [1753420561.660118973] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420561.662451454] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420561.665454290] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420561.667112128] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420561.669129464] [solver_node]: 求解器返回结果: [((1.0755389755511937, 1.0775389755511935), (4.874659120495724, 4.876659120495725), -1.4145153478108403), ((8.920461024448807, 8.922461024448806), (3.123340879504276, 3.1253408795042756), 1.7270773057789528), ((8.945384867370459, 8.947384867370458), (3.249865395824569, 3.2518653958245687), 1.833443153484275), ((1.0506151326295412, 1.052615132629541), (4.74813460417543, 4.750134604175431), -1.3081495001055181), ((4.74813460417543, 4.750134604175431), (6.947384867370459, 6.949384867370459), -2.8789458269004147), ((5.247865395824568, 5.2498653958245685), (1.0506151326295412, 1.052615132629541), 0.2626468266893784), ((6.839593754764188, 6.8415937547641885), (6.939378088787432, 6.941378088787433), 2.893837188311104), ((3.1564062452358117, 3.1584062452358115), (1.058621911212567, 1.0606219112125668), -0.247755465278689)]
[INFO] [1753420561.755544057] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 2.9149999618530273])
[INFO] [1753420561.757100068] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71899998 4.62599993 2.91499996]
[INFO] [1753420561.761684356] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420561.762565340] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420561.763343090] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420561.764066214] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420561.764833883] [solver_node]: 求解器返回结果: [((1.0755389755511937, 1.0775389755511935), (4.874659120495724, 4.876659120495725), -1.4145153478108403), ((8.920461024448807, 8.922461024448806), (3.123340879504276, 3.1253408795042756), 1.7270773057789528), ((8.945384867370459, 8.947384867370458), (3.249865395824569, 3.2518653958245687), 1.833443153484275), ((1.0506151326295412, 1.052615132629541), (4.74813460417543, 4.750134604175431), -1.3081495001055181), ((4.74813460417543, 4.750134604175431), (6.947384867370459, 6.949384867370459), -2.8789458269004147), ((5.247865395824568, 5.2498653958245685), (1.0506151326295412, 1.052615132629541), 0.2626468266893784), ((6.839593754764188, 6.8415937547641885), (6.939378088787432, 6.941378088787433), 2.893837188311104), ((3.1564062452358117, 3.1584062452358115), (1.058621911212567, 1.0606219112125668), -0.247755465278689)]
[INFO] [1753420561.856270184] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 2.9149999618530273])
[INFO] [1753420561.857819027] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71899998 4.62599993 2.91499996]
[INFO] [1753420561.861384406] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420561.862312368] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420561.863087653] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420561.863826202] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420561.864603791] [solver_node]: 求解器返回结果: [((1.0755389755511937, 1.0775389755511935), (4.874659120495724, 4.876659120495725), -1.4145153478108403), ((8.920461024448807, 8.922461024448806), (3.123340879504276, 3.1253408795042756), 1.7270773057789528), ((8.945384867370459, 8.947384867370458), (3.249865395824569, 3.2518653958245687), 1.833443153484275), ((1.0506151326295412, 1.052615132629541), (4.74813460417543, 4.750134604175431), -1.3081495001055181), ((4.74813460417543, 4.750134604175431), (6.947384867370459, 6.949384867370459), -2.8789458269004147), ((5.247865395824568, 5.2498653958245685), (1.0506151326295412, 1.052615132629541), 0.2626468266893784), ((6.839593754764188, 6.8415937547641885), (6.939378088787432, 6.941378088787433), 2.893837188311104), ((3.1564062452358117, 3.1584062452358115), (1.058621911212567, 1.0606219112125668), -0.247755465278689)]
[INFO] [1753420561.955512653] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 2.9149999618530273])
[INFO] [1753420561.957091865] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71899998 4.62599993 2.91499996]
[INFO] [1753420561.960712574] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420561.961959360] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420561.962769687] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420561.963515340] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420561.964348611] [solver_node]: 求解器返回结果: [((1.0755389755511937, 1.0775389755511935), (4.874659120495724, 4.876659120495725), -1.4145153478108403), ((8.920461024448807, 8.922461024448806), (3.123340879504276, 3.1253408795042756), 1.7270773057789528), ((8.945384867370459, 8.947384867370458), (3.249865395824569, 3.2518653958245687), 1.833443153484275), ((1.0506151326295412, 1.052615132629541), (4.74813460417543, 4.750134604175431), -1.3081495001055181), ((4.74813460417543, 4.750134604175431), (6.947384867370459, 6.949384867370459), -2.8789458269004147), ((5.247865395824568, 5.2498653958245685), (1.0506151326295412, 1.052615132629541), 0.2626468266893784), ((6.839593754764188, 6.8415937547641885), (6.939378088787432, 6.941378088787433), 2.893837188311104), ((3.1564062452358117, 3.1584062452358115), (1.058621911212567, 1.0606219112125668), -0.247755465278689)]
[INFO] [1753420562.056069912] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.59600067138672])
[WARN] [1753420562.057877738] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420562.155388544] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.59600067138672])
[WARN] [1753420562.156447998] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420562.254785355] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.59600067138672])
[WARN] [1753420562.256036654] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420562.355056782] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.59600067138672])
[WARN] [1753420562.356421876] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420562.455096490] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.59600067138672])
[WARN] [1753420562.456481745] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420562.554921665] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.775999069213867])
[WARN] [1753420562.555950333] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420562.655178531] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.775999069213867])
[WARN] [1753420562.656238721] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420562.756133209] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.775999069213867])
[WARN] [1753420562.757163254] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420562.856741125] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.775999069213867])
[WARN] [1753420562.858956387] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420562.959742036] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.775999069213867])
[WARN] [1753420562.961613640] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420563.055388151] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.58099937438965])
[WARN] [1753420563.056543095] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420563.154890981] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.58099937438965])
[WARN] [1753420563.155971619] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420563.255004773] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.58099937438965])
[WARN] [1753420563.256088675] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420563.355423853] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.58099937438965])
[WARN] [1753420563.356529355] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420563.455323462] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.58099937438965])
[WARN] [1753420563.456690284] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420563.555856433] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.58099937438965])
[WARN] [1753420563.556952015] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420563.655158810] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.58099937438965])
[WARN] [1753420563.656231256] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420563.754777291] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.58099937438965])
[WARN] [1753420563.755827784] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420563.854870890] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.58099937438965])
[WARN] [1753420563.855978217] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420563.958887958] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 31.58099937438965])
[WARN] [1753420563.961585665] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420564.056914908] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 31.58099937438965])
[WARN] [1753420564.059672968] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420564.156058081] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 31.58099937438965])
[WARN] [1753420564.157177984] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420564.255063458] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 31.58099937438965])
[WARN] [1753420564.256138176] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420564.355010110] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 31.58099937438965])
[WARN] [1753420564.356567497] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420564.455064572] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 31.58099937438965])
[WARN] [1753420564.456106489] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420564.554964822] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 31.58099937438965])
[WARN] [1753420564.556243834] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420564.654854128] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 31.58099937438965])
[WARN] [1753420564.655945135] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420564.756001677] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 31.58099937438965])
[WARN] [1753420564.757031018] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420564.857691545] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 31.58099937438965])
[WARN] [1753420564.858739766] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420564.957225833] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 31.58099937438965])
[WARN] [1753420564.958293639] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420565.055913250] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.58099937438965])
[WARN] [1753420565.057019873] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420565.155980130] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.58099937438965])
[WARN] [1753420565.157034783] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420565.255259019] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.58099937438965])
[WARN] [1753420565.256281512] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420565.354634840] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.58099937438965])
[WARN] [1753420565.355854394] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420565.455554863] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 31.58099937438965])
[WARN] [1753420565.456597740] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420565.554913979] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 31.58099937438965])
[WARN] [1753420565.556702285] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420565.654739284] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 31.58099937438965])
[WARN] [1753420565.655932341] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420565.755141117] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.7549991607666])
[WARN] [1753420565.756381887] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420565.855144219] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.7549991607666])
[WARN] [1753420565.857648160] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420565.955124088] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.7549991607666])
[WARN] [1753420565.956181717] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420566.055276122] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.7549991607666])
[WARN] [1753420566.056546814] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420566.155014385] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.7549991607666])
[WARN] [1753420566.156207923] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420566.254836363] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.75200080871582])
[WARN] [1753420566.255895081] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420566.355045807] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.75200080871582])
[WARN] [1753420566.356385013] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420566.454835816] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.75200080871582])
[WARN] [1753420566.455935335] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420566.555974566] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.75200080871582])
[WARN] [1753420566.558420650] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420566.657011298] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.75200080871582])
[WARN] [1753420566.658084192] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420566.755208814] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.75200080871582])
[WARN] [1753420566.756568980] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420566.855285519] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.753000259399414])
[WARN] [1753420566.856651925] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420566.954878402] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.753000259399414])
[WARN] [1753420566.956183206] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420567.055061478] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.753000259399414])
[WARN] [1753420567.056288904] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420567.155182569] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.753000259399414])
[WARN] [1753420567.156614225] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420567.255023876] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.753000259399414])
[WARN] [1753420567.256098370] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420567.354908704] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 36.305999755859375])
[WARN] [1753420567.356002014] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420567.454971809] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 36.305999755859375])
[WARN] [1753420567.456343943] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420567.556011197] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 36.305999755859375])
[WARN] [1753420567.557134109] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420567.655078531] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 36.305999755859375])
[WARN] [1753420567.656409224] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420567.756789298] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 36.305999755859375])
[WARN] [1753420567.758159928] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420567.855857335] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.76099967956543])
[WARN] [1753420567.857347840] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420567.957186395] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.76099967956543])
[WARN] [1753420567.958415902] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420568.054878843] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.76099967956543])
[WARN] [1753420568.055935160] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420568.157130266] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.76099967956543])
[WARN] [1753420568.158188535] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420568.255615376] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.76099967956543])
[WARN] [1753420568.257122810] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420568.355761332] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.76300048828125])
[WARN] [1753420568.356796017] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420568.455255718] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.76300048828125])
[WARN] [1753420568.456374757] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420568.554717719] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.76300048828125])
[WARN] [1753420568.555835542] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420568.655319464] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.76300048828125])
[WARN] [1753420568.656435751] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420568.755547694] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.76300048828125])
[WARN] [1753420568.756823282] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420568.856391302] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.774999618530273])
[WARN] [1753420568.857651369] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420568.954781529] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.774999618530273])
[WARN] [1753420568.955813686] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420569.054983199] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.774999618530273])
[WARN] [1753420569.056393415] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420569.156598861] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.774999618530273])
[WARN] [1753420569.159586881] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420569.254989601] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.774999618530273])
[WARN] [1753420569.256208771] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420569.355203624] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.760000228881836])
[WARN] [1753420569.356268998] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420569.455456496] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.760000228881836])
[WARN] [1753420569.456988891] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420569.557075966] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.760000228881836])
[WARN] [1753420569.558107995] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420569.655579061] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.760000228881836])
[WARN] [1753420569.656646611] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420569.754995366] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.760000228881836])
[WARN] [1753420569.756050179] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420569.854869315] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.760000228881836])
[WARN] [1753420569.855947874] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420569.955346706] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.760000228881836])
[WARN] [1753420569.956356366] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420570.055380596] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.760000228881836])
[WARN] [1753420570.056663448] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420570.156404242] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.760000228881836])
[WARN] [1753420570.157759192] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420570.255833636] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.760000228881836])
[WARN] [1753420570.257017477] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420570.356347796] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.760000228881836])
[WARN] [1753420570.357510708] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420570.454747049] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.760000228881836])
[WARN] [1753420570.455929482] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420570.555620067] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.760000228881836])
[WARN] [1753420570.559704629] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420570.656111698] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.760000228881836])
[WARN] [1753420570.657191569] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420570.755281181] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.760000228881836])
[WARN] [1753420570.756341563] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420570.855429027] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.760000228881836])
[WARN] [1753420570.857086353] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420570.955658059] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.760000228881836])
[WARN] [1753420570.956770506] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420571.056984594] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.760000228881836])
[WARN] [1753420571.058112561] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420571.154838393] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 44.13999938964844, 4.625999927520752, 30.760000228881836])
[WARN] [1753420571.155928951] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420571.256332389] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 44.13999938964844, 4.625999927520752, 30.760000228881836])
[WARN] [1753420571.257420291] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420571.359355867] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 44.13999938964844, 4.625999927520752, 30.760000228881836])
[WARN] [1753420571.360412985] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420571.455702072] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 44.13999938964844, 4.625999927520752, 30.760000228881836])
[WARN] [1753420571.456745013] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420571.556102918] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 44.13999938964844, 4.625999927520752, 30.760000228881836])
[WARN] [1753420571.557228325] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420571.655214767] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6520000100135803, 4.625999927520752, 30.760000228881836])
[WARN] [1753420571.656278829] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420571.755489050] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6520000100135803, 4.625999927520752, 30.760000228881836])
[WARN] [1753420571.756666682] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420571.854856010] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6520000100135803, 4.625999927520752, 30.760000228881836])
[WARN] [1753420571.856209168] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420571.955093331] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6520000100135803, 4.625999927520752, 30.750999450683594])
[WARN] [1753420571.959070050] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420572.056182933] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6520000100135803, 4.625999927520752, 30.750999450683594])
[WARN] [1753420572.057231090] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420572.155024120] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6520000100135803, 4.625999927520752, 30.750999450683594])
[WARN] [1753420572.156088917] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420572.257137398] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6520000100135803, 4.625999927520752, 30.750999450683594])
[WARN] [1753420572.258167603] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420572.357082296] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6520000100135803, 4.625999927520752, 30.750999450683594])
[WARN] [1753420572.358125653] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420572.457421892] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6520000100135803, 4.625999927520752, 30.770000457763672])
[WARN] [1753420572.459587105] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420572.556403371] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6520000100135803, 4.625999927520752, 30.770000457763672])
[WARN] [1753420572.557529899] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420572.656129351] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6520000100135803, 4.625999927520752, 30.770000457763672])
[WARN] [1753420572.657289927] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420572.755032811] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.770000457763672])
[WARN] [1753420572.756673401] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420572.855361912] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.770000457763672])
[WARN] [1753420572.856428278] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420572.954656583] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.770000457763672])
[WARN] [1753420572.955709669] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420573.054527207] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.760000228881836])
[WARN] [1753420573.055600709] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420573.154887734] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.760000228881836])
[WARN] [1753420573.156842956] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420573.255435753] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.760000228881836])
[WARN] [1753420573.256553640] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420573.355066915] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.760000228881836])
[WARN] [1753420573.356172769] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420573.455914974] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.760000228881836])
[WARN] [1753420573.456970556] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420573.558746385] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420573.559825871] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420573.655663743] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420573.656708988] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420573.755541984] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420573.756608190] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420573.855530116] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420573.856603938] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420573.955854385] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420573.957025777] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420574.055850965] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420574.056918387] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420574.155352876] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420574.156481291] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420574.258269890] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420574.259357120] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420574.356997219] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420574.358119235] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420574.456877221] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420574.458168361] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420574.556573409] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420574.557624767] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420574.656837581] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420574.657895915] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420574.758273338] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420574.759363321] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420574.856927354] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420574.857964150] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420574.956114696] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420574.957236583] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420575.057857662] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420575.059007582] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420575.157009451] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420575.158150827] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420575.256390496] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420575.257380059] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420575.355163779] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420575.357787340] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420575.455265228] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420575.456617105] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420575.556000742] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420575.557239112] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420575.656368693] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420575.657408659] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420575.757603966] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420575.758732381] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420575.856489508] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420575.857575554] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420575.954927774] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420575.956028925] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420576.055134634] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.780000686645508])
[WARN] [1753420576.056213992] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420576.154990604] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.77400016784668])
[WARN] [1753420576.156510199] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420576.256489116] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 30.77400016784668])
[WARN] [1753420576.257892963] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420576.358136657] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.77400016784668])
[WARN] [1753420576.359237583] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420576.455146148] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.77400016784668])
[WARN] [1753420576.456188193] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420576.555789180] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.77400016784668])
[WARN] [1753420576.557614031] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420576.655098031] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 2.930000066757202])
[INFO] [1753420576.658140932] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72000003 4.62599993 2.93000007]
[INFO] [1753420576.661676038] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420576.662547807] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420576.663317684] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420576.664042248] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420576.664788061] [solver_node]: 求解器返回结果: [((1.0749316928912886, 1.0769316928912884), (4.8663166592894145, 4.868316659289415), -1.4057663910861935), ((8.921068307108712, 8.92306830710871), (3.1316833407105853, 3.133683340710585), 1.7358262625035994), ((8.944163971636383, 8.946163971636382), (3.2485986519017955, 3.2505986519017953), 1.8325649909925263), ((1.0518360283636166, 1.0538360283636163), (4.749401348098204, 4.751401348098205), -1.3090276625972668), ((4.749401348098204, 4.751401348098205), (6.946163971636383, 6.948163971636384), -2.8798239893921633), ((5.246598651901794, 5.248598651901795), (1.0518360283636166, 1.0538360283636163), 0.2617686641976299), ((6.825159139291553, 6.827159139291553), (6.938457985658429, 6.94045798565843), 2.893647455412376), ((3.170840860708446, 3.1728408607084457), (1.0595420143415708, 1.0615420143415706), -0.24794519817741736)]
[INFO] [1753420576.756047728] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 2.930000066757202])
[INFO] [1753420576.757607547] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72000003 4.62599993 2.93000007]
[INFO] [1753420576.761178751] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420576.762054295] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420576.762831053] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420576.763558657] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420576.764320023] [solver_node]: 求解器返回结果: [((1.0749316928912886, 1.0769316928912884), (4.8663166592894145, 4.868316659289415), -1.4057663910861935), ((8.921068307108712, 8.92306830710871), (3.1316833407105853, 3.133683340710585), 1.7358262625035994), ((8.944163971636383, 8.946163971636382), (3.2485986519017955, 3.2505986519017953), 1.8325649909925263), ((1.0518360283636166, 1.0538360283636163), (4.749401348098204, 4.751401348098205), -1.3090276625972668), ((4.749401348098204, 4.751401348098205), (6.946163971636383, 6.948163971636384), -2.8798239893921633), ((5.246598651901794, 5.248598651901795), (1.0518360283636166, 1.0538360283636163), 0.2617686641976299), ((6.825159139291553, 6.827159139291553), (6.938457985658429, 6.94045798565843), 2.893647455412376), ((3.170840860708446, 3.1728408607084457), (1.0595420143415708, 1.0615420143415706), -0.24794519817741736)]
[INFO] [1753420576.856811883] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 2.930000066757202])
[INFO] [1753420576.858828068] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72000003 4.62599993 2.93000007]
[INFO] [1753420576.862238947] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420576.863186461] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420576.863931282] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420576.864625669] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420576.865361658] [solver_node]: 求解器返回结果: [((1.0749316928912886, 1.0769316928912884), (4.8663166592894145, 4.868316659289415), -1.4057663910861935), ((8.921068307108712, 8.92306830710871), (3.1316833407105853, 3.133683340710585), 1.7358262625035994), ((8.944163971636383, 8.946163971636382), (3.2485986519017955, 3.2505986519017953), 1.8325649909925263), ((1.0518360283636166, 1.0538360283636163), (4.749401348098204, 4.751401348098205), -1.3090276625972668), ((4.749401348098204, 4.751401348098205), (6.946163971636383, 6.948163971636384), -2.8798239893921633), ((5.246598651901794, 5.248598651901795), (1.0518360283636166, 1.0538360283636163), 0.2617686641976299), ((6.825159139291553, 6.827159139291553), (6.938457985658429, 6.94045798565843), 2.893647455412376), ((3.170840860708446, 3.1728408607084457), (1.0595420143415708, 1.0615420143415706), -0.24794519817741736)]
[INFO] [1753420576.956646733] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 2.930000066757202])
[INFO] [1753420576.959013039] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72000003 4.62599993 2.93000007]
[INFO] [1753420576.962568050] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420576.963444875] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420576.964167423] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420576.964891059] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420576.965671689] [solver_node]: 求解器返回结果: [((1.0749316928912886, 1.0769316928912884), (4.8663166592894145, 4.868316659289415), -1.4057663910861935), ((8.921068307108712, 8.92306830710871), (3.1316833407105853, 3.133683340710585), 1.7358262625035994), ((8.944163971636383, 8.946163971636382), (3.2485986519017955, 3.2505986519017953), 1.8325649909925263), ((1.0518360283636166, 1.0538360283636163), (4.749401348098204, 4.751401348098205), -1.3090276625972668), ((4.749401348098204, 4.751401348098205), (6.946163971636383, 6.948163971636384), -2.8798239893921633), ((5.246598651901794, 5.248598651901795), (1.0518360283636166, 1.0538360283636163), 0.2617686641976299), ((6.825159139291553, 6.827159139291553), (6.938457985658429, 6.94045798565843), 2.893647455412376), ((3.170840860708446, 3.1728408607084457), (1.0595420143415708, 1.0615420143415706), -0.24794519817741736)]
[INFO] [1753420577.055761947] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 2.930000066757202])
[INFO] [1753420577.057592878] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72000003 4.62599993 2.93000007]
[INFO] [1753420577.061886598] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420577.062866370] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420577.063669912] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420577.064455502] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420577.065297285] [solver_node]: 求解器返回结果: [((1.0749316928912886, 1.0769316928912884), (4.8663166592894145, 4.868316659289415), -1.4057663910861935), ((8.921068307108712, 8.92306830710871), (3.1316833407105853, 3.133683340710585), 1.7358262625035994), ((8.944163971636383, 8.946163971636382), (3.2485986519017955, 3.2505986519017953), 1.8325649909925263), ((1.0518360283636166, 1.0538360283636163), (4.749401348098204, 4.751401348098205), -1.3090276625972668), ((4.749401348098204, 4.751401348098205), (6.946163971636383, 6.948163971636384), -2.8798239893921633), ((5.246598651901794, 5.248598651901795), (1.0518360283636166, 1.0538360283636163), 0.2617686641976299), ((6.825159139291553, 6.827159139291553), (6.938457985658429, 6.94045798565843), 2.893647455412376), ((3.170840860708446, 3.1728408607084457), (1.0595420143415708, 1.0615420143415706), -0.24794519817741736)]
[INFO] [1753420577.161901742] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.770999908447266])
[WARN] [1753420577.163025805] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420577.256587105] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.770999908447266])
[WARN] [1753420577.257671551] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420577.355827602] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.770999908447266])
[WARN] [1753420577.356865039] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420577.459484064] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.770999908447266])
[WARN] [1753420577.460502524] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420577.554701537] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.770999908447266])
[WARN] [1753420577.555757247] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420577.655698756] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 2.943000078201294])
[INFO] [1753420577.657218575] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72000003 4.62599993 2.94300008]
[INFO] [1753420577.660589485] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420577.661445349] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420577.662207450] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420577.663008880] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420577.663784230] [solver_node]: 求解器返回结果: [((1.0735403729699187, 1.0755403729699184), (4.859084553737606, 4.861084553737607), -1.3984801171782113), ((8.922459627030081, 8.92445962703008), (3.1389154462623936, 3.1409154462623934), 1.7431125364115816), ((8.943872994417081, 8.94587299441708), (3.247153548626294, 3.249153548626294), 1.8315600659782982), ((1.052127005582919, 1.0541270055829188), (4.750846451373706, 4.752846451373706), -1.3100325876114949), ((4.750846451373705, 4.752846451373705), (6.945872994417081, 6.947872994417081), -2.880828914406391), ((5.245153548626293, 5.247153548626294), (1.052127005582919, 1.0541270055829188), 0.26076373918340173), ((6.812556661114251, 6.814556661114252), (6.938457985658429, 6.94045798565843), 2.893647455412376), ((3.1834433388857475, 3.1854433388857473), (1.0595420143415708, 1.0615420143415706), -0.24794519817741736)]
[INFO] [1753420577.756399167] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 2.943000078201294])
[INFO] [1753420577.757998252] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72000003 4.62599993 2.94300008]
[INFO] [1753420577.761583056] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420577.762565483] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420577.763496677] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420577.764270523] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420577.765072913] [solver_node]: 求解器返回结果: [((1.0735403729699187, 1.0755403729699184), (4.859084553737606, 4.861084553737607), -1.3984801171782113), ((8.922459627030081, 8.92445962703008), (3.1389154462623936, 3.1409154462623934), 1.7431125364115816), ((8.943872994417081, 8.94587299441708), (3.247153548626294, 3.249153548626294), 1.8315600659782982), ((1.052127005582919, 1.0541270055829188), (4.750846451373706, 4.752846451373706), -1.3100325876114949), ((4.750846451373705, 4.752846451373705), (6.945872994417081, 6.947872994417081), -2.880828914406391), ((5.245153548626293, 5.247153548626294), (1.052127005582919, 1.0541270055829188), 0.26076373918340173), ((6.812556661114251, 6.814556661114252), (6.938457985658429, 6.94045798565843), 2.893647455412376), ((3.1834433388857475, 3.1854433388857473), (1.0595420143415708, 1.0615420143415706), -0.24794519817741736)]
[INFO] [1753420577.858403934] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 2.943000078201294])
[INFO] [1753420577.860038476] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72000003 4.62599993 2.94300008]
[INFO] [1753420577.863501900] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420577.864345540] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420577.865116825] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420577.865881135] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420577.866723142] [solver_node]: 求解器返回结果: [((1.0735403729699187, 1.0755403729699184), (4.859084553737606, 4.861084553737607), -1.3984801171782113), ((8.922459627030081, 8.92445962703008), (3.1389154462623936, 3.1409154462623934), 1.7431125364115816), ((8.943872994417081, 8.94587299441708), (3.247153548626294, 3.249153548626294), 1.8315600659782982), ((1.052127005582919, 1.0541270055829188), (4.750846451373706, 4.752846451373706), -1.3100325876114949), ((4.750846451373705, 4.752846451373705), (6.945872994417081, 6.947872994417081), -2.880828914406391), ((5.245153548626293, 5.247153548626294), (1.052127005582919, 1.0541270055829188), 0.26076373918340173), ((6.812556661114251, 6.814556661114252), (6.938457985658429, 6.94045798565843), 2.893647455412376), ((3.1834433388857475, 3.1854433388857473), (1.0595420143415708, 1.0615420143415706), -0.24794519817741736)]
[INFO] [1753420577.954682141] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 2.943000078201294])
[INFO] [1753420577.956310347] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72000003 4.62599993 2.94300008]
[INFO] [1753420577.959735626] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420577.960616195] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420577.961387224] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420577.962142061] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420577.962970885] [solver_node]: 求解器返回结果: [((1.0735403729699187, 1.0755403729699184), (4.859084553737606, 4.861084553737607), -1.3984801171782113), ((8.922459627030081, 8.92445962703008), (3.1389154462623936, 3.1409154462623934), 1.7431125364115816), ((8.943872994417081, 8.94587299441708), (3.247153548626294, 3.249153548626294), 1.8315600659782982), ((1.052127005582919, 1.0541270055829188), (4.750846451373706, 4.752846451373706), -1.3100325876114949), ((4.750846451373705, 4.752846451373705), (6.945872994417081, 6.947872994417081), -2.880828914406391), ((5.245153548626293, 5.247153548626294), (1.052127005582919, 1.0541270055829188), 0.26076373918340173), ((6.812556661114251, 6.814556661114252), (6.938457985658429, 6.94045798565843), 2.893647455412376), ((3.1834433388857475, 3.1854433388857473), (1.0595420143415708, 1.0615420143415706), -0.24794519817741736)]
[INFO] [1753420578.054623971] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 2.943000078201294])
[INFO] [1753420578.056135661] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72000003 4.62599993 2.94300008]
[INFO] [1753420578.060084956] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420578.061256604] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420578.062114260] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420578.062917611] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420578.063667488] [solver_node]: 求解器返回结果: [((1.0735403729699187, 1.0755403729699184), (4.859084553737606, 4.861084553737607), -1.3984801171782113), ((8.922459627030081, 8.92445962703008), (3.1389154462623936, 3.1409154462623934), 1.7431125364115816), ((8.943872994417081, 8.94587299441708), (3.247153548626294, 3.249153548626294), 1.8315600659782982), ((1.052127005582919, 1.0541270055829188), (4.750846451373706, 4.752846451373706), -1.3100325876114949), ((4.750846451373705, 4.752846451373705), (6.945872994417081, 6.947872994417081), -2.880828914406391), ((5.245153548626293, 5.247153548626294), (1.052127005582919, 1.0541270055829188), 0.26076373918340173), ((6.812556661114251, 6.814556661114252), (6.938457985658429, 6.94045798565843), 2.893647455412376), ((3.1834433388857475, 3.1854433388857473), (1.0595420143415708, 1.0615420143415706), -0.24794519817741736)]
[INFO] [1753420578.154618347] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.781999588012695])
[WARN] [1753420578.155674824] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420578.255945144] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.781999588012695])
[WARN] [1753420578.257057047] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420578.355404145] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.781999588012695])
[WARN] [1753420578.356953180] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420578.455015982] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.781999588012695])
[WARN] [1753420578.456449846] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420578.557901222] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.781999588012695])
[WARN] [1753420578.558991397] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420578.654984125] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.781999588012695])
[WARN] [1753420578.656066459] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420578.754925699] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 2.927000045776367])
[INFO] [1753420578.756510031] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72000003 4.62599993 2.92700005]
[INFO] [1753420578.759958383] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420578.760769862] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420578.761958119] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420578.762842592] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420578.763644374] [solver_node]: 求解器返回结果: [((1.0752516575044009, 1.0772516575044007), (4.8679854565563, 4.869985456556301), -1.4074856351522547), ((8.9207483424956, 8.922748342495598), (3.1300145434437, 3.1320145434436997), 1.7341070184375382), ((8.94423158391423, 8.946231583914228), (3.2489343711421124, 3.250934371142112), 1.8327979737876405), ((1.0517684160857708, 1.0537684160857705), (4.749065628857887, 4.751065628857888), -1.3087946798021526), ((4.749065628857887, 4.751065628857888), (6.946231583914229, 6.94823158391423), -2.879591006597049), ((5.246934371142111, 5.248934371142112), (1.0517684160857712, 1.053768416085771), 0.2620016469927441), ((6.8280674212653825, 6.830067421265383), (6.938457985658429, 6.94045798565843), 2.893647455412376), ((3.167932578734617, 3.169932578734617), (1.0595420143415708, 1.0615420143415706), -0.24794519817741736)]
[INFO] [1753420578.855033390] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 2.927000045776367])
[INFO] [1753420578.856538136] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72000003 4.62599993 2.92700005]
[INFO] [1753420578.859875221] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420578.860753965] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420578.861487522] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420578.862166741] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420578.862979084] [solver_node]: 求解器返回结果: [((1.0752516575044009, 1.0772516575044007), (4.8679854565563, 4.869985456556301), -1.4074856351522547), ((8.9207483424956, 8.922748342495598), (3.1300145434437, 3.1320145434436997), 1.7341070184375382), ((8.94423158391423, 8.946231583914228), (3.2489343711421124, 3.250934371142112), 1.8327979737876405), ((1.0517684160857708, 1.0537684160857705), (4.749065628857887, 4.751065628857888), -1.3087946798021526), ((4.749065628857887, 4.751065628857888), (6.946231583914229, 6.94823158391423), -2.879591006597049), ((5.246934371142111, 5.248934371142112), (1.0517684160857712, 1.053768416085771), 0.2620016469927441), ((6.8280674212653825, 6.830067421265383), (6.938457985658429, 6.94045798565843), 2.893647455412376), ((3.167932578734617, 3.169932578734617), (1.0595420143415708, 1.0615420143415706), -0.24794519817741736)]
[INFO] [1753420578.955503299] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 2.927000045776367])
[INFO] [1753420578.956981644] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72000003 4.62599993 2.92700005]
[INFO] [1753420578.960305129] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420578.961157697] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420578.961873365] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420578.962570056] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420578.963324349] [solver_node]: 求解器返回结果: [((1.0752516575044009, 1.0772516575044007), (4.8679854565563, 4.869985456556301), -1.4074856351522547), ((8.9207483424956, 8.922748342495598), (3.1300145434437, 3.1320145434436997), 1.7341070184375382), ((8.94423158391423, 8.946231583914228), (3.2489343711421124, 3.250934371142112), 1.8327979737876405), ((1.0517684160857708, 1.0537684160857705), (4.749065628857887, 4.751065628857888), -1.3087946798021526), ((4.749065628857887, 4.751065628857888), (6.946231583914229, 6.94823158391423), -2.879591006597049), ((5.246934371142111, 5.248934371142112), (1.0517684160857712, 1.053768416085771), 0.2620016469927441), ((6.8280674212653825, 6.830067421265383), (6.938457985658429, 6.94045798565843), 2.893647455412376), ((3.167932578734617, 3.169932578734617), (1.0595420143415708, 1.0615420143415706), -0.24794519817741736)]
[INFO] [1753420579.056797679] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 2.927000045776367])
[INFO] [1753420579.059260404] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72000003 4.62599993 2.92700005]
[INFO] [1753420579.063948407] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420579.065106199] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420579.065945679] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420579.066742597] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420579.068346322] [solver_node]: 求解器返回结果: [((1.0752516575044009, 1.0772516575044007), (4.8679854565563, 4.869985456556301), -1.4074856351522547), ((8.9207483424956, 8.922748342495598), (3.1300145434437, 3.1320145434436997), 1.7341070184375382), ((8.94423158391423, 8.946231583914228), (3.2489343711421124, 3.250934371142112), 1.8327979737876405), ((1.0517684160857708, 1.0537684160857705), (4.749065628857887, 4.751065628857888), -1.3087946798021526), ((4.749065628857887, 4.751065628857888), (6.946231583914229, 6.94823158391423), -2.879591006597049), ((5.246934371142111, 5.248934371142112), (1.0517684160857712, 1.053768416085771), 0.2620016469927441), ((6.8280674212653825, 6.830067421265383), (6.938457985658429, 6.94045798565843), 2.893647455412376), ((3.167932578734617, 3.169932578734617), (1.0595420143415708, 1.0615420143415706), -0.24794519817741736)]
[INFO] [1753420579.158123293] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 2.927000045776367])
[INFO] [1753420579.159718761] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72000003 4.62599993 2.92700005]
[INFO] [1753420579.163470898] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420579.165772531] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420579.166808143] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420579.167833100] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420579.168739045] [solver_node]: 求解器返回结果: [((1.0752516575044009, 1.0772516575044007), (4.8679854565563, 4.869985456556301), -1.4074856351522547), ((8.9207483424956, 8.922748342495598), (3.1300145434437, 3.1320145434436997), 1.7341070184375382), ((8.94423158391423, 8.946231583914228), (3.2489343711421124, 3.250934371142112), 1.8327979737876405), ((1.0517684160857708, 1.0537684160857705), (4.749065628857887, 4.751065628857888), -1.3087946798021526), ((4.749065628857887, 4.751065628857888), (6.946231583914229, 6.94823158391423), -2.879591006597049), ((5.246934371142111, 5.248934371142112), (1.0517684160857712, 1.053768416085771), 0.2620016469927441), ((6.8280674212653825, 6.830067421265383), (6.938457985658429, 6.94045798565843), 2.893647455412376), ((3.167932578734617, 3.169932578734617), (1.0595420143415708, 1.0615420143415706), -0.24794519817741736)]
[INFO] [1753420579.256216944] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 2.940000057220459])
[INFO] [1753420579.257775612] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72000003 4.62599993 2.94000006]
[INFO] [1753420579.261178395] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420579.262010866] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420579.262724966] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420579.263411193] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420579.264176847] [solver_node]: 求解器返回结果: [((1.0738621067266156, 1.0758621067266154), (4.860753545996039, 4.86275354599604), -1.4001387438195856), ((8.922137893273385, 8.924137893273384), (3.1372464540039604, 3.13924645400396), 1.7414539097702073), ((8.94393985528451, 8.945939855284509), (3.247485647855305, 3.249485647855305), 1.8317913033812585), ((1.0520601447154896, 1.0540601447154894), (4.750514352144695, 4.752514352144695), -1.3098013502085346), ((4.750514352144694, 4.752514352144694), (6.945939855284508, 6.947939855284509), -2.880597677003431), ((5.245485647855304, 5.247485647855305), (1.0520601447154903, 1.05406014471549), 0.260994976586362), ((6.81546494308808, 6.817464943088081), (6.938457985658429, 6.94045798565843), 2.893647455412376), ((3.1805350569119186, 3.1825350569119184), (1.0595420143415708, 1.0615420143415706), -0.24794519817741736)]
[INFO] [1753420579.355939505] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 2.940000057220459])
[INFO] [1753420579.360707574] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72000003 4.62599993 2.94000006]
[INFO] [1753420579.372239384] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420579.373196019] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420579.374450102] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420579.375285325] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420579.376085092] [solver_node]: 求解器返回结果: [((1.0738621067266156, 1.0758621067266154), (4.860753545996039, 4.86275354599604), -1.4001387438195856), ((8.922137893273385, 8.924137893273384), (3.1372464540039604, 3.13924645400396), 1.7414539097702073), ((8.94393985528451, 8.945939855284509), (3.247485647855305, 3.249485647855305), 1.8317913033812585), ((1.0520601447154896, 1.0540601447154894), (4.750514352144695, 4.752514352144695), -1.3098013502085346), ((4.750514352144694, 4.752514352144694), (6.945939855284508, 6.947939855284509), -2.880597677003431), ((5.245485647855304, 5.247485647855305), (1.0520601447154903, 1.05406014471549), 0.260994976586362), ((6.81546494308808, 6.817464943088081), (6.938457985658429, 6.94045798565843), 2.893647455412376), ((3.1805350569119186, 3.1825350569119184), (1.0595420143415708, 1.0615420143415706), -0.24794519817741736)]
[INFO] [1753420579.455954842] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 2.940000057220459])
[INFO] [1753420579.457495205] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72000003 4.62599993 2.94000006]
[INFO] [1753420579.463428907] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420579.464387462] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420579.465156795] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420579.465867599] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420579.466625924] [solver_node]: 求解器返回结果: [((1.0738621067266156, 1.0758621067266154), (4.860753545996039, 4.86275354599604), -1.4001387438195856), ((8.922137893273385, 8.924137893273384), (3.1372464540039604, 3.13924645400396), 1.7414539097702073), ((8.94393985528451, 8.945939855284509), (3.247485647855305, 3.249485647855305), 1.8317913033812585), ((1.0520601447154896, 1.0540601447154894), (4.750514352144695, 4.752514352144695), -1.3098013502085346), ((4.750514352144694, 4.752514352144694), (6.945939855284508, 6.947939855284509), -2.880597677003431), ((5.245485647855304, 5.247485647855305), (1.0520601447154903, 1.05406014471549), 0.260994976586362), ((6.81546494308808, 6.817464943088081), (6.938457985658429, 6.94045798565843), 2.893647455412376), ((3.1805350569119186, 3.1825350569119184), (1.0595420143415708, 1.0615420143415706), -0.24794519817741736)]
[INFO] [1753420579.556374959] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 2.940000057220459])
[INFO] [1753420579.557801623] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72000003 4.62599993 2.94000006]
[INFO] [1753420579.561149300] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420579.561997964] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420579.562737696] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420579.563439380] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420579.564194537] [solver_node]: 求解器返回结果: [((1.0738621067266156, 1.0758621067266154), (4.860753545996039, 4.86275354599604), -1.4001387438195856), ((8.922137893273385, 8.924137893273384), (3.1372464540039604, 3.13924645400396), 1.7414539097702073), ((8.94393985528451, 8.945939855284509), (3.247485647855305, 3.249485647855305), 1.8317913033812585), ((1.0520601447154896, 1.0540601447154894), (4.750514352144695, 4.752514352144695), -1.3098013502085346), ((4.750514352144694, 4.752514352144694), (6.945939855284508, 6.947939855284509), -2.880597677003431), ((5.245485647855304, 5.247485647855305), (1.0520601447154903, 1.05406014471549), 0.260994976586362), ((6.81546494308808, 6.817464943088081), (6.938457985658429, 6.94045798565843), 2.893647455412376), ((3.1805350569119186, 3.1825350569119184), (1.0595420143415708, 1.0615420143415706), -0.24794519817741736)]
[INFO] [1753420579.654614310] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 2.940000057220459])
[INFO] [1753420579.656078159] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72000003 4.62599993 2.94000006]
[INFO] [1753420579.659735093] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420579.660564364] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420579.661291585] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420579.661974804] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420579.662908110] [solver_node]: 求解器返回结果: [((1.0738621067266156, 1.0758621067266154), (4.860753545996039, 4.86275354599604), -1.4001387438195856), ((8.922137893273385, 8.924137893273384), (3.1372464540039604, 3.13924645400396), 1.7414539097702073), ((8.94393985528451, 8.945939855284509), (3.247485647855305, 3.249485647855305), 1.8317913033812585), ((1.0520601447154896, 1.0540601447154894), (4.750514352144695, 4.752514352144695), -1.3098013502085346), ((4.750514352144694, 4.752514352144694), (6.945939855284508, 6.947939855284509), -2.880597677003431), ((5.245485647855304, 5.247485647855305), (1.0520601447154903, 1.05406014471549), 0.260994976586362), ((6.81546494308808, 6.817464943088081), (6.938457985658429, 6.94045798565843), 2.893647455412376), ((3.1805350569119186, 3.1825350569119184), (1.0595420143415708, 1.0615420143415706), -0.24794519817741736)]
[INFO] [1753420579.757082996] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 2.9210000038146973])
[INFO] [1753420579.758995369] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72000003 4.62599993 2.921     ]
[INFO] [1753420579.764728969] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420579.765643235] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420579.766410648] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420579.767150605] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420579.767935619] [solver_node]: 求解器返回结果: [((1.0758902180880598, 1.0778902180880596), (4.871322657539865, 4.873322657539866), -1.4109691800344706), ((8.92010978191194, 8.922109781911939), (3.1266773424601344, 3.128677342460134), 1.730623473555322), ((8.944367334002314, 8.946367334002312), (3.2496083410147683, 3.251608341014768), 1.8332651569839278), ((1.0516326659976858, 1.0536326659976856), (4.7483916589852315, 4.750391658985232), -1.3083274966058653), ((4.748391658985231, 4.750391658985231), (6.946367334002312, 6.948367334002313), -2.8791238234007617), ((5.247608341014767, 5.249608341014768), (1.0516326659976865, 1.0536326659976862), 0.26246883018903133), ((6.833883985213039, 6.83588398521304), (6.938457985658429, 6.94045798565843), 2.893647455412376), ((3.1621160147869602, 3.16411601478696), (1.0595420143415708, 1.0615420143415706), -0.24794519817741736)]
[INFO] [1753420579.857459047] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 2.9210000038146973])
[INFO] [1753420579.858968369] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 2.921     ]
[INFO] [1753420579.864102145] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420579.865489255] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420579.866226396] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420579.866953840] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420579.867719750] [solver_node]: 求解器返回结果: [((1.0739156738803557, 1.0759156738803555), (4.871322657539865, 4.873322657539866), -1.4109691800344706), ((8.922084326119645, 8.924084326119644), (3.1266773424601344, 3.128677342460134), 1.730623473555322), ((8.946130467786213, 8.948130467786212), (3.248770733763713, 3.2507707337637126), 1.8326844348991773), ((1.049869532213787, 1.0518695322137868), (4.749229266236287, 4.751229266236288), -1.3089082186906158), ((4.749229266236286, 4.751229266236287), (6.9481304677862115, 6.950130467786212), -2.879704545485512), ((5.246770733763712, 5.248770733763712), (1.0498695322137876, 1.0518695322137874), 0.2618881081042809), ((6.833669947869422, 6.835669947869422), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((3.162330052130577, 3.164330052130577), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420579.962091473] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 2.9210000038146973])
[INFO] [1753420579.964015495] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 2.921     ]
[INFO] [1753420579.974967769] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420579.976987601] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420579.977733382] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420579.978424505] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420579.979415701] [solver_node]: 求解器返回结果: [((1.0739156738803557, 1.0759156738803555), (4.871322657539865, 4.873322657539866), -1.4109691800344706), ((8.922084326119645, 8.924084326119644), (3.1266773424601344, 3.128677342460134), 1.730623473555322), ((8.946130467786213, 8.948130467786212), (3.248770733763713, 3.2507707337637126), 1.8326844348991773), ((1.049869532213787, 1.0518695322137868), (4.749229266236287, 4.751229266236288), -1.3089082186906158), ((4.749229266236286, 4.751229266236287), (6.9481304677862115, 6.950130467786212), -2.879704545485512), ((5.246770733763712, 5.248770733763712), (1.0498695322137876, 1.0518695322137874), 0.2618881081042809), ((6.833669947869422, 6.835669947869422), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((3.162330052130577, 3.164330052130577), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420580.055461281] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 2.9210000038146973])
[INFO] [1753420580.056916906] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 2.921     ]
[INFO] [1753420580.060161092] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420580.060964635] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420580.061701263] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420580.062377410] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420580.063177336] [solver_node]: 求解器返回结果: [((1.0739156738803557, 1.0759156738803555), (4.871322657539865, 4.873322657539866), -1.4109691800344706), ((8.922084326119645, 8.924084326119644), (3.1266773424601344, 3.128677342460134), 1.730623473555322), ((8.946130467786213, 8.948130467786212), (3.248770733763713, 3.2507707337637126), 1.8326844348991773), ((1.049869532213787, 1.0518695322137868), (4.749229266236287, 4.751229266236288), -1.3089082186906158), ((4.749229266236286, 4.751229266236287), (6.9481304677862115, 6.950130467786212), -2.879704545485512), ((5.246770733763712, 5.248770733763712), (1.0498695322137876, 1.0518695322137874), 0.2618881081042809), ((6.833669947869422, 6.835669947869422), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((3.162330052130577, 3.164330052130577), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420580.156285249] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 2.9210000038146973])
[INFO] [1753420580.162380076] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 2.921     ]
[INFO] [1753420580.166219767] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420580.167097423] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420580.167800931] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420580.168483318] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420580.169269196] [solver_node]: 求解器返回结果: [((1.0739156738803557, 1.0759156738803555), (4.871322657539865, 4.873322657539866), -1.4109691800344706), ((8.922084326119645, 8.924084326119644), (3.1266773424601344, 3.128677342460134), 1.730623473555322), ((8.946130467786213, 8.948130467786212), (3.248770733763713, 3.2507707337637126), 1.8326844348991773), ((1.049869532213787, 1.0518695322137868), (4.749229266236287, 4.751229266236288), -1.3089082186906158), ((4.749229266236286, 4.751229266236287), (6.9481304677862115, 6.950130467786212), -2.879704545485512), ((5.246770733763712, 5.248770733763712), (1.0498695322137876, 1.0518695322137874), 0.2618881081042809), ((6.833669947869422, 6.835669947869422), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((3.162330052130577, 3.164330052130577), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420580.260096661] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 2.0880000591278076])
[INFO] [1753420580.261519805] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 2.08800006]
[INFO] [1753420580.264454895] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420580.265259205] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420580.266000474] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420580.266765200] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420580.267578374] [solver_node]: 求解器返回结果: [((8.974641545459697, 8.976641545459696), (3.3888558955658827, 3.3908558955658825), 1.9180104491930512), ((1.0213584545403025, 1.0233584545403023), (4.609144104434117, 4.611144104434118), -1.223582204396742), ((8.938298263543228, 8.940298263543227), (2.3547252772022262, 2.356725277202226), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (5.643274722797774, 5.645274722797775), -1.818362052271038), ((4.609144104434117, 4.611144104434118), (6.976641545459697, 6.9786415454596975), -2.7943785311916383), ((5.386855895565882, 5.388855895565882), (1.0213584545403027, 1.0233584545403025), 0.3472141223981547), ((7.641274722797774, 7.643274722797774), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((2.354725277202226, 2.3567252772022256), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420580.355446589] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 2.0880000591278076])
[INFO] [1753420580.356956711] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71899998 4.62599993 2.08800006]
[INFO] [1753420580.359880889] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420580.360686767] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420580.361415108] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420580.362176761] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420580.363011728] [solver_node]: 求解器返回结果: [((8.97384193151827, 8.97584193151827), (3.3895400019350848, 3.3915400019350845), 1.9183819602321908), ((1.0221580684817295, 1.0241580684817293), (4.608459998064915, 4.610459998064916), -1.2232106933576024), ((8.937378088787433, 8.939378088787432), (2.3546570570315537, 2.3566570570315535), 1.3230408615162075), ((1.058621911212567, 1.0606219112125668), (5.643342942968446, 5.645342942968447), -1.8185517920735856), ((4.608459998064915, 4.610459998064916), (6.9758419315182705, 6.977841931518271), -2.794007020152499), ((5.387540001935084, 5.389540001935084), (1.022158068481729, 1.0241580684817289), 0.3475856334372942), ((7.641342942968445, 7.643342942968446), (6.939378088787432, 6.941378088787433), 2.893837188311104), ((2.3546570570315537, 2.3566570570315535), (1.058621911212567, 1.0606219112125668), -0.247755465278689)]
[INFO] [1753420580.455986037] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 2.0880000591278076])
[INFO] [1753420580.457489439] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71899998 4.62599993 2.08800006]
[INFO] [1753420580.460580854] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420580.461430477] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420580.462236932] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420580.462990233] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420580.463770255] [solver_node]: 求解器返回结果: [((8.97384193151827, 8.97584193151827), (3.3895400019350848, 3.3915400019350845), 1.9183819602321908), ((1.0221580684817295, 1.0241580684817293), (4.608459998064915, 4.610459998064916), -1.2232106933576024), ((8.937378088787433, 8.939378088787432), (2.3546570570315537, 2.3566570570315535), 1.3230408615162075), ((1.058621911212567, 1.0606219112125668), (5.643342942968446, 5.645342942968447), -1.8185517920735856), ((4.608459998064915, 4.610459998064916), (6.9758419315182705, 6.977841931518271), -2.794007020152499), ((5.387540001935084, 5.389540001935084), (1.022158068481729, 1.0241580684817289), 0.3475856334372942), ((7.641342942968445, 7.643342942968446), (6.939378088787432, 6.941378088787433), 2.893837188311104), ((2.3546570570315537, 2.3566570570315535), (1.058621911212567, 1.0606219112125668), -0.247755465278689)]
[INFO] [1753420580.556808438] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 2.0880000591278076])
[INFO] [1753420580.558303392] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71899998 4.62599993 2.08800006]
[INFO] [1753420580.561334292] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420580.562144203] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420580.562929121] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420580.563642933] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420580.564419018] [solver_node]: 求解器返回结果: [((8.97384193151827, 8.97584193151827), (3.3895400019350848, 3.3915400019350845), 1.9183819602321908), ((1.0221580684817295, 1.0241580684817293), (4.608459998064915, 4.610459998064916), -1.2232106933576024), ((8.937378088787433, 8.939378088787432), (2.3546570570315537, 2.3566570570315535), 1.3230408615162075), ((1.058621911212567, 1.0606219112125668), (5.643342942968446, 5.645342942968447), -1.8185517920735856), ((4.608459998064915, 4.610459998064916), (6.9758419315182705, 6.977841931518271), -2.794007020152499), ((5.387540001935084, 5.389540001935084), (1.022158068481729, 1.0241580684817289), 0.3475856334372942), ((7.641342942968445, 7.643342942968446), (6.939378088787432, 6.941378088787433), 2.893837188311104), ((2.3546570570315537, 2.3566570570315535), (1.058621911212567, 1.0606219112125668), -0.247755465278689)]
[INFO] [1753420580.654755366] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 2.0880000591278076])
[INFO] [1753420580.656281072] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71899998 4.62599993 2.08800006]
[INFO] [1753420580.659450601] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420580.660341698] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420580.661156025] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420580.661927438] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420580.662759493] [solver_node]: 求解器返回结果: [((8.97384193151827, 8.97584193151827), (3.3895400019350848, 3.3915400019350845), 1.9183819602321908), ((1.0221580684817295, 1.0241580684817293), (4.608459998064915, 4.610459998064916), -1.2232106933576024), ((8.937378088787433, 8.939378088787432), (2.3546570570315537, 2.3566570570315535), 1.3230408615162075), ((1.058621911212567, 1.0606219112125668), (5.643342942968446, 5.645342942968447), -1.8185517920735856), ((4.608459998064915, 4.610459998064916), (6.9758419315182705, 6.977841931518271), -2.794007020152499), ((5.387540001935084, 5.389540001935084), (1.022158068481729, 1.0241580684817289), 0.3475856334372942), ((7.641342942968445, 7.643342942968446), (6.939378088787432, 6.941378088787433), 2.893837188311104), ((2.3546570570315537, 2.3566570570315535), (1.058621911212567, 1.0606219112125668), -0.247755465278689)]
[INFO] [1753420580.758416470] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 0.5220000147819519])
[INFO] [1753420580.760423726] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71899998 4.62599993 0.52200001]
[INFO] [1753420580.764974509] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420580.766252048] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420580.768777463] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420580.769675216] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420580.770464582] [solver_node]: 求解器返回结果: [((9.253771430797668, 9.255771430797667), (4.711504397527761, 4.713504397527761), 2.385110002384203), ((0.7422285692023326, 0.7442285692023326), (3.2864956024722374, 3.288495602472237), -0.7564826512055898), ((8.937378088787433, 8.939378088787432), (0.8364715528437867, 0.8384715528437867), 1.3230408615162075), ((1.058621911212567, 1.0606219112125668), (7.161528447156213, 7.163528447156214), -1.8185517920735856), ((3.286495602472238, 3.2884956024722376), (7.255771430797667, 7.257771430797668), -2.3272789780004866), ((6.709504397527762, 6.711504397527762), (0.7422285692023326, 0.7442285692023326), 0.8143136755893068), ((9.159528447156212, 9.161528447156211), (6.939378088787432, 6.941378088787433), 2.893837188311104), ((0.8364715528437867, 0.8384715528437867), (1.058621911212567, 1.0606219112125668), -0.247755465278689)]
[INFO] [1753420580.860246130] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.5220000147819519])
[INFO] [1753420580.861835486] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.52200001]
[INFO] [1753420580.864844307] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420580.865666633] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420580.866409086] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420580.867138291] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420580.868021803] [solver_node]: 求解器返回结果: [((9.253995593850986, 9.255995593850985), (4.70935026718147, 4.711350267181471), 2.384530683373904), ((0.7420044061490132, 0.7440044061490132), (3.2886497328185285, 3.2906497328185282), -0.757061970215889), ((8.938298263543228, 8.940298263543227), (0.8364669370685954, 0.8384669370685954), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.1615330629314045, 7.163533062931405), -1.818362052271038), ((3.288649732818529, 3.2906497328185287), (7.255995593850987, 7.257995593850987), -2.3278582970107857), ((6.707350267181471, 6.709350267181471), (0.7420044061490131, 0.7440044061490131), 0.8137343565790076), ((9.159533062931404, 9.161533062931403), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.8364669370685954, 0.8384669370685954), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420580.960217723] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.5440000295639038])
[INFO] [1753420580.962019981] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.54400003]
[INFO] [1753420580.965442765] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420580.966333574] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420580.967529095] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420580.969156724] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420580.969998348] [solver_node]: 求解器返回结果: [((9.243432595531795, 9.245432595531794), (4.660104122080804, 4.662104122080804), 2.3712043530870948), ((0.7525674044682057, 0.7545674044682057), (3.337895877919195, 3.339895877919195), -0.7703883005026982), ((8.938298263543228, 8.940298263543227), (0.8577962505934325, 0.8597962505934325), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.1402037494065675, 7.142203749406568), -1.818362052271038), ((3.3378958779191934, 3.339895877919193), (7.245432595531794, 7.247432595531794), -2.3411846272975945), ((6.658104122080805, 6.6601041220808055), (0.7525674044682058, 0.7545674044682058), 0.8004080262921984), ((9.138203749406568, 9.140203749406567), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.8577962505934325, 0.8597962505934325), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420581.054777037] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.5440000295639038])
[INFO] [1753420581.056246166] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.54400003]
[INFO] [1753420581.059297163] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420581.060184356] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420581.060979354] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420581.061721583] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420581.062493156] [solver_node]: 求解器返回结果: [((9.243432595531795, 9.245432595531794), (4.660104122080804, 4.662104122080804), 2.3712043530870948), ((0.7525674044682057, 0.7545674044682057), (3.337895877919195, 3.339895877919195), -0.7703883005026982), ((8.938298263543228, 8.940298263543227), (0.8577962505934325, 0.8597962505934325), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.1402037494065675, 7.142203749406568), -1.818362052271038), ((3.3378958779191934, 3.339895877919193), (7.245432595531794, 7.247432595531794), -2.3411846272975945), ((6.658104122080805, 6.6601041220808055), (0.7525674044682058, 0.7545674044682058), 0.8004080262921984), ((9.138203749406568, 9.140203749406567), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.8577962505934325, 0.8597962505934325), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420581.154840057] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.5440000295639038])
[INFO] [1753420581.156307842] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.54400003]
[INFO] [1753420581.159235187] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420581.160041034] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420581.160791455] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420581.161507091] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420581.162287721] [solver_node]: 求解器返回结果: [((9.243432595531795, 9.245432595531794), (4.660104122080804, 4.662104122080804), 2.3712043530870948), ((0.7525674044682057, 0.7545674044682057), (3.337895877919195, 3.339895877919195), -0.7703883005026982), ((8.938298263543228, 8.940298263543227), (0.8577962505934325, 0.8597962505934325), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.1402037494065675, 7.142203749406568), -1.818362052271038), ((3.3378958779191934, 3.339895877919193), (7.245432595531794, 7.247432595531794), -2.3411846272975945), ((6.658104122080805, 6.6601041220808055), (0.7525674044682058, 0.7545674044682058), 0.8004080262921984), ((9.138203749406568, 9.140203749406567), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.8577962505934325, 0.8597962505934325), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420581.254695615] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.5440000295639038])
[INFO] [1753420581.256220905] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.54400003]
[INFO] [1753420581.259330624] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420581.260263546] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420581.261037200] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420581.261794181] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420581.262629276] [solver_node]: 求解器返回结果: [((9.243432595531795, 9.245432595531794), (4.660104122080804, 4.662104122080804), 2.3712043530870948), ((0.7525674044682057, 0.7545674044682057), (3.337895877919195, 3.339895877919195), -0.7703883005026982), ((8.938298263543228, 8.940298263543227), (0.8577962505934325, 0.8597962505934325), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.1402037494065675, 7.142203749406568), -1.818362052271038), ((3.3378958779191934, 3.339895877919193), (7.245432595531794, 7.247432595531794), -2.3411846272975945), ((6.658104122080805, 6.6601041220808055), (0.7525674044682058, 0.7545674044682058), 0.8004080262921984), ((9.138203749406568, 9.140203749406567), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.8577962505934325, 0.8597962505934325), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420581.359126917] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.5440000295639038])
[INFO] [1753420581.360651887] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.54400003]
[INFO] [1753420581.363610946] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420581.364476474] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420581.365431029] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420581.366217611] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420581.367075683] [solver_node]: 求解器返回结果: [((9.243432595531795, 9.245432595531794), (4.660104122080804, 4.662104122080804), 2.3712043530870948), ((0.7525674044682057, 0.7545674044682057), (3.337895877919195, 3.339895877919195), -0.7703883005026982), ((8.938298263543228, 8.940298263543227), (0.8577962505934325, 0.8597962505934325), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.1402037494065675, 7.142203749406568), -1.818362052271038), ((3.3378958779191934, 3.339895877919193), (7.245432595531794, 7.247432595531794), -2.3411846272975945), ((6.658104122080805, 6.6601041220808055), (0.7525674044682058, 0.7545674044682058), 0.8004080262921984), ((9.138203749406568, 9.140203749406567), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.8577962505934325, 0.8597962505934325), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420581.456514118] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.5429999828338623])
[INFO] [1753420581.458741636] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.54299998]
[INFO] [1753420581.463550122] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420581.464453508] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420581.465210297] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420581.465909612] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420581.466697122] [solver_node]: 求解器返回结果: [((9.243904070898285, 9.245904070898284), (4.6623028687683785, 4.664302868768379), 2.371802771668089), ((0.7520959291017141, 0.7540959291017141), (3.335697131231622, 3.337697131231622), -0.7697898819217042), ((8.938298263543228, 8.940298263543227), (0.8568266916883157, 0.8588266916883157), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.141173308311684, 7.143173308311685), -1.818362052271038), ((3.335697131231621, 3.3376971312316206), (7.245904070898286, 7.2479040708982865), -2.3405862087166005), ((6.660302868768377, 6.662302868768378), (0.7520959291017143, 0.7540959291017143), 0.8010064448731925), ((9.139173308311685, 9.141173308311684), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.8568266916883157, 0.8588266916883157), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420581.557192515] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.5429999828338623])
[INFO] [1753420581.558759791] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.54299998]
[INFO] [1753420581.561730402] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420581.562537464] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420581.563314830] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420581.565609294] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420581.566362499] [solver_node]: 求解器返回结果: [((9.243904070898285, 9.245904070898284), (4.6623028687683785, 4.664302868768379), 2.371802771668089), ((0.7520959291017141, 0.7540959291017141), (3.335697131231622, 3.337697131231622), -0.7697898819217042), ((8.938298263543228, 8.940298263543227), (0.8568266916883157, 0.8588266916883157), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.141173308311684, 7.143173308311685), -1.818362052271038), ((3.335697131231621, 3.3376971312316206), (7.245904070898286, 7.2479040708982865), -2.3405862087166005), ((6.660302868768377, 6.662302868768378), (0.7520959291017143, 0.7540959291017143), 0.8010064448731925), ((9.139173308311685, 9.141173308311684), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.8568266916883157, 0.8588266916883157), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420581.657047721] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.5419999957084656])
[INFO] [1753420581.659496142] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.542     ]
[INFO] [1753420581.663110227] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420581.664109295] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420581.664921669] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420581.665658202] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420581.667996059] [solver_node]: 求解器返回结果: [((9.244376335808811, 9.24637633580881), (4.664505234614913, 4.666505234614914), 2.3724018495098305), ((0.7516236641911883, 0.7536236641911883), (3.3334947653850855, 3.3354947653850853), -0.7691908040799627), ((8.938298263543228, 8.940298263543227), (0.8558571905707126, 0.8578571905707126), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.142142809429287, 7.144142809429288), -1.818362052271038), ((3.3334947653850855, 3.3354947653850853), (7.246376335808812, 7.248376335808812), -2.339987130874859), ((6.662505234614914, 6.664505234614914), (0.7516236641911883, 0.7536236641911883), 0.8016055227149339), ((9.140142809429287, 9.142142809429286), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.8558571905707126, 0.8578571905707126), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420581.755029307] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.5410000085830688])
[INFO] [1753420581.757377565] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.54100001]
[INFO] [1753420581.760753499] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420581.761671189] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420581.762476907] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420581.763245985] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420581.764053911] [solver_node]: 求解器返回结果: [((9.244849419726368, 9.246849419726367), (4.66671135680506, 4.668711356805061), 2.373001623038929), ((0.7511505802736312, 0.7531505802736312), (3.3312886431949384, 3.3332886431949382), -0.7685910305508642), ((8.938298263543228, 8.940298263543227), (0.8548876894531094, 0.8568876894531094), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.14311231054689, 7.1451123105468906), -1.818362052271038), ((3.3312886431949367, 3.3332886431949365), (7.246849419726368, 7.248849419726369), -2.3393873573457604), ((6.664711356805061, 6.666711356805061), (0.7511505802736312, 0.7531505802736312), 0.8022052962440325), ((9.141112310546891, 9.14311231054689), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.8548876894531094, 0.8568876894531094), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420581.855372943] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.5410000085830688])
[INFO] [1753420581.857043901] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.54100001]
[INFO] [1753420581.862414772] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420581.864501614] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420581.866132443] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420581.867522562] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420581.868315992] [solver_node]: 求解器返回结果: [((9.244849419726368, 9.246849419726367), (4.66671135680506, 4.668711356805061), 2.373001623038929), ((0.7511505802736312, 0.7531505802736312), (3.3312886431949384, 3.3332886431949382), -0.7685910305508642), ((8.938298263543228, 8.940298263543227), (0.8548876894531094, 0.8568876894531094), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.14311231054689, 7.1451123105468906), -1.818362052271038), ((3.3312886431949367, 3.3332886431949365), (7.246849419726368, 7.248849419726369), -2.3393873573457604), ((6.664711356805061, 6.666711356805061), (0.7511505802736312, 0.7531505802736312), 0.8022052962440325), ((9.141112310546891, 9.14311231054689), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.8548876894531094, 0.8568876894531094), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420581.954626436] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.5270000100135803])
[INFO] [1753420581.956119950] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.52700001]
[INFO] [1753420581.959011935] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420581.959818357] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420581.960553738] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420581.961243837] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420581.961981586] [solver_node]: 求解器返回结果: [((9.251559456009288, 9.253559456009286), (4.69799539647019, 4.69999539647019), 2.38147204524123), ((0.7444405439907132, 0.7464405439907132), (3.30000460352981, 3.30200460352981), -0.7601206083485631), ((8.938298263543228, 8.940298263543227), (0.8413145004441246, 0.8433145004441246), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.156685499555875, 7.158685499555876), -1.818362052271038), ((3.30000460352981, 3.30200460352981), (7.253559456009286, 7.255559456009287), -2.3309169351434598), ((6.695995396470189, 6.69799539647019), (0.7444405439907132, 0.7464405439907132), 0.8106757184463336), ((9.154685499555875, 9.156685499555874), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.8413145004441246, 0.8433145004441246), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420582.054592526] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.5270000100135803])
[INFO] [1753420582.056104440] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.52700001]
[INFO] [1753420582.059126861] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420582.059927587] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420582.060637911] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420582.061344458] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420582.062096064] [solver_node]: 求解器返回结果: [((9.251559456009288, 9.253559456009286), (4.69799539647019, 4.69999539647019), 2.38147204524123), ((0.7444405439907132, 0.7464405439907132), (3.30000460352981, 3.30200460352981), -0.7601206083485631), ((8.938298263543228, 8.940298263543227), (0.8413145004441246, 0.8433145004441246), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.156685499555875, 7.158685499555876), -1.818362052271038), ((3.30000460352981, 3.30200460352981), (7.253559456009286, 7.255559456009287), -2.3309169351434598), ((6.695995396470189, 6.69799539647019), (0.7444405439907132, 0.7464405439907132), 0.8106757184463336), ((9.154685499555875, 9.156685499555874), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.8413145004441246, 0.8433145004441246), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420582.154691516] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.5329999923706055])
[INFO] [1753420582.156141284] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.53299999]
[INFO] [1753420582.159070518] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420582.159889869] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420582.160653826] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420582.161366518] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420582.162149260] [solver_node]: 求解器返回结果: [((9.248663799286398, 9.250663799286396), (4.684496580599897, 4.686496580599898), 2.3778250218123893), ((0.7473362007136019, 0.7493362007136019), (3.313503419400102, 3.315503419400102), -0.7637676317774037), ((8.938298263543228, 8.940298263543227), (0.8471315649372569, 0.8491315649372569), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.150868435062743, 7.152868435062744), -1.818362052271038), ((3.313503419400102, 3.315503419400102), (7.250663799286397, 7.252663799286398), -2.3345639585723004), ((6.682496580599897, 6.684496580599897), (0.7473362007136019, 0.7493362007136019), 0.8070286950174929), ((9.148868435062743, 9.150868435062742), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.8471315649372569, 0.8491315649372569), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420582.255895624] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.5339999794960022])
[INFO] [1753420582.258235178] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.53399998]
[INFO] [1753420582.265160363] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420582.266044708] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420582.266980830] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420582.268001370] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420582.268894035] [solver_node]: 求解器返回结果: [((9.248184113171726, 9.250184113171725), (4.682260181794402, 4.684260181794403), 2.3772196546289117), ((0.7478158868282745, 0.7498158868282745), (3.3157398182055977, 3.3177398182055975), -0.7643729989608815), ((8.938298263543228, 8.940298263543227), (0.8481010660548601, 0.8501010660548601), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.149898933945139, 7.15189893394514), -1.818362052271038), ((3.3157398182055973, 3.317739818205597), (7.250184113171725, 7.252184113171726), -2.335169325755778), ((6.680260181794401, 6.682260181794402), (0.7478158868282744, 0.7498158868282744), 0.8064233278340152), ((9.14789893394514, 9.149898933945138), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.8481010660548601, 0.8501010660548601), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420582.356700010] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.5339999794960022])
[INFO] [1753420582.358361432] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.53399998]
[INFO] [1753420582.361517776] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420582.362548397] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420582.363837937] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420582.364709545] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420582.365669220] [solver_node]: 求解器返回结果: [((9.248184113171726, 9.250184113171725), (4.682260181794402, 4.684260181794403), 2.3772196546289117), ((0.7478158868282745, 0.7498158868282745), (3.3157398182055977, 3.3177398182055975), -0.7643729989608815), ((8.938298263543228, 8.940298263543227), (0.8481010660548601, 0.8501010660548601), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.149898933945139, 7.15189893394514), -1.818362052271038), ((3.3157398182055973, 3.317739818205597), (7.250184113171725, 7.252184113171726), -2.335169325755778), ((6.680260181794401, 6.682260181794402), (0.7478158868282744, 0.7498158868282744), 0.8064233278340152), ((9.14789893394514, 9.149898933945138), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.8481010660548601, 0.8501010660548601), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420582.457090015] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.5759999752044678])
[INFO] [1753420582.459894478] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.57599998]
[INFO] [1753420582.464119012] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420582.465056670] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420582.465843476] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420582.466591145] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420582.467409504] [solver_node]: 求解器返回结果: [((9.228769590389037, 9.230769590389036), (4.591690598466617, 4.593690598466618), 2.352418127907567), ((0.7672304096109627, 0.7692304096109627), (3.406309401533382, 3.4083094015333817), -0.7891745256822262), ((8.938298263543228, 8.940298263543227), (0.8888206330818146, 0.8908206330818146), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.109179366918185, 7.1111793669181855), -1.818362052271038), ((3.406309401533382, 3.4083094015333817), (7.230769590389037, 7.232769590389037), -2.359970852477123), ((6.589690598466617, 6.591690598466617), (0.7672304096109627, 0.7692304096109627), 0.7816218011126703), ((9.107179366918185, 9.109179366918184), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.8888206330818146, 0.8908206330818146), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420582.557307024] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.5759999752044678])
[INFO] [1753420582.559404235] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.57599998]
[INFO] [1753420582.563755717] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420582.566106214] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420582.566939486] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420582.567659314] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420582.568451400] [solver_node]: 求解器返回结果: [((9.228769590389037, 9.230769590389036), (4.591690598466617, 4.593690598466618), 2.352418127907567), ((0.7672304096109627, 0.7692304096109627), (3.406309401533382, 3.4083094015333817), -0.7891745256822262), ((8.938298263543228, 8.940298263543227), (0.8888206330818146, 0.8908206330818146), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.109179366918185, 7.1111793669181855), -1.818362052271038), ((3.406309401533382, 3.4083094015333817), (7.230769590389037, 7.232769590389037), -2.359970852477123), ((6.589690598466617, 6.591690598466617), (0.7672304096109627, 0.7692304096109627), 0.7816218011126703), ((9.107179366918185, 9.109179366918184), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.8888206330818146, 0.8908206330818146), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420582.655358341] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.6010000109672546])
[INFO] [1753420582.656870063] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.60100001]
[INFO] [1753420582.661201800] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420582.662275782] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420582.663017627] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420582.663718351] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420582.664465956] [solver_node]: 求解器返回结果: [((9.217866821106524, 9.219866821106523), (4.540779836882542, 4.542779836882542), 2.338219387209921), ((0.778133178893475, 0.780133178893475), (3.457220163117457, 3.4592201631174566), -0.8033732663798719), ((8.938298263543228, 8.940298263543227), (0.9130585077469747, 0.9150585077469747), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.084941492253025, 7.086941492253025), -1.818362052271038), ((3.4572201631174555, 3.4592201631174553), (7.219866821106525, 7.221866821106525), -2.374169593174768), ((6.538779836882543, 6.540779836882543), (0.778133178893475, 0.780133178893475), 0.7674230604150247), ((9.082941492253026, 9.084941492253025), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.9130585077469747, 0.9150585077469747), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420582.756220488] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.621999979019165])
[INFO] [1753420582.762041099] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.62199998]
[INFO] [1753420582.767957872] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420582.768801384] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420582.769542716] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420582.770269585] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420582.771064551] [solver_node]: 求解器返回结果: [((9.209066490621094, 9.211066490621093), (4.499659496702155, 4.501659496702156), 2.3266067273335356), ((0.7869335093789057, 0.7889335093789057), (3.4983405032978454, 3.500340503297845), -0.8149859262562578), ((8.938298263543228, 8.940298263543227), (0.9334182623666951, 0.9354182623666951), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.064581737633304, 7.066581737633305), -1.818362052271038), ((3.498340503297844, 3.500340503297844), (7.211066490621094, 7.213066490621094), -2.385782253051154), ((6.497659496702155, 6.499659496702155), (0.7869335093789059, 0.7889335093789059), 0.7558104005386389), ((9.062581737633305, 9.064581737633304), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.9334182623666951, 0.9354182623666951), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420582.855891178] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.621999979019165])
[INFO] [1753420582.857564793] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.62199998]
[INFO] [1753420582.860570829] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420582.861376451] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420582.862081079] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420582.862804363] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420582.863547104] [solver_node]: 求解器返回结果: [((9.209066490621094, 9.211066490621093), (4.499659496702155, 4.501659496702156), 2.3266067273335356), ((0.7869335093789057, 0.7889335093789057), (3.4983405032978454, 3.500340503297845), -0.8149859262562578), ((8.938298263543228, 8.940298263543227), (0.9334182623666951, 0.9354182623666951), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.064581737633304, 7.066581737633305), -1.818362052271038), ((3.498340503297844, 3.500340503297844), (7.211066490621094, 7.213066490621094), -2.385782253051154), ((6.497659496702155, 6.499659496702155), (0.7869335093789059, 0.7889335093789059), 0.7558104005386389), ((9.062581737633305, 9.064581737633304), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.9334182623666951, 0.9354182623666951), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420582.955967031] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.621999979019165])
[INFO] [1753420582.958252855] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.62199998]
[INFO] [1753420582.961385966] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420582.962320520] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420582.963816370] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420582.964613545] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420582.965382782] [solver_node]: 求解器返回结果: [((9.209066490621094, 9.211066490621093), (4.499659496702155, 4.501659496702156), 2.3266067273335356), ((0.7869335093789057, 0.7889335093789057), (3.4983405032978454, 3.500340503297845), -0.8149859262562578), ((8.938298263543228, 8.940298263543227), (0.9334182623666951, 0.9354182623666951), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.064581737633304, 7.066581737633305), -1.818362052271038), ((3.498340503297844, 3.500340503297844), (7.211066490621094, 7.213066490621094), -2.385782253051154), ((6.497659496702155, 6.499659496702155), (0.7869335093789059, 0.7889335093789059), 0.7558104005386389), ((9.062581737633305, 9.064581737633304), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.9334182623666951, 0.9354182623666951), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420583.055856607] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.621999979019165])
[INFO] [1753420583.057280263] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.62199998]
[INFO] [1753420583.060190104] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420583.061062065] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420583.061768196] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420583.062432663] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420583.063201677] [solver_node]: 求解器返回结果: [((9.209066490621094, 9.211066490621093), (4.499659496702155, 4.501659496702156), 2.3266067273335356), ((0.7869335093789057, 0.7889335093789057), (3.4983405032978454, 3.500340503297845), -0.8149859262562578), ((8.938298263543228, 8.940298263543227), (0.9334182623666951, 0.9354182623666951), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.064581737633304, 7.066581737633305), -1.818362052271038), ((3.498340503297844, 3.500340503297844), (7.211066490621094, 7.213066490621094), -2.385782253051154), ((6.497659496702155, 6.499659496702155), (0.7869335093789059, 0.7889335093789059), 0.7558104005386389), ((9.062581737633305, 9.064581737633304), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.9334182623666951, 0.9354182623666951), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420583.156622976] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.621999979019165])
[INFO] [1753420583.158492725] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.62199998]
[INFO] [1753420583.162497221] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420583.163747143] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420583.164950121] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420583.165657341] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420583.166405266] [solver_node]: 求解器返回结果: [((9.209066490621094, 9.211066490621093), (4.499659496702155, 4.501659496702156), 2.3266067273335356), ((0.7869335093789057, 0.7889335093789057), (3.4983405032978454, 3.500340503297845), -0.8149859262562578), ((8.938298263543228, 8.940298263543227), (0.9334182623666951, 0.9354182623666951), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.064581737633304, 7.066581737633305), -1.818362052271038), ((3.498340503297844, 3.500340503297844), (7.211066490621094, 7.213066490621094), -2.385782253051154), ((6.497659496702155, 6.499659496702155), (0.7869335093789059, 0.7889335093789059), 0.7558104005386389), ((9.062581737633305, 9.064581737633304), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.9334182623666951, 0.9354182623666951), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420583.257804941] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.621999979019165])
[INFO] [1753420583.259351448] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.62199998]
[INFO] [1753420583.263893143] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420583.264726223] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420583.265423586] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420583.266089589] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420583.266867594] [solver_node]: 求解器返回结果: [((9.209066490621094, 9.211066490621093), (4.499659496702155, 4.501659496702156), 2.3266067273335356), ((0.7869335093789057, 0.7889335093789057), (3.4983405032978454, 3.500340503297845), -0.8149859262562578), ((8.938298263543228, 8.940298263543227), (0.9334182623666951, 0.9354182623666951), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.064581737633304, 7.066581737633305), -1.818362052271038), ((3.498340503297844, 3.500340503297844), (7.211066490621094, 7.213066490621094), -2.385782253051154), ((6.497659496702155, 6.499659496702155), (0.7869335093789059, 0.7889335093789059), 0.7558104005386389), ((9.062581737633305, 9.064581737633304), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.9334182623666951, 0.9354182623666951), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420583.355208560] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.621999979019165])
[INFO] [1753420583.356666361] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.62199998]
[INFO] [1753420583.359685549] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420583.360626184] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420583.361488928] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420583.362243893] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420583.363190159] [solver_node]: 求解器返回结果: [((9.209066490621094, 9.211066490621093), (4.499659496702155, 4.501659496702156), 2.3266067273335356), ((0.7869335093789057, 0.7889335093789057), (3.4983405032978454, 3.500340503297845), -0.8149859262562578), ((8.938298263543228, 8.940298263543227), (0.9334182623666951, 0.9354182623666951), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.064581737633304, 7.066581737633305), -1.818362052271038), ((3.498340503297844, 3.500340503297844), (7.211066490621094, 7.213066490621094), -2.385782253051154), ((6.497659496702155, 6.499659496702155), (0.7869335093789059, 0.7889335093789059), 0.7558104005386389), ((9.062581737633305, 9.064581737633304), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.9334182623666951, 0.9354182623666951), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420583.456448127] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625999927520752, 0.621999979019165])
[INFO] [1753420583.458688381] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71799999 4.62599993 0.62199998]
[INFO] [1753420583.463017334] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420583.464264217] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420583.465444090] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420583.466174191] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420583.467334799] [solver_node]: 求解器返回结果: [((9.209066490621094, 9.211066490621093), (4.499659496702155, 4.501659496702156), 2.3266067273335356), ((0.7869335093789057, 0.7889335093789057), (3.4983405032978454, 3.500340503297845), -0.8149859262562578), ((8.938298263543228, 8.940298263543227), (0.9334182623666951, 0.9354182623666951), 1.3232306013187551), ((1.0577017364567725, 1.0597017364567722), (7.064581737633304, 7.066581737633305), -1.818362052271038), ((3.498340503297844, 3.500340503297844), (7.211066490621094, 7.213066490621094), -2.385782253051154), ((6.497659496702155, 6.499659496702155), (0.7869335093789059, 0.7889335093789059), 0.7558104005386389), ((9.062581737633305, 9.064581737633304), (6.940298263543227, 6.942298263543227), 2.8940269281136515), ((0.9334182623666951, 0.9354182623666951), (1.0577017364567727, 1.0597017364567725), -0.24756572547614145)]
[INFO] [1753420583.554872318] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 0.621999979019165])
[INFO] [1753420583.556319719] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71899998 4.62599993 0.62199998]
[INFO] [1753420583.559262873] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420583.560065167] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420583.560810916] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420583.561847585] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420583.562600854] [solver_node]: 求解器返回结果: [((9.208775657500771, 9.21077565750077), (4.501699564938815, 4.503699564938816), 2.327186001424113), ((0.7872243424992283, 0.7892243424992283), (3.4963004350611846, 3.4983004350611844), -0.8144066521656802), ((8.937378088787433, 8.939378088787432), (0.9334182270615701, 0.9354182270615701), 1.3230408615162075), ((1.058621911212567, 1.0606219112125668), (7.064581772938429, 7.06658177293843), -1.8185517920735856), ((3.496300435061184, 3.498300435061184), (7.210775657500771, 7.212775657500772), -2.3852029789605766), ((6.4996995649388145, 6.501699564938815), (0.7872243424992282, 0.7892243424992282), 0.7563896746292165), ((9.06258177293843, 9.064581772938428), (6.939378088787432, 6.941378088787433), 2.893837188311104), ((0.9334182270615701, 0.9354182270615701), (1.058621911212567, 1.0606219112125668), -0.247755465278689)]
[INFO] [1753420583.654873898] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 0.621999979019165])
[INFO] [1753420583.656309586] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71899998 4.62599993 0.62199998]
[INFO] [1753420583.659280549] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420583.660110556] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420583.660869874] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420583.661597158] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420583.663224948] [solver_node]: 求解器返回结果: [((9.208775657500771, 9.21077565750077), (4.501699564938815, 4.503699564938816), 2.327186001424113), ((0.7872243424992283, 0.7892243424992283), (3.4963004350611846, 3.4983004350611844), -0.8144066521656802), ((8.937378088787433, 8.939378088787432), (0.9334182270615701, 0.9354182270615701), 1.3230408615162075), ((1.058621911212567, 1.0606219112125668), (7.064581772938429, 7.06658177293843), -1.8185517920735856), ((3.496300435061184, 3.498300435061184), (7.210775657500771, 7.212775657500772), -2.3852029789605766), ((6.4996995649388145, 6.501699564938815), (0.7872243424992282, 0.7892243424992282), 0.7563896746292165), ((9.06258177293843, 9.064581772938428), (6.939378088787432, 6.941378088787433), 2.893837188311104), ((0.9334182270615701, 0.9354182270615701), (1.058621911212567, 1.0606219112125668), -0.247755465278689)]
[INFO] [1753420583.754838677] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 0.621999979019165])
[INFO] [1753420583.756310974] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71899998 4.62599993 0.62199998]
[INFO] [1753420583.759370131] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420583.760192138] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420583.760934367] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420583.761689108] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420583.762476938] [solver_node]: 求解器返回结果: [((9.208775657500771, 9.21077565750077), (4.501699564938815, 4.503699564938816), 2.327186001424113), ((0.7872243424992283, 0.7892243424992283), (3.4963004350611846, 3.4983004350611844), -0.8144066521656802), ((8.937378088787433, 8.939378088787432), (0.9334182270615701, 0.9354182270615701), 1.3230408615162075), ((1.058621911212567, 1.0606219112125668), (7.064581772938429, 7.06658177293843), -1.8185517920735856), ((3.496300435061184, 3.498300435061184), (7.210775657500771, 7.212775657500772), -2.3852029789605766), ((6.4996995649388145, 6.501699564938815), (0.7872243424992282, 0.7892243424992282), 0.7563896746292165), ((9.06258177293843, 9.064581772938428), (6.939378088787432, 6.941378088787433), 2.893837188311104), ((0.9334182270615701, 0.9354182270615701), (1.058621911212567, 1.0606219112125668), -0.247755465278689)]
[INFO] [1753420583.856147941] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.76099967956543])
[WARN] [1753420583.857246404] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420583.958479570] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.76099967956543])
[WARN] [1753420583.959547440] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420584.055526604] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.76099967956543])
[WARN] [1753420584.056613578] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420584.155615867] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.76099967956543])
[WARN] [1753420584.158088096] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420584.255613191] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.76099967956543])
[WARN] [1753420584.256654340] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420584.356535885] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625999927520752, 30.761999130249023])
[WARN] [1753420584.357591723] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420584.455436219] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.761999130249023])
[WARN] [1753420584.456494297] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420584.554913753] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7200000286102295, 4.625999927520752, 30.761999130249023])
[WARN] [1753420584.555964918] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420584.656787578] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7509999871253967, 4.625999927520752, 30.761999130249023])
[WARN] [1753420584.657976155] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420584.756439133] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8040000200271606, 4.625999927520752, 30.761999130249023])
[WARN] [1753420584.757883141] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420584.858465346] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8040000200271606, 4.625999927520752, 30.761999130249023])
[WARN] [1753420584.859571137] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420584.955198067] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8730000257492065, 4.625999927520752, 30.761999130249023])
[WARN] [1753420584.956543288] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420585.054882647] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8730000257492065, 4.625999927520752, 30.761999130249023])
[WARN] [1753420585.055928468] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420585.155957890] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8730000257492065, 4.625999927520752, 30.761999130249023])
[WARN] [1753420585.157184005] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420585.255967088] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8679999709129333, 4.625999927520752, 30.761999130249023])
[WARN] [1753420585.256988044] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420585.356061728] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8679999709129333, 4.625999927520752, 30.761999130249023])
[WARN] [1753420585.357126461] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420585.455679362] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8679999709129333, 4.625999927520752, 30.761999130249023])
[WARN] [1753420585.456701663] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420585.558173845] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8679999709129333, 4.625999927520752, 30.761999130249023])
[WARN] [1753420585.559263636] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420585.656378352] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8679999709129333, 4.625999927520752, 30.761999130249023])
[WARN] [1753420585.657452942] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420585.755145339] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8679999709129333, 4.625999927520752, 30.761999130249023])
[WARN] [1753420585.756171256] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420585.856354378] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8679999709129333, 4.625999927520752, 30.761999130249023])
[WARN] [1753420585.858856496] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420585.955397245] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8679999709129333, 4.625999927520752, 30.761999130249023])
[WARN] [1753420585.956499323] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420586.056816882] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8679999709129333, 4.625999927520752, 30.761999130249023])
[WARN] [1753420586.058262298] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420586.155959496] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8679999709129333, 4.625999927520752, 30.761999130249023])
[WARN] [1753420586.157008197] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420586.255008411] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8679999709129333, 4.625999927520752, 30.761999130249023])
[WARN] [1753420586.256039096] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420586.355049418] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8679999709129333, 4.625999927520752, 30.761999130249023])
[WARN] [1753420586.356095944] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420586.457471164] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8679999709129333, 4.625999927520752, 30.761999130249023])
[WARN] [1753420586.458578459] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420586.555482899] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8679999709129333, 4.625999927520752, 30.761999130249023])
[WARN] [1753420586.556564017] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420586.655069685] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8679999709129333, 4.625999927520752, 30.761999130249023])
[WARN] [1753420586.656276151] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420586.754967648] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8679999709129333, 4.625999927520752, 30.761999130249023])
[WARN] [1753420586.756016638] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420586.855887080] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8679999709129333, 4.625999927520752, 30.761999130249023])
[WARN] [1753420586.857233262] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420586.954902266] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8679999709129333, 4.625999927520752, 30.761999130249023])
[WARN] [1753420586.955954744] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420587.055190609] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8339999914169312, 4.625999927520752, 30.761999130249023])
[WARN] [1753420587.056444276] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420587.157713350] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8339999914169312, 4.625999927520752, 30.761999130249023])
[WARN] [1753420587.158884967] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420587.255273905] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6729999780654907, 4.625999927520752, 30.761999130249023])
[WARN] [1753420587.256602934] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420587.357491838] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.5120000243186951, 4.625999927520752, 30.761999130249023])
[WARN] [1753420587.358536379] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420587.458144511] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625999927520752, 30.761999130249023])
[WARN] [1753420587.461114482] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420587.558394548] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625999927520752, 30.761999130249023])
[WARN] [1753420587.559503699] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420587.655841756] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625999927520752, 30.761999130249023])
[WARN] [1753420587.657000668] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420587.761353957] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625999927520752, 30.761999130249023])
[WARN] [1753420587.762622088] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420587.856128897] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625999927520752, 30.761999130249023])
[WARN] [1753420587.857225440] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420587.957980804] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625999927520752, 30.761999130249023])
[WARN] [1753420587.959022945] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420588.055747476] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625999927520752, 30.761999130249023])
[WARN] [1753420588.056865268] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420588.158938941] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625999927520752, 30.761999130249023])
[WARN] [1753420588.159980635] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420588.256771248] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625999927520752, 30.761999130249023])
[WARN] [1753420588.257803853] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420588.355123026] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625999927520752, 30.761999130249023])
[WARN] [1753420588.357001670] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420588.455049215] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625999927520752, 30.761999130249023])
[WARN] [1753420588.456653708] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420588.555503675] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625999927520752, 30.761999130249023])
[WARN] [1753420588.556618170] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420588.656878321] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625999927520752, 30.761999130249023])
[WARN] [1753420588.660642203] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420588.755578524] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625999927520752, 30.761999130249023])
[WARN] [1753420588.756833184] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420588.855272419] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625999927520752, 30.761999130249023])
[WARN] [1753420588.856479909] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420588.955479737] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625999927520752, 2.9210000038146973])
[INFO] [1753420588.957600852] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.38       4.62599993 2.921     ]
[WARN] [1753420588.959024220] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420588.959909717] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420588.961935693] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420589.054959098] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38100001215934753, 4.625999927520752, 2.9210000038146973])
[INFO] [1753420589.057710279] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.38100001 4.62599993 2.921     ]
[WARN] [1753420589.058944618] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420589.059745600] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420589.060633945] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420589.156655098] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38100001215934753, 4.625999927520752, 2.9210000038146973])
[INFO] [1753420589.158459820] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.38100001 4.62599993 2.921     ]
[WARN] [1753420589.161054677] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420589.166997755] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420589.171026828] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420589.255309828] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38100001215934753, 4.625999927520752, 2.9210000038146973])
[INFO] [1753420589.256848943] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.38100001 4.62599993 2.921     ]
[WARN] [1753420589.257941166] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420589.258739460] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420589.259588060] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420589.355200722] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38100001215934753, 4.625999927520752, 2.9210000038146973])
[INFO] [1753420589.357373838] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.38100001 4.62599993 2.921     ]
[WARN] [1753420589.359006908] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420589.360177085] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420589.361503106] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420589.456493702] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38100001215934753, 4.625999927520752, 2.9210000038146973])
[INFO] [1753420589.457988528] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.38100001 4.62599993 2.921     ]
[WARN] [1753420589.459251091] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420589.460034505] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420589.460884161] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420589.555775842] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38100001215934753, 4.625999927520752, 2.9170000553131104])
[INFO] [1753420589.557486098] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.38100001 4.62599993 2.91700006]
[WARN] [1753420589.558920346] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420589.559875189] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420589.560919282] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420589.654885050] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38100001215934753, 4.625999927520752, 2.9170000553131104])
[INFO] [1753420589.656418693] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.38100001 4.62599993 2.91700006]
[WARN] [1753420589.657569381] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420589.658486590] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420589.659389720] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420589.756166734] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38100001215934753, 4.625999927520752, 2.9170000553131104])
[INFO] [1753420589.757819676] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.38100001 4.62599993 2.91700006]
[WARN] [1753420589.759185794] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420589.760160958] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420589.761297725] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420589.855316678] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38100001215934753, 4.625999927520752, 2.9170000553131104])
[INFO] [1753420589.857410433] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.38100001 4.62599993 2.91700006]
[WARN] [1753420589.859144977] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420589.860049771] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420589.861015718] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420589.955601534] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.9170000553131104])
[INFO] [1753420589.958221576] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.91700006]
[WARN] [1753420589.961998994] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420589.966596882] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420589.968868882] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420590.055150242] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.9119999408721924])
[INFO] [1753420590.056653741] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.91199994]
[WARN] [1753420590.060503320] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420590.063012831] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420590.065184284] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420590.155010544] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.9119999408721924])
[INFO] [1753420590.156768321] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.91199994]
[WARN] [1753420590.158034020] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420590.158969726] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420590.159912665] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420590.255893561] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.9119999408721924])
[INFO] [1753420590.257609993] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.91199994]
[WARN] [1753420590.258891245] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420590.259705252] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420590.260558332] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420590.355120789] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.9119999408721924])
[INFO] [1753420590.357170254] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.91199994]
[WARN] [1753420590.358883390] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420590.361040347] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420590.362027894] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420590.454961249] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.9119999408721924])
[INFO] [1753420590.456565582] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.91199994]
[WARN] [1753420590.457899220] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420590.458907248] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420590.460007855] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420590.555980335] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.9179999828338623])
[INFO] [1753420590.557567867] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.91799998]
[WARN] [1753420590.558703323] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420590.559496657] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420590.560330633] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420590.654807967] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.9179999828338623])
[INFO] [1753420590.656331882] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.91799998]
[WARN] [1753420590.657467338] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420590.663703256] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420590.665706160] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420590.754721998] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.9179999828338623])
[INFO] [1753420590.756273337] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.91799998]
[WARN] [1753420590.757413273] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420590.759063399] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420590.760820280] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420590.855251118] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.9179999828338623])
[INFO] [1753420590.857292359] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.91799998]
[WARN] [1753420590.859025431] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420590.860004051] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420590.860957517] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420590.961327241] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.9179999828338623])
[INFO] [1753420590.965474013] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.91799998]
[WARN] [1753420590.967561815] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420590.969987419] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420590.970882260] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420591.056001893] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.924999952316284])
[INFO] [1753420591.059007097] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.92499995]
[WARN] [1753420591.060603206] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420591.061713893] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420591.062637567] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420591.155496457] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.924999952316284])
[INFO] [1753420591.160146219] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.92499995]
[WARN] [1753420591.162481228] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420591.163643469] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420591.165045972] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420591.254838600] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.924999952316284])
[INFO] [1753420591.256348402] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.92499995]
[WARN] [1753420591.257520371] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420591.258357995] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420591.260170397] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420591.355942393] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.924999952316284])
[INFO] [1753420591.357588071] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.92499995]
[WARN] [1753420591.362641364] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420591.363750771] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420591.365249693] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420591.455104755] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.924999952316284])
[INFO] [1753420591.457289872] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.92499995]
[WARN] [1753420591.458836892] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420591.459891673] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420591.461321057] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420591.556342951] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.934000015258789])
[INFO] [1753420591.557841553] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.93400002]
[WARN] [1753420591.561026699] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420591.563465583] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420591.565918676] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420591.655156536] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.934000015258789])
[INFO] [1753420591.656678851] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.93400002]
[WARN] [1753420591.660778421] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420591.662490757] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420591.665004268] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420591.755441778] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.934000015258789])
[INFO] [1753420591.756951132] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.93400002]
[WARN] [1753420591.764044067] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420591.764983869] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420591.765830517] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420591.856673510] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.934000015258789])
[INFO] [1753420591.861415179] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.93400002]
[WARN] [1753420591.863601224] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420591.864463904] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420591.867311376] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420591.955823424] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.934000015258789])
[INFO] [1753420591.960847501] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.93400002]
[WARN] [1753420591.965484335] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420591.969366043] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420591.971807136] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420592.054897976] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.934000015258789])
[INFO] [1753420592.056883312] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.93400002]
[WARN] [1753420592.058445564] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420592.059401718] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420592.060452084] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420592.155010478] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.934000015258789])
[INFO] [1753420592.156866402] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.93400002]
[WARN] [1753420592.159193539] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420592.160170655] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420592.161237884] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420592.255100803] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.934000015258789])
[INFO] [1753420592.256704752] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.93400002]
[WARN] [1753420592.258306013] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420592.259418268] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420592.260413496] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420592.355392158] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.934000015258789])
[INFO] [1753420592.357410902] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.93400002]
[WARN] [1753420592.358943745] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420592.359880091] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420592.360840214] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420592.454747390] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.934000015258789])
[INFO] [1753420592.456289897] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.93400002]
[WARN] [1753420592.458301698] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420592.460398076] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420592.463302350] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420592.555907057] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.933000087738037])
[INFO] [1753420592.558752065] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.93300009]
[WARN] [1753420592.563955187] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420592.564844268] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420592.565690691] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420592.654933032] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.933000087738037])
[INFO] [1753420592.657397613] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.93300009]
[WARN] [1753420592.659192640] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420592.660411746] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420592.661601379] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420592.757000917] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.933000087738037])
[INFO] [1753420592.758610946] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.93300009]
[WARN] [1753420592.760140429] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420592.761214955] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420592.762343915] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420592.855260503] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.933000087738037])
[INFO] [1753420592.858349517] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.93300009]
[WARN] [1753420592.862466465] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420592.865708091] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420592.866649110] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420592.955549041] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.933000087738037])
[INFO] [1753420592.960399577] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.93300009]
[WARN] [1753420592.961889251] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420592.962860190] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420592.964293542] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420593.055545732] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.933000087738037])
[INFO] [1753420593.059648087] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.93300009]
[WARN] [1753420593.063815372] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420593.064877866] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420593.066724381] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420593.155317201] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.934000015258789])
[INFO] [1753420593.156880541] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.93400002]
[WARN] [1753420593.161314105] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420593.165039809] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420593.169436189] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420593.255668110] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.934000015258789])
[INFO] [1753420593.257838091] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.93400002]
[WARN] [1753420593.259373302] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420593.261528786] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420593.262820183] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420593.355405306] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.934000015258789])
[INFO] [1753420593.357464948] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.93400002]
[WARN] [1753420593.360234081] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420593.361193692] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420593.362121462] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420593.454877854] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.934000015258789])
[INFO] [1753420593.456965433] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.93400002]
[WARN] [1753420593.458559206] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420593.459697606] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420593.460808069] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420593.556506047] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 2.934000015258789])
[INFO] [1753420593.558056587] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.382      4.62599993 2.93400002]
[WARN] [1753420593.559295598] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420593.560103300] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420593.560991229] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420593.655447701] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625999927520752, 30.766000747680664])
[WARN] [1753420593.658699600] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420593.755614989] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.382999986410141, 4.625999927520752, 30.766000747680664])
[WARN] [1753420593.756669418] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420593.856303316] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.382999986410141, 4.625999927520752, 30.766000747680664])
[WARN] [1753420593.857406802] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420593.954922560] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.382999986410141, 4.625, 30.766000747680664])
[WARN] [1753420593.955982302] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420594.055000886] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.382999986410141, 4.625, 30.766000747680664])
[WARN] [1753420594.056135094] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420594.161931308] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.382999986410141, 4.625, 30.77199935913086])
[WARN] [1753420594.164443251] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420594.255086080] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.382999986410141, 4.625, 30.77199935913086])
[WARN] [1753420594.256437894] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420594.355860138] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.382999986410141, 4.625, 30.77199935913086])
[WARN] [1753420594.357420758] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420594.455334159] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.382999986410141, 4.625, 30.77199935913086])
[WARN] [1753420594.457414282] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420594.555657708] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.382999986410141, 4.625, 30.77199935913086])
[WARN] [1753420594.557205784] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420594.655368632] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.382999986410141, 4.625, 30.763999938964844])
[WARN] [1753420594.656666429] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420594.755188007] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.382999986410141, 4.625, 30.763999938964844])
[WARN] [1753420594.756450763] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420594.854982582] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625, 30.763999938964844])
[WARN] [1753420594.856043443] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420594.955910052] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625, 30.763999938964844])
[WARN] [1753420594.956926720] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420595.059122578] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625, 30.763999938964844])
[WARN] [1753420595.060629660] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420595.155373310] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625, 30.77199935913086])
[WARN] [1753420595.156779749] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420595.255435892] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625, 30.77199935913086])
[WARN] [1753420595.256806299] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420595.354756086] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625, 30.77199935913086])
[WARN] [1753420595.355862549] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420595.455226232] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625, 30.77199935913086])
[WARN] [1753420595.456648704] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420595.555017479] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625, 30.77199935913086])
[WARN] [1753420595.556517393] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420595.655058397] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625, 30.77199935913086])
[WARN] [1753420595.656113338] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420595.755180085] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625, 30.77199935913086])
[WARN] [1753420595.756296372] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420595.855413584] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625, 30.77199935913086])
[WARN] [1753420595.856497935] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420595.955601674] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625, 30.77199935913086])
[WARN] [1753420595.956681609] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420596.055275862] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625, 30.77199935913086])
[WARN] [1753420596.056547930] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420596.155205418] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38199999928474426, 4.625, 30.77199935913086])
[WARN] [1753420596.156547280] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420596.255153278] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38100001215934753, 4.625, 2.937000036239624])
[INFO] [1753420596.257206328] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.38100001 4.625      2.93700004]
[WARN] [1753420596.259385173] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420596.260400177] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420596.261385037] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420596.355240054] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38100001215934753, 4.625, 2.937000036239624])
[INFO] [1753420596.357234766] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.38100001 4.625      2.93700004]
[WARN] [1753420596.358527570] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420596.359460876] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420596.360530570] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420596.456060034] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.38100001215934753, 4.625, 2.937000036239624])
[INFO] [1753420596.457976952] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.38100001 4.625      2.93700004]
[WARN] [1753420596.459472066] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420596.460571265] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420596.462007785] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420596.554963577] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625, 2.937000036239624])
[INFO] [1753420596.558532317] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.38       4.625      2.93700004]
[WARN] [1753420596.559882979] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420596.560761372] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420596.561864731] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420596.655313048] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625, 2.937000036239624])
[INFO] [1753420596.656805986] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.38       4.625      2.93700004]
[WARN] [1753420596.657929410] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420596.658717752] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420596.659650866] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420596.754915939] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625, 41.82099914550781])
[WARN] [1753420596.755992417] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420596.855079677] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625, 41.82099914550781])
[WARN] [1753420596.856282367] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420596.955362458] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625, 41.82099914550781])
[WARN] [1753420596.956622046] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420597.055571830] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625, 41.82099914550781])
[WARN] [1753420597.058931156] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420597.155497226] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.3799999952316284, 4.625, 41.82099914550781])
[WARN] [1753420597.157844172] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420597.255145303] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625, 2.937000036239624])
[INFO] [1753420597.257216817] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71899998 4.625      2.93700004]
[INFO] [1753420597.261762896] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420597.266966946] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420597.268848023] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420597.269821235] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420597.270695371] [solver_node]: 求解器返回结果: [((1.073304581192428, 1.0753045811924278), (4.86199304207085, 4.863993042070851), -1.4023711835606543), ((8.922695418807573, 8.924695418807572), (3.13600695792915, 3.1380069579291496), 1.7392214700291388), ((8.944889429886532, 8.94688942988653), (3.24836917674326, 3.2503691767432596), 1.8317338414152093), ((1.0511105701134675, 1.0531105701134673), (4.74963082325674, 4.751630823256741), -1.3098588121745838), ((4.749630823256739, 4.75163082325674), (6.946889429886532, 6.948889429886533), -2.8806551389694803), ((5.246369176743259, 5.248369176743259), (1.051110570113468, 1.0531105701134678), 0.26093751462031295), ((6.818292672055261, 6.8202926720552615), (6.939390572408894, 6.941390572408895), 2.893789189183472), ((3.1777073279447383, 3.179707327944738), (1.0586094275911058, 1.0606094275911055), -0.24780346440632128)]
[INFO] [1753420597.355579161] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625, 2.937000036239624])
[INFO] [1753420597.357142309] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71899998 4.625      2.93700004]
[INFO] [1753420597.360776267] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420597.361747398] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420597.363045163] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420597.364946336] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420597.365990941] [solver_node]: 求解器返回结果: [((1.073304581192428, 1.0753045811924278), (4.86199304207085, 4.863993042070851), -1.4023711835606543), ((8.922695418807573, 8.924695418807572), (3.13600695792915, 3.1380069579291496), 1.7392214700291388), ((8.944889429886532, 8.94688942988653), (3.24836917674326, 3.2503691767432596), 1.8317338414152093), ((1.0511105701134675, 1.0531105701134673), (4.74963082325674, 4.751630823256741), -1.3098588121745838), ((4.749630823256739, 4.75163082325674), (6.946889429886532, 6.948889429886533), -2.8806551389694803), ((5.246369176743259, 5.248369176743259), (1.051110570113468, 1.0531105701134678), 0.26093751462031295), ((6.818292672055261, 6.8202926720552615), (6.939390572408894, 6.941390572408895), 2.893789189183472), ((3.1777073279447383, 3.179707327944738), (1.0586094275911058, 1.0606094275911055), -0.24780346440632128)]
[INFO] [1753420597.454901212] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.41100001335144043, 4.625, 2.937000036239624])
[INFO] [1753420597.457684266] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.41100001 4.625      2.93700004]
[WARN] [1753420597.459005968] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420597.460938790] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420597.463064033] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420597.554651340] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.41100001335144043, 4.625, 2.937000036239624])
[INFO] [1753420597.556307898] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.41100001 4.625      2.93700004]
[WARN] [1753420597.558183631] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420597.559421809] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420597.561779092] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420597.654769733] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.5239999890327454, 4.625, 2.937000036239624])
[INFO] [1753420597.658034433] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.52399999 4.625      2.93700004]
[INFO] [1753420597.662067506] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420597.663016557] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420597.663771490] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420597.664666779] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420597.665469233] [solver_node]: 求解器返回结果: [((0.8810637215774954, 0.8830637215774954), (4.86199304207085, 4.863993042070851), -1.4023711835606543), ((9.114936278422505, 9.116936278422504), (3.13600695792915, 3.1380069579291496), 1.7392214700291388), ((9.121062976430402, 9.1230629764304), (3.1740611843217104, 3.17606118432171), 1.7745582782160465), ((0.8749370235695979, 0.8769370235695979), (4.823938815678289, 4.82593881567829), -1.3670343753737466), ((4.823938815678289, 4.82593881567829), (7.123062976430401, 7.125062976430402), -2.937830702168643), ((5.172061184321709, 5.17406118432171), (0.8749370235695985, 0.8769370235695985), 0.20376195142115), ((6.799301319740667, 6.801301319740667), (7.121116662472872, 7.123116662472873), 2.9311260883768644), ((3.196698680259332, 3.198698680259332), (0.8768833375271282, 0.8788833375271282), -0.21046656521292892)]
[INFO] [1753420597.755101573] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6359999775886536, 4.625, 2.9189999103546143])
[INFO] [1753420597.757161631] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.63599998 4.625      2.91899991]
[INFO] [1753420597.761985254] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420597.764600431] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420597.765803985] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420597.766864879] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420597.768260854] [solver_node]: 求解器返回结果: [((0.9932558094351222, 0.9952558094351222), (4.872003536011111, 4.874003536011112), -1.4127342375284675), ((9.002744190564878, 9.004744190564876), (3.1259964639888884, 3.127996463988888), 1.7288584160613256), ((9.01921650986129, 9.021216509861288), (3.216771063506917, 3.218771063506917), 1.8088658198375422), ((0.9767834901387104, 0.9787834901387104), (4.781228936493083, 4.783228936493083), -1.3327268337522509), ((4.781228936493083, 4.783228936493083), (7.021216509861289, 7.02321650986129), -2.9035231605471474), ((5.214771063506916, 5.216771063506917), (0.9767834901387104, 0.9787834901387104), 0.23806949304264574), ((6.827225135239248, 6.829225135239248), (7.01618673638494, 7.018186736384941), 2.909601537642468), ((3.1687748647607514, 3.170774864760751), (0.9818132636150594, 0.9838132636150594), -0.23199111594732472)]
[INFO] [1753420597.855303425] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7170000076293945, 4.625, 2.9189999103546143])
[INFO] [1753420597.856751305] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71700001 4.625      2.91899991]
[INFO] [1753420597.861352298] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420597.862347718] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420597.865022961] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420597.866601310] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420597.867527960] [solver_node]: 求解器返回结果: [((1.0732461540177582, 1.075246154017758), (4.872003536011111, 4.874003536011112), -1.4127342375284675), ((8.92275384598224, 8.92475384598224), (3.1259964639888884, 3.127996463988888), 1.7288584160613256), ((8.947057355321027, 8.949057355321026), (3.249542409560022, 3.2515424095600216), 1.8325496407314374), ((1.0489426446789736, 1.0509426446789734), (4.748457590439978, 4.750457590439979), -1.3090430128583557), ((4.748457590439978, 4.750457590439979), (6.949057355321026, 6.951057355321026), -2.8798393396532522), ((5.247542409560021, 5.249542409560021), (1.0489426446789736, 1.0509426446789734), 0.261753313936541), ((6.8355292565683525, 6.837529256568353), (6.941230988021615, 6.943230988021615), 2.894168754405389), ((3.160470743431646, 3.162470743431646), (1.056769011978385, 1.0587690119783848), -0.24742389918440436)]
[INFO] [1753420597.958901756] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7170000076293945, 4.625, 2.9189999103546143])
[INFO] [1753420597.961671850] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71700001 4.625      2.91899991]
[INFO] [1753420597.967102882] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420597.968002395] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420597.968735024] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420597.969416195] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420597.970165944] [solver_node]: 求解器返回结果: [((1.0732461540177582, 1.075246154017758), (4.872003536011111, 4.874003536011112), -1.4127342375284675), ((8.92275384598224, 8.92475384598224), (3.1259964639888884, 3.127996463988888), 1.7288584160613256), ((8.947057355321027, 8.949057355321026), (3.249542409560022, 3.2515424095600216), 1.8325496407314374), ((1.0489426446789736, 1.0509426446789734), (4.748457590439978, 4.750457590439979), -1.3090430128583557), ((4.748457590439978, 4.750457590439979), (6.949057355321026, 6.951057355321026), -2.8798393396532522), ((5.247542409560021, 5.249542409560021), (1.0489426446789736, 1.0509426446789734), 0.261753313936541), ((6.8355292565683525, 6.837529256568353), (6.941230988021615, 6.943230988021615), 2.894168754405389), ((3.160470743431646, 3.162470743431646), (1.056769011978385, 1.0587690119783848), -0.24742389918440436)]
[INFO] [1753420598.059303454] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7170000076293945, 4.625, 2.9189999103546143])
[INFO] [1753420598.061906183] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71700001 4.625      2.91899991]
[INFO] [1753420598.077479004] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420598.079843422] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420598.082413703] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420598.084486209] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420598.085415483] [solver_node]: 求解器返回结果: [((1.0732461540177582, 1.075246154017758), (4.872003536011111, 4.874003536011112), -1.4127342375284675), ((8.92275384598224, 8.92475384598224), (3.1259964639888884, 3.127996463988888), 1.7288584160613256), ((8.947057355321027, 8.949057355321026), (3.249542409560022, 3.2515424095600216), 1.8325496407314374), ((1.0489426446789736, 1.0509426446789734), (4.748457590439978, 4.750457590439979), -1.3090430128583557), ((4.748457590439978, 4.750457590439979), (6.949057355321026, 6.951057355321026), -2.8798393396532522), ((5.247542409560021, 5.249542409560021), (1.0489426446789736, 1.0509426446789734), 0.261753313936541), ((6.8355292565683525, 6.837529256568353), (6.941230988021615, 6.943230988021615), 2.894168754405389), ((3.160470743431646, 3.162470743431646), (1.056769011978385, 1.0587690119783848), -0.24742389918440436)]
[INFO] [1753420598.160769374] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7170000076293945, 4.625, 2.9189999103546143])
[INFO] [1753420598.162386635] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.71700001 4.625      2.91899991]
[INFO] [1753420598.165725865] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420598.168181966] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420598.169112040] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420598.171450890] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420598.172725486] [solver_node]: 求解器返回结果: [((1.0732461540177582, 1.075246154017758), (4.872003536011111, 4.874003536011112), -1.4127342375284675), ((8.92275384598224, 8.92475384598224), (3.1259964639888884, 3.127996463988888), 1.7288584160613256), ((8.947057355321027, 8.949057355321026), (3.249542409560022, 3.2515424095600216), 1.8325496407314374), ((1.0489426446789736, 1.0509426446789734), (4.748457590439978, 4.750457590439979), -1.3090430128583557), ((4.748457590439978, 4.750457590439979), (6.949057355321026, 6.951057355321026), -2.8798393396532522), ((5.247542409560021, 5.249542409560021), (1.0489426446789736, 1.0509426446789734), 0.261753313936541), ((6.8355292565683525, 6.837529256568353), (6.941230988021615, 6.943230988021615), 2.894168754405389), ((3.160470743431646, 3.162470743431646), (1.056769011978385, 1.0587690119783848), -0.24742389918440436)]
[INFO] [1753420598.255934701] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7179999947547913, 4.625, 30.763999938964844])
[WARN] [1753420598.260475085] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420598.354914440] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625, 30.763999938964844])
[WARN] [1753420598.356012774] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420598.455200615] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625, 30.763999938964844])
[WARN] [1753420598.456312326] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420598.555052697] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.718999981880188, 4.625, 30.763999938964844])
[WARN] [1753420598.556192281] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420598.656181776] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7089999914169312, 4.625, 30.763999938964844])
[WARN] [1753420598.659001215] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420598.755196460] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7099999785423279, 4.625, 30.763999938964844])
[WARN] [1753420598.756525233] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420598.855571053] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7110000252723694, 4.625, 30.76099967956543])
[WARN] [1753420598.857001013] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420598.955151672] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7110000252723694, 4.625, 30.76099967956543])
[WARN] [1753420598.956323545] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420599.055159856] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7120000123977661, 4.625, 30.76099967956543])
[WARN] [1753420599.056510326] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420599.154889344] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.625, 30.76099967956543])
[WARN] [1753420599.155974974] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420599.255807794] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7279999852180481, 4.625, 30.76099967956543])
[WARN] [1753420599.256898928] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420599.356416378] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7279999852180481, 4.625, 2.9240000247955322])
[INFO] [1753420599.358378865] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72799999 4.625      2.92400002]
[INFO] [1753420599.362197885] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420599.363174520] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420599.363933773] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420599.364828455] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420599.365850147] [solver_node]: 求解器返回结果: [((1.083574072807514, 1.0855740728075138), (4.86922328602324, 4.87122328602324), -1.409801149371713), ((8.912425927192485, 8.914425927192484), (3.1287767139767597, 3.1307767139767595), 1.73179150421808), ((8.937254440692046, 8.939254440692045), (3.253594503104073, 3.255594503104073), 1.8353505123908682), ((1.0587455593079556, 1.0607455593079553), (4.744405496895927, 4.746405496895927), -1.306242141198925), ((4.744405496895927, 4.746405496895927), (6.939254440692044, 6.9412544406920444), -2.8770384679938212), ((5.251594503104072, 5.253594503104073), (1.0587455593079556, 1.0607455593079553), 0.2645541855959718), ((6.831864636989539, 6.8338646369895395), (6.9311148634044875, 6.933114863404488), 2.8920820263378326), ((3.16413536301046, 3.1661353630104596), (1.0668851365955123, 1.068885136595512), -0.24951062725196035)]
[INFO] [1753420599.455411734] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7279999852180481, 4.625, 2.9240000247955322])
[INFO] [1753420599.457587859] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72799999 4.625      2.92400002]
[INFO] [1753420599.462504349] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420599.463415415] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420599.464184300] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420599.464930209] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420599.465724727] [solver_node]: 求解器返回结果: [((1.083574072807514, 1.0855740728075138), (4.86922328602324, 4.87122328602324), -1.409801149371713), ((8.912425927192485, 8.914425927192484), (3.1287767139767597, 3.1307767139767595), 1.73179150421808), ((8.937254440692046, 8.939254440692045), (3.253594503104073, 3.255594503104073), 1.8353505123908682), ((1.0587455593079556, 1.0607455593079553), (4.744405496895927, 4.746405496895927), -1.306242141198925), ((4.744405496895927, 4.746405496895927), (6.939254440692044, 6.9412544406920444), -2.8770384679938212), ((5.251594503104072, 5.253594503104073), (1.0587455593079556, 1.0607455593079553), 0.2645541855959718), ((6.831864636989539, 6.8338646369895395), (6.9311148634044875, 6.933114863404488), 2.8920820263378326), ((3.16413536301046, 3.1661353630104596), (1.0668851365955123, 1.068885136595512), -0.24951062725196035)]
[INFO] [1753420599.556919512] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7279999852180481, 4.625, 2.9240000247955322])
[INFO] [1753420599.558809677] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72799999 4.625      2.92400002]
[INFO] [1753420599.562287759] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420599.563223113] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420599.567224537] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420599.568114802] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420599.569700543] [solver_node]: 求解器返回结果: [((1.083574072807514, 1.0855740728075138), (4.86922328602324, 4.87122328602324), -1.409801149371713), ((8.912425927192485, 8.914425927192484), (3.1287767139767597, 3.1307767139767595), 1.73179150421808), ((8.937254440692046, 8.939254440692045), (3.253594503104073, 3.255594503104073), 1.8353505123908682), ((1.0587455593079556, 1.0607455593079553), (4.744405496895927, 4.746405496895927), -1.306242141198925), ((4.744405496895927, 4.746405496895927), (6.939254440692044, 6.9412544406920444), -2.8770384679938212), ((5.251594503104072, 5.253594503104073), (1.0587455593079556, 1.0607455593079553), 0.2645541855959718), ((6.831864636989539, 6.8338646369895395), (6.9311148634044875, 6.933114863404488), 2.8920820263378326), ((3.16413536301046, 3.1661353630104596), (1.0668851365955123, 1.068885136595512), -0.24951062725196035)]
[INFO] [1753420599.654979737] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7279999852180481, 4.625, 2.9240000247955322])
[INFO] [1753420599.656546949] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72799999 4.625      2.92400002]
[INFO] [1753420599.660475444] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420599.661778744] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420599.662535949] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420599.663277218] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420599.664049080] [solver_node]: 求解器返回结果: [((1.083574072807514, 1.0855740728075138), (4.86922328602324, 4.87122328602324), -1.409801149371713), ((8.912425927192485, 8.914425927192484), (3.1287767139767597, 3.1307767139767595), 1.73179150421808), ((8.937254440692046, 8.939254440692045), (3.253594503104073, 3.255594503104073), 1.8353505123908682), ((1.0587455593079556, 1.0607455593079553), (4.744405496895927, 4.746405496895927), -1.306242141198925), ((4.744405496895927, 4.746405496895927), (6.939254440692044, 6.9412544406920444), -2.8770384679938212), ((5.251594503104072, 5.253594503104073), (1.0587455593079556, 1.0607455593079553), 0.2645541855959718), ((6.831864636989539, 6.8338646369895395), (6.9311148634044875, 6.933114863404488), 2.8920820263378326), ((3.16413536301046, 3.1661353630104596), (1.0668851365955123, 1.068885136595512), -0.24951062725196035)]
[INFO] [1753420599.755822409] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.625, 2.9240000247955322])
[INFO] [1753420599.757287730] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.625      2.92400002]
[INFO] [1753420599.761580490] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420599.762495748] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420599.763263002] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420599.763996750] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420599.764767588] [solver_node]: 求解器返回结果: [((1.082587016682168, 1.0845870166821678), (4.86922328602324, 4.87122328602324), -1.409801149371713), ((8.913412983317832, 8.91541298331783), (3.1287767139767597, 3.1307767139767595), 1.73179150421808), ((8.93813425738205, 8.940134257382049), (3.2531736122440225, 3.2551736122440222), 1.83506077952766), ((1.0578657426179505, 1.0598657426179503), (4.744826387755977, 4.746826387755978), -1.3065318740621332), ((4.744826387755976, 4.746826387755977), (6.9401342573820495, 6.94213425738205), -2.8773282008570296), ((5.251173612244021, 5.253173612244022), (1.0578657426179512, 1.059865742617951), 0.2642644527327634), ((6.831756553984321, 6.833756553984322), (6.932033866702876, 6.934033866702877), 2.8922716354477065), ((3.1642434460156776, 3.1662434460156774), (1.065966133297124, 1.0679661332971238), -0.24932101814208657)]
[INFO] [1753420599.854646463] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.625, 2.933000087738037])
[INFO] [1753420599.856651352] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.625      2.93300009]
[INFO] [1753420599.861178551] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420599.862089744] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420599.862872518] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420599.863574490] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420599.864332335] [solver_node]: 求解器返回结果: [((1.0816216876770663, 1.0836216876770661), (4.86421787749249, 4.866217877492491), -1.4046282832884707), ((8.914378312322933, 8.916378312322932), (3.1337821225075095, 3.1357821225075093), 1.7369643703013224), ((8.93792721117944, 8.93992721117944), (3.2521527997554407, 3.2541527997554405), 1.834356930211803), ((1.058072788820561, 1.0600727888205608), (4.745847200244558, 4.747847200244559), -1.30723572337799), ((4.745847200244558, 4.747847200244559), (6.939927211179438, 6.941927211179439), -2.8780320501728864), ((5.25015279975544, 5.25215279975544), (1.058072788820561, 1.0600727888205608), 0.26356060341690646), ((6.823034755043433, 6.825034755043434), (6.932033866702876, 6.934033866702877), 2.8922716354477065), ((3.172965244956566, 3.174965244956566), (1.065966133297124, 1.0679661332971238), -0.24932101814208657)]
[INFO] [1753420599.954705593] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.625, 2.933000087738037])
[INFO] [1753420599.956348711] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.625      2.93300009]
[INFO] [1753420599.959975565] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420599.960840933] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420599.961569337] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420599.962296878] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420599.963095588] [solver_node]: 求解器返回结果: [((1.0816216876770663, 1.0836216876770661), (4.86421787749249, 4.866217877492491), -1.4046282832884707), ((8.914378312322933, 8.916378312322932), (3.1337821225075095, 3.1357821225075093), 1.7369643703013224), ((8.93792721117944, 8.93992721117944), (3.2521527997554407, 3.2541527997554405), 1.834356930211803), ((1.058072788820561, 1.0600727888205608), (4.745847200244558, 4.747847200244559), -1.30723572337799), ((4.745847200244558, 4.747847200244559), (6.939927211179438, 6.941927211179439), -2.8780320501728864), ((5.25015279975544, 5.25215279975544), (1.058072788820561, 1.0600727888205608), 0.26356060341690646), ((6.823034755043433, 6.825034755043434), (6.932033866702876, 6.934033866702877), 2.8922716354477065), ((3.172965244956566, 3.174965244956566), (1.065966133297124, 1.0679661332971238), -0.24932101814208657)]
[INFO] [1753420600.055773999] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.625, 2.933000087738037])
[INFO] [1753420600.057496415] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.625      2.93300009]
[INFO] [1753420600.061236328] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420600.062145314] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420600.062940952] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420600.063675437] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420600.064468643] [solver_node]: 求解器返回结果: [((1.0816216876770663, 1.0836216876770661), (4.86421787749249, 4.866217877492491), -1.4046282832884707), ((8.914378312322933, 8.916378312322932), (3.1337821225075095, 3.1357821225075093), 1.7369643703013224), ((8.93792721117944, 8.93992721117944), (3.2521527997554407, 3.2541527997554405), 1.834356930211803), ((1.058072788820561, 1.0600727888205608), (4.745847200244558, 4.747847200244559), -1.30723572337799), ((4.745847200244558, 4.747847200244559), (6.939927211179438, 6.941927211179439), -2.8780320501728864), ((5.25015279975544, 5.25215279975544), (1.058072788820561, 1.0600727888205608), 0.26356060341690646), ((6.823034755043433, 6.825034755043434), (6.932033866702876, 6.934033866702877), 2.8922716354477065), ((3.172965244956566, 3.174965244956566), (1.065966133297124, 1.0679661332971238), -0.24932101814208657)]
[INFO] [1753420600.158734170] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.625, 2.933000087738037])
[INFO] [1753420600.160750291] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.625      2.93300009]
[INFO] [1753420600.164534397] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420600.165441847] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420600.166220045] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420600.166992802] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420600.168412970] [solver_node]: 求解器返回结果: [((1.0816216876770663, 1.0836216876770661), (4.86421787749249, 4.866217877492491), -1.4046282832884707), ((8.914378312322933, 8.916378312322932), (3.1337821225075095, 3.1357821225075093), 1.7369643703013224), ((8.93792721117944, 8.93992721117944), (3.2521527997554407, 3.2541527997554405), 1.834356930211803), ((1.058072788820561, 1.0600727888205608), (4.745847200244558, 4.747847200244559), -1.30723572337799), ((4.745847200244558, 4.747847200244559), (6.939927211179438, 6.941927211179439), -2.8780320501728864), ((5.25015279975544, 5.25215279975544), (1.058072788820561, 1.0600727888205608), 0.26356060341690646), ((6.823034755043433, 6.825034755043434), (6.932033866702876, 6.934033866702877), 2.8922716354477065), ((3.172965244956566, 3.174965244956566), (1.065966133297124, 1.0679661332971238), -0.24932101814208657)]
[INFO] [1753420600.254840678] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.625, 2.933000087738037])
[INFO] [1753420600.259525545] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.625      2.93300009]
[INFO] [1753420600.262969066] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420600.263810786] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420600.264550294] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420600.265285323] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420600.266077697] [solver_node]: 求解器返回结果: [((1.0816216876770663, 1.0836216876770661), (4.86421787749249, 4.866217877492491), -1.4046282832884707), ((8.914378312322933, 8.916378312322932), (3.1337821225075095, 3.1357821225075093), 1.7369643703013224), ((8.93792721117944, 8.93992721117944), (3.2521527997554407, 3.2541527997554405), 1.834356930211803), ((1.058072788820561, 1.0600727888205608), (4.745847200244558, 4.747847200244559), -1.30723572337799), ((4.745847200244558, 4.747847200244559), (6.939927211179438, 6.941927211179439), -2.8780320501728864), ((5.25015279975544, 5.25215279975544), (1.058072788820561, 1.0600727888205608), 0.26356060341690646), ((6.823034755043433, 6.825034755043434), (6.932033866702876, 6.934033866702877), 2.8922716354477065), ((3.172965244956566, 3.174965244956566), (1.065966133297124, 1.0679661332971238), -0.24932101814208657)]
[INFO] [1753420600.355663061] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.625, 2.927000045776367])
[INFO] [1753420600.357372389] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.625      2.92700005]
[INFO] [1753420600.360815238] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420600.361869411] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420600.362654234] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420600.363749592] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420600.365502954] [solver_node]: 求解器返回结果: [((1.0822656945364157, 1.0842656945364155), (4.867554936986555, 4.869554936986556), -1.408061963492516), ((8.913734305463585, 8.915734305463584), (3.130445063013445, 3.132445063013445), 1.733530690097277), ((8.93806506374689, 8.94006506374689), (3.252832488811108, 3.254832488811108), 1.8348257555133933), ((1.0579349362531105, 1.0599349362531103), (4.745167511188891, 4.747167511188891), -1.3067668980763998), ((4.74516751118889, 4.7471675111888905), (6.940065063746889, 6.94206506374689), -2.877563224871296), ((5.250832488811108, 5.252832488811109), (1.0579349362531103, 1.05993493625311), 0.26402942871849694), ((6.828849287670693, 6.830849287670694), (6.932033866702876, 6.934033866702877), 2.8922716354477065), ((3.1671507123293066, 3.1691507123293063), (1.065966133297124, 1.0679661332971238), -0.24932101814208657)]
[INFO] [1753420600.454557039] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.625, 2.927000045776367])
[INFO] [1753420600.455999735] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.625      2.92700005]
[INFO] [1753420600.459635005] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420600.460499349] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420600.461321773] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420600.462016288] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420600.462798454] [solver_node]: 求解器返回结果: [((1.0822656945364157, 1.0842656945364155), (4.867554936986555, 4.869554936986556), -1.408061963492516), ((8.913734305463585, 8.915734305463584), (3.130445063013445, 3.132445063013445), 1.733530690097277), ((8.93806506374689, 8.94006506374689), (3.252832488811108, 3.254832488811108), 1.8348257555133933), ((1.0579349362531105, 1.0599349362531103), (4.745167511188891, 4.747167511188891), -1.3067668980763998), ((4.74516751118889, 4.7471675111888905), (6.940065063746889, 6.94206506374689), -2.877563224871296), ((5.250832488811108, 5.252832488811109), (1.0579349362531103, 1.05993493625311), 0.26402942871849694), ((6.828849287670693, 6.830849287670694), (6.932033866702876, 6.934033866702877), 2.8922716354477065), ((3.1671507123293066, 3.1691507123293063), (1.065966133297124, 1.0679661332971238), -0.24932101814208657)]
[INFO] [1753420600.554624169] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.625, 2.927000045776367])
[INFO] [1753420600.556072722] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.625      2.92700005]
[INFO] [1753420600.559393743] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420600.560200838] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420600.560899513] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420600.562231135] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420600.563015765] [solver_node]: 求解器返回结果: [((1.0822656945364157, 1.0842656945364155), (4.867554936986555, 4.869554936986556), -1.408061963492516), ((8.913734305463585, 8.915734305463584), (3.130445063013445, 3.132445063013445), 1.733530690097277), ((8.93806506374689, 8.94006506374689), (3.252832488811108, 3.254832488811108), 1.8348257555133933), ((1.0579349362531105, 1.0599349362531103), (4.745167511188891, 4.747167511188891), -1.3067668980763998), ((4.74516751118889, 4.7471675111888905), (6.940065063746889, 6.94206506374689), -2.877563224871296), ((5.250832488811108, 5.252832488811109), (1.0579349362531103, 1.05993493625311), 0.26402942871849694), ((6.828849287670693, 6.830849287670694), (6.932033866702876, 6.934033866702877), 2.8922716354477065), ((3.1671507123293066, 3.1691507123293063), (1.065966133297124, 1.0679661332971238), -0.24932101814208657)]
[INFO] [1753420600.654532895] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.625, 2.927000045776367])
[INFO] [1753420600.656126412] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.625      2.92700005]
[INFO] [1753420600.659640366] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420600.660545032] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420600.661347038] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420600.662141525] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420600.662972460] [solver_node]: 求解器返回结果: [((1.0822656945364157, 1.0842656945364155), (4.867554936986555, 4.869554936986556), -1.408061963492516), ((8.913734305463585, 8.915734305463584), (3.130445063013445, 3.132445063013445), 1.733530690097277), ((8.93806506374689, 8.94006506374689), (3.252832488811108, 3.254832488811108), 1.8348257555133933), ((1.0579349362531105, 1.0599349362531103), (4.745167511188891, 4.747167511188891), -1.3067668980763998), ((4.74516751118889, 4.7471675111888905), (6.940065063746889, 6.94206506374689), -2.877563224871296), ((5.250832488811108, 5.252832488811109), (1.0579349362531103, 1.05993493625311), 0.26402942871849694), ((6.828849287670693, 6.830849287670694), (6.932033866702876, 6.934033866702877), 2.8922716354477065), ((3.1671507123293066, 3.1691507123293063), (1.065966133297124, 1.0679661332971238), -0.24932101814208657)]
[INFO] [1753420600.755769978] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7310000061988831, 4.625, 2.927000045776367])
[INFO] [1753420600.759017333] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73100001 4.625      2.92700005]
[INFO] [1753420600.762694621] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420600.763556725] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420600.764303914] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420600.765022526] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420600.765795988] [solver_node]: 求解器返回结果: [((1.0862128567537774, 1.0882128567537772), (4.867554936986555, 4.869554936986556), -1.408061963492516), ((8.909787143246222, 8.91178714324622), (3.130445063013445, 3.132445063013445), 1.733530690097277), ((8.934546296110817, 8.936546296110816), (3.2545154197449313, 3.256515419744931), 1.8359834990773423), ((1.0614537038891823, 1.063453703889182), (4.7434845802550685, 4.745484580255069), -1.3056091545124509), ((4.7434845802550685, 4.745484580255069), (6.9365462961108175, 6.938546296110818), -2.8764054813073474), ((5.25251541974493, 5.254515419744931), (1.0614537038891827, 1.0634537038891825), 0.2651871722824458), ((6.829282808147389, 6.83128280814739), (6.928358562169361, 6.930358562169362), 2.8915132976798428), ((3.1667171918526096, 3.1687171918526094), (1.0696414378306385, 1.0716414378306383), -0.2500793559099503)]
[INFO] [1753420600.855339014] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7310000061988831, 4.625, 1.2710000276565552])
[INFO] [1753420600.856941971] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73100001 4.625      1.27100003]
[INFO] [1753420600.860190319] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420600.861081480] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420600.861886494] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420600.862908859] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420600.863782132] [solver_node]: 求解器返回结果: [((9.038118239755066, 9.040118239755065), (3.7490362467975795, 3.7510362467975793), 2.0808213654104946), ((0.9578817602449331, 0.9598817602449331), (4.24896375320242, 4.250963753202421), -1.0607712881792986), ((8.92635856216936, 8.92835856216936), (1.5622277104645033, 1.564227710464503), 1.3207169708849462), ((1.0696414378306383, 1.071641437830638), (6.435772289535497, 6.437772289535498), -1.820875682704847), ((4.24896375320242, 4.250963753202421), (7.040118239755066, 7.042118239755067), -2.631567614974195), ((5.747036246797578, 5.749036246797579), (0.9578817602449329, 0.9598817602449329), 0.510025038615598), ((8.433772289535497, 8.435772289535496), (6.928358562169361, 6.930358562169362), 2.8915132976798428), ((1.5622277104645033, 1.564227710464503), (1.0696414378306385, 1.0716414378306383), -0.2500793559099503)]
[INFO] [1753420600.956133429] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7310000061988831, 4.625, 1.2710000276565552])
[INFO] [1753420600.957900487] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73100001 4.625      1.27100003]
[INFO] [1753420600.961200580] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420600.962070076] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420600.962892275] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420600.963629160] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420600.964396445] [solver_node]: 求解器返回结果: [((9.038118239755066, 9.040118239755065), (3.7490362467975795, 3.7510362467975793), 2.0808213654104946), ((0.9578817602449331, 0.9598817602449331), (4.24896375320242, 4.250963753202421), -1.0607712881792986), ((8.92635856216936, 8.92835856216936), (1.5622277104645033, 1.564227710464503), 1.3207169708849462), ((1.0696414378306383, 1.071641437830638), (6.435772289535497, 6.437772289535498), -1.820875682704847), ((4.24896375320242, 4.250963753202421), (7.040118239755066, 7.042118239755067), -2.631567614974195), ((5.747036246797578, 5.749036246797579), (0.9578817602449329, 0.9598817602449329), 0.510025038615598), ((8.433772289535497, 8.435772289535496), (6.928358562169361, 6.930358562169362), 2.8915132976798428), ((1.5622277104645033, 1.564227710464503), (1.0696414378306385, 1.0716414378306383), -0.2500793559099503)]
[INFO] [1753420601.054623748] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7310000061988831, 4.625, 1.2710000276565552])
[INFO] [1753420601.056149327] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73100001 4.625      1.27100003]
[INFO] [1753420601.059341288] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420601.060305603] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420601.061149659] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420601.061994771] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420601.062822986] [solver_node]: 求解器返回结果: [((9.038118239755066, 9.040118239755065), (3.7490362467975795, 3.7510362467975793), 2.0808213654104946), ((0.9578817602449331, 0.9598817602449331), (4.24896375320242, 4.250963753202421), -1.0607712881792986), ((8.92635856216936, 8.92835856216936), (1.5622277104645033, 1.564227710464503), 1.3207169708849462), ((1.0696414378306383, 1.071641437830638), (6.435772289535497, 6.437772289535498), -1.820875682704847), ((4.24896375320242, 4.250963753202421), (7.040118239755066, 7.042118239755067), -2.631567614974195), ((5.747036246797578, 5.749036246797579), (0.9578817602449329, 0.9598817602449329), 0.510025038615598), ((8.433772289535497, 8.435772289535496), (6.928358562169361, 6.930358562169362), 2.8915132976798428), ((1.5622277104645033, 1.564227710464503), (1.0696414378306385, 1.0716414378306383), -0.2500793559099503)]
[INFO] [1753420601.154698911] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7310000061988831, 4.625, 1.2710000276565552])
[INFO] [1753420601.156290860] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73100001 4.625      1.27100003]
[INFO] [1753420601.159437060] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420601.160375742] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420601.161155604] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420601.162138832] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420601.162986216] [solver_node]: 求解器返回结果: [((9.038118239755066, 9.040118239755065), (3.7490362467975795, 3.7510362467975793), 2.0808213654104946), ((0.9578817602449331, 0.9598817602449331), (4.24896375320242, 4.250963753202421), -1.0607712881792986), ((8.92635856216936, 8.92835856216936), (1.5622277104645033, 1.564227710464503), 1.3207169708849462), ((1.0696414378306383, 1.071641437830638), (6.435772289535497, 6.437772289535498), -1.820875682704847), ((4.24896375320242, 4.250963753202421), (7.040118239755066, 7.042118239755067), -2.631567614974195), ((5.747036246797578, 5.749036246797579), (0.9578817602449329, 0.9598817602449329), 0.510025038615598), ((8.433772289535497, 8.435772289535496), (6.928358562169361, 6.930358562169362), 2.8915132976798428), ((1.5622277104645033, 1.564227710464503), (1.0696414378306385, 1.0716414378306383), -0.2500793559099503)]
[INFO] [1753420601.255315626] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7310000061988831, 4.625, 1.2710000276565552])
[INFO] [1753420601.256782867] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73100001 4.625      1.27100003]
[INFO] [1753420601.259893034] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420601.260800260] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420601.261557273] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420601.262305454] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420601.263251848] [solver_node]: 求解器返回结果: [((9.038118239755066, 9.040118239755065), (3.7490362467975795, 3.7510362467975793), 2.0808213654104946), ((0.9578817602449331, 0.9598817602449331), (4.24896375320242, 4.250963753202421), -1.0607712881792986), ((8.92635856216936, 8.92835856216936), (1.5622277104645033, 1.564227710464503), 1.3207169708849462), ((1.0696414378306383, 1.071641437830638), (6.435772289535497, 6.437772289535498), -1.820875682704847), ((4.24896375320242, 4.250963753202421), (7.040118239755066, 7.042118239755067), -2.631567614974195), ((5.747036246797578, 5.749036246797579), (0.9578817602449329, 0.9598817602449329), 0.510025038615598), ((8.433772289535497, 8.435772289535496), (6.928358562169361, 6.930358562169362), 2.8915132976798428), ((1.5622277104645033, 1.564227710464503), (1.0696414378306385, 1.0716414378306383), -0.2500793559099503)]
[INFO] [1753420601.354520428] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 0.4690000116825104])
[WARN] [1753420601.355547529] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420601.454772269] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 0.4690000116825104])
[WARN] [1753420601.455813322] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420601.555502490] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 0.4690000116825104])
[WARN] [1753420601.556657307] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420601.654900067] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 0.4690000116825104])
[WARN] [1753420601.655999778] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420601.755531342] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 0.4690000116825104])
[WARN] [1753420601.756565931] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420601.854948886] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 0.39800000190734863])
[WARN] [1753420601.856178361] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420601.955700805] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 0.39800000190734863])
[WARN] [1753420601.956727842] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420602.055805857] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 0.621999979019165])
[WARN] [1753420602.058575631] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420602.154760446] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 0.621999979019165])
[WARN] [1753420602.155902526] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420602.255858167] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 0.31700000166893005])
[WARN] [1753420602.257415362] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420602.355124732] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 0.31700000166893005])
[WARN] [1753420602.356405664] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420602.455165335] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 0.31700000166893005])
[WARN] [1753420602.456262838] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420602.558144325] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 0.31700000166893005])
[WARN] [1753420602.559412584] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420602.656951037] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 0.31700000166893005])
[WARN] [1753420602.658057884] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420602.756309605] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 0.31700000166893005])
[WARN] [1753420602.757409060] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420602.854752787] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 1.3009999990463257])
[WARN] [1753420602.855902036] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420602.955337374] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 1.3009999990463257])
[WARN] [1753420602.956409404] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420603.057161899] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 1.3009999990463257])
[WARN] [1753420603.058230089] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420603.156319054] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 1.3009999990463257])
[WARN] [1753420603.157348587] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420603.256124068] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 1.3009999990463257])
[WARN] [1753420603.257368838] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420603.355783637] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 1.3009999990463257])
[WARN] [1753420603.356939157] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420603.456285565] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 2.9230000972747803])
[WARN] [1753420603.457654980] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420603.554795790] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 2.9230000972747803])
[WARN] [1753420603.555871212] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420603.655721475] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 2.9230000972747803])
[WARN] [1753420603.656807745] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420603.755245936] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.060001373291016, 4.625, 2.9230000972747803])
[WARN] [1753420603.756308878] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420603.859531651] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.064998626708984, 4.625, 2.9230000972747803])
[WARN] [1753420603.861267476] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420603.958487297] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.064998626708984, 4.625, 2.9230000972747803])
[WARN] [1753420603.960661630] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420604.055793936] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.064998626708984, 4.625, 2.9230000972747803])
[WARN] [1753420604.059799617] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420604.159259245] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.064998626708984, 4.625, 2.9230000972747803])
[WARN] [1753420604.161312903] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420604.256359767] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.064998626708984, 4.625, 2.9230000972747803])
[WARN] [1753420604.257373715] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420604.357084615] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7279999852180481, 4.625, 2.9230000972747803])
[INFO] [1753420604.358512111] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72799999 4.625      2.9230001 ]
[INFO] [1753420604.361856525] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420604.362740294] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420604.363699905] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420604.364464150] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420604.365212715] [solver_node]: 求解器返回结果: [((1.083681159783359, 1.0856811597833589), (4.86977932378463, 4.87177932378463), -1.4103842331495846), ((8.91231884021664, 8.91431884021664), (3.12822067621537, 3.13022067621537), 1.731208420440208), ((8.937277610692627, 8.939277610692626), (3.253708612971639, 3.2557086129716386), 1.8354290161280344), ((1.0587223893073727, 1.0607223893073725), (4.744291387028361, 4.746291387028362), -1.3061636374617587), ((4.744291387028361, 4.746291387028362), (6.939277610692627, 6.9412776106926275), -2.8769599642566552), ((5.251708612971637, 5.2537086129716375), (1.058722389307372, 1.0607223893073718), 0.2646326893331378), ((6.832833601947059, 6.83483360194706), (6.9311148634044875, 6.933114863404488), 2.8920820263378326), ((3.1631663980529394, 3.165166398052939), (1.0668851365955123, 1.068885136595512), -0.24951062725196035)]
[INFO] [1753420604.456035940] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7279999852180481, 4.625, 2.9230000972747803])
[INFO] [1753420604.457694643] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72799999 4.625      2.9230001 ]
[INFO] [1753420604.462287156] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420604.464034149] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420604.464894110] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420604.465624530] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420604.466379879] [solver_node]: 求解器返回结果: [((1.083681159783359, 1.0856811597833589), (4.86977932378463, 4.87177932378463), -1.4103842331495846), ((8.91231884021664, 8.91431884021664), (3.12822067621537, 3.13022067621537), 1.731208420440208), ((8.937277610692627, 8.939277610692626), (3.253708612971639, 3.2557086129716386), 1.8354290161280344), ((1.0587223893073727, 1.0607223893073725), (4.744291387028361, 4.746291387028362), -1.3061636374617587), ((4.744291387028361, 4.746291387028362), (6.939277610692627, 6.9412776106926275), -2.8769599642566552), ((5.251708612971637, 5.2537086129716375), (1.058722389307372, 1.0607223893073718), 0.2646326893331378), ((6.832833601947059, 6.83483360194706), (6.9311148634044875, 6.933114863404488), 2.8920820263378326), ((3.1631663980529394, 3.165166398052939), (1.0668851365955123, 1.068885136595512), -0.24951062725196035)]
[INFO] [1753420604.554993059] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7279999852180481, 4.625, 2.9230000972747803])
[INFO] [1753420604.556885496] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72799999 4.625      2.9230001 ]
[INFO] [1753420604.560346169] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420604.561145712] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420604.561875300] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420604.562559415] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420604.563313933] [solver_node]: 求解器返回结果: [((1.083681159783359, 1.0856811597833589), (4.86977932378463, 4.87177932378463), -1.4103842331495846), ((8.91231884021664, 8.91431884021664), (3.12822067621537, 3.13022067621537), 1.731208420440208), ((8.937277610692627, 8.939277610692626), (3.253708612971639, 3.2557086129716386), 1.8354290161280344), ((1.0587223893073727, 1.0607223893073725), (4.744291387028361, 4.746291387028362), -1.3061636374617587), ((4.744291387028361, 4.746291387028362), (6.939277610692627, 6.9412776106926275), -2.8769599642566552), ((5.251708612971637, 5.2537086129716375), (1.058722389307372, 1.0607223893073718), 0.2646326893331378), ((6.832833601947059, 6.83483360194706), (6.9311148634044875, 6.933114863404488), 2.8920820263378326), ((3.1631663980529394, 3.165166398052939), (1.0668851365955123, 1.068885136595512), -0.24951062725196035)]
[INFO] [1753420604.654772760] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7279999852180481, 4.625, 2.9230000972747803])
[INFO] [1753420604.656290882] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72799999 4.625      2.9230001 ]
[INFO] [1753420604.659811205] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420604.660636829] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420604.661373489] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420604.662073253] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420604.662855099] [solver_node]: 求解器返回结果: [((1.083681159783359, 1.0856811597833589), (4.86977932378463, 4.87177932378463), -1.4103842331495846), ((8.91231884021664, 8.91431884021664), (3.12822067621537, 3.13022067621537), 1.731208420440208), ((8.937277610692627, 8.939277610692626), (3.253708612971639, 3.2557086129716386), 1.8354290161280344), ((1.0587223893073727, 1.0607223893073725), (4.744291387028361, 4.746291387028362), -1.3061636374617587), ((4.744291387028361, 4.746291387028362), (6.939277610692627, 6.9412776106926275), -2.8769599642566552), ((5.251708612971637, 5.2537086129716375), (1.058722389307372, 1.0607223893073718), 0.2646326893331378), ((6.832833601947059, 6.83483360194706), (6.9311148634044875, 6.933114863404488), 2.8920820263378326), ((3.1631663980529394, 3.165166398052939), (1.0668851365955123, 1.068885136595512), -0.24951062725196035)]
[INFO] [1753420604.759457783] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7279999852180481, 4.625, 2.9230000972747803])
[INFO] [1753420604.761003938] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72799999 4.625      2.9230001 ]
[INFO] [1753420604.764999731] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420604.765916269] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420604.766689058] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420604.768114890] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420604.768949154] [solver_node]: 求解器返回结果: [((1.083681159783359, 1.0856811597833589), (4.86977932378463, 4.87177932378463), -1.4103842331495846), ((8.91231884021664, 8.91431884021664), (3.12822067621537, 3.13022067621537), 1.731208420440208), ((8.937277610692627, 8.939277610692626), (3.253708612971639, 3.2557086129716386), 1.8354290161280344), ((1.0587223893073727, 1.0607223893073725), (4.744291387028361, 4.746291387028362), -1.3061636374617587), ((4.744291387028361, 4.746291387028362), (6.939277610692627, 6.9412776106926275), -2.8769599642566552), ((5.251708612971637, 5.2537086129716375), (1.058722389307372, 1.0607223893073718), 0.2646326893331378), ((6.832833601947059, 6.83483360194706), (6.9311148634044875, 6.933114863404488), 2.8920820263378326), ((3.1631663980529394, 3.165166398052939), (1.0668851365955123, 1.068885136595512), -0.24951062725196035)]
[INFO] [1753420604.857836037] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7289999723434448, 4.625, 2.9230000972747803])
[INFO] [1753420604.859877822] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72899997 4.625      2.9230001 ]
[INFO] [1753420604.863307391] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420604.864168343] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420604.864894443] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420604.865581951] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420604.866342708] [solver_node]: 求解器返回结果: [((1.0846683092062654, 1.0866683092062652), (4.86977932378463, 4.87177932378463), -1.4103842331495846), ((8.911331690793734, 8.913331690793733), (3.12822067621537, 3.13022067621537), 1.731208420440208), ((8.936398088682203, 8.938398088682202), (3.2541300571037923, 3.256130057103792), 1.8357187812839026), ((1.0596019113177968, 1.0616019113177966), (4.7438699428962074, 4.745869942896208), -1.3058738723058905), ((4.7438699428962074, 4.745869942896208), (6.938398088682203, 6.940398088682204), -2.8766701991007873), ((5.252130057103791, 5.254130057103792), (1.0596019113177961, 1.061601911317796), 0.26492245448900603), ((6.832941741455731, 6.834941741455732), (6.930195987291238, 6.932195987291239), 2.8918924355489013), ((3.163058258544268, 3.165058258544268), (1.0678040127087614, 1.0698040127087611), -0.24970021804089182)]
[INFO] [1753420604.955235607] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7289999723434448, 4.625, 2.9230000972747803])
[INFO] [1753420604.956706816] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72899997 4.625      2.9230001 ]
[INFO] [1753420604.960057471] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420604.960878358] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420604.961573609] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420604.962250876] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420604.963026482] [solver_node]: 求解器返回结果: [((1.0846683092062654, 1.0866683092062652), (4.86977932378463, 4.87177932378463), -1.4103842331495846), ((8.911331690793734, 8.913331690793733), (3.12822067621537, 3.13022067621537), 1.731208420440208), ((8.936398088682203, 8.938398088682202), (3.2541300571037923, 3.256130057103792), 1.8357187812839026), ((1.0596019113177968, 1.0616019113177966), (4.7438699428962074, 4.745869942896208), -1.3058738723058905), ((4.7438699428962074, 4.745869942896208), (6.938398088682203, 6.940398088682204), -2.8766701991007873), ((5.252130057103791, 5.254130057103792), (1.0596019113177961, 1.061601911317796), 0.26492245448900603), ((6.832941741455731, 6.834941741455732), (6.930195987291238, 6.932195987291239), 2.8918924355489013), ((3.163058258544268, 3.165058258544268), (1.0678040127087614, 1.0698040127087611), -0.24970021804089182)]
[INFO] [1753420605.059184514] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7289999723434448, 4.625, 2.9230000972747803])
[INFO] [1753420605.063789379] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72899997 4.625      2.9230001 ]
[INFO] [1753420605.070102037] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420605.071094097] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420605.071866951] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420605.072607419] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420605.073395410] [solver_node]: 求解器返回结果: [((1.0846683092062654, 1.0866683092062652), (4.86977932378463, 4.87177932378463), -1.4103842331495846), ((8.911331690793734, 8.913331690793733), (3.12822067621537, 3.13022067621537), 1.731208420440208), ((8.936398088682203, 8.938398088682202), (3.2541300571037923, 3.256130057103792), 1.8357187812839026), ((1.0596019113177968, 1.0616019113177966), (4.7438699428962074, 4.745869942896208), -1.3058738723058905), ((4.7438699428962074, 4.745869942896208), (6.938398088682203, 6.940398088682204), -2.8766701991007873), ((5.252130057103791, 5.254130057103792), (1.0596019113177961, 1.061601911317796), 0.26492245448900603), ((6.832941741455731, 6.834941741455732), (6.930195987291238, 6.932195987291239), 2.8918924355489013), ((3.163058258544268, 3.165058258544268), (1.0678040127087614, 1.0698040127087611), -0.24970021804089182)]
[INFO] [1753420605.158278917] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7289999723434448, 4.625, 2.9230000972747803])
[INFO] [1753420605.162347863] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72899997 4.625      2.9230001 ]
[INFO] [1753420605.172608408] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420605.173946877] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420605.175055868] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420605.176418883] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420605.178852135] [solver_node]: 求解器返回结果: [((1.0846683092062654, 1.0866683092062652), (4.86977932378463, 4.87177932378463), -1.4103842331495846), ((8.911331690793734, 8.913331690793733), (3.12822067621537, 3.13022067621537), 1.731208420440208), ((8.936398088682203, 8.938398088682202), (3.2541300571037923, 3.256130057103792), 1.8357187812839026), ((1.0596019113177968, 1.0616019113177966), (4.7438699428962074, 4.745869942896208), -1.3058738723058905), ((4.7438699428962074, 4.745869942896208), (6.938398088682203, 6.940398088682204), -2.8766701991007873), ((5.252130057103791, 5.254130057103792), (1.0596019113177961, 1.061601911317796), 0.26492245448900603), ((6.832941741455731, 6.834941741455732), (6.930195987291238, 6.932195987291239), 2.8918924355489013), ((3.163058258544268, 3.165058258544268), (1.0678040127087614, 1.0698040127087611), -0.24970021804089182)]
[INFO] [1753420605.256586673] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7289999723434448, 4.625, 2.9230000972747803])
[INFO] [1753420605.258258016] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72899997 4.625      2.9230001 ]
[INFO] [1753420605.262699613] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420605.263613079] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420605.264404077] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420605.268841482] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420605.272931517] [solver_node]: 求解器返回结果: [((1.0846683092062654, 1.0866683092062652), (4.86977932378463, 4.87177932378463), -1.4103842331495846), ((8.911331690793734, 8.913331690793733), (3.12822067621537, 3.13022067621537), 1.731208420440208), ((8.936398088682203, 8.938398088682202), (3.2541300571037923, 3.256130057103792), 1.8357187812839026), ((1.0596019113177968, 1.0616019113177966), (4.7438699428962074, 4.745869942896208), -1.3058738723058905), ((4.7438699428962074, 4.745869942896208), (6.938398088682203, 6.940398088682204), -2.8766701991007873), ((5.252130057103791, 5.254130057103792), (1.0596019113177961, 1.061601911317796), 0.26492245448900603), ((6.832941741455731, 6.834941741455732), (6.930195987291238, 6.932195987291239), 2.8918924355489013), ((3.163058258544268, 3.165058258544268), (1.0678040127087614, 1.0698040127087611), -0.24970021804089182)]
[INFO] [1753420605.357197534] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7300000190734863, 4.625, 2.9230000972747803])
[INFO] [1753420605.359940428] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73000002 4.625      2.9230001 ]
[INFO] [1753420605.364338311] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420605.365368580] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420605.366152730] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420605.366957393] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420605.368002478] [solver_node]: 求解器返回结果: [((1.0856555174686198, 1.0876555174686195), (4.86977932378463, 4.87177932378463), -1.4103842331495846), ((8.91034448253138, 8.91234448253138), (3.12822067621537, 3.13022067621537), 1.731208420440208), ((8.93551874155917, 8.937518741559169), (3.2545518584389055, 3.2565518584389053), 1.836008518156429), ((1.0604812584408307, 1.0624812584408305), (4.743448141561094, 4.745448141561095), -1.3055841354333642), ((4.743448141561094, 4.745448141561095), (6.9375187415591695, 6.93951874155917), -2.8763804622282607), ((5.252551858438904, 5.254551858438905), (1.0604812584408307, 1.0624812584408305), 0.26521219136153257), ((6.833049990677634, 6.835049990677635), (6.92927718367959, 6.93127718367959), 2.8917028517928864), ((3.1629500093223655, 3.1649500093223653), (1.0687228163204097, 1.0707228163204094), -0.2498898017969066)]
[INFO] [1753420605.455187970] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7300000190734863, 4.625, 2.9230000972747803])
[INFO] [1753420605.456638795] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73000002 4.625      2.9230001 ]
[INFO] [1753420605.461985089] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420605.463671153] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420605.465185339] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420605.467008014] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420605.468570298] [solver_node]: 求解器返回结果: [((1.0856555174686198, 1.0876555174686195), (4.86977932378463, 4.87177932378463), -1.4103842331495846), ((8.91034448253138, 8.91234448253138), (3.12822067621537, 3.13022067621537), 1.731208420440208), ((8.93551874155917, 8.937518741559169), (3.2545518584389055, 3.2565518584389053), 1.836008518156429), ((1.0604812584408307, 1.0624812584408305), (4.743448141561094, 4.745448141561095), -1.3055841354333642), ((4.743448141561094, 4.745448141561095), (6.9375187415591695, 6.93951874155917), -2.8763804622282607), ((5.252551858438904, 5.254551858438905), (1.0604812584408307, 1.0624812584408305), 0.26521219136153257), ((6.833049990677634, 6.835049990677635), (6.92927718367959, 6.93127718367959), 2.8917028517928864), ((3.1629500093223655, 3.1649500093223653), (1.0687228163204097, 1.0707228163204094), -0.2498898017969066)]
[INFO] [1753420605.560764443] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7300000190734863, 4.625, 2.9230000972747803])
[INFO] [1753420605.564338944] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73000002 4.625      2.9230001 ]
[INFO] [1753420605.570275366] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420605.571259202] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420605.573693671] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420605.574550207] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420605.575458488] [solver_node]: 求解器返回结果: [((1.0856555174686198, 1.0876555174686195), (4.86977932378463, 4.87177932378463), -1.4103842331495846), ((8.91034448253138, 8.91234448253138), (3.12822067621537, 3.13022067621537), 1.731208420440208), ((8.93551874155917, 8.937518741559169), (3.2545518584389055, 3.2565518584389053), 1.836008518156429), ((1.0604812584408307, 1.0624812584408305), (4.743448141561094, 4.745448141561095), -1.3055841354333642), ((4.743448141561094, 4.745448141561095), (6.9375187415591695, 6.93951874155917), -2.8763804622282607), ((5.252551858438904, 5.254551858438905), (1.0604812584408307, 1.0624812584408305), 0.26521219136153257), ((6.833049990677634, 6.835049990677635), (6.92927718367959, 6.93127718367959), 2.8917028517928864), ((3.1629500093223655, 3.1649500093223653), (1.0687228163204097, 1.0707228163204094), -0.2498898017969066)]
[INFO] [1753420605.656690149] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7300000190734863, 4.625, 2.9230000972747803])
[INFO] [1753420605.658372692] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73000002 4.625      2.9230001 ]
[INFO] [1753420605.668386670] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420605.669426795] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420605.670214241] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420605.670957398] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420605.671721739] [solver_node]: 求解器返回结果: [((1.0856555174686198, 1.0876555174686195), (4.86977932378463, 4.87177932378463), -1.4103842331495846), ((8.91034448253138, 8.91234448253138), (3.12822067621537, 3.13022067621537), 1.731208420440208), ((8.93551874155917, 8.937518741559169), (3.2545518584389055, 3.2565518584389053), 1.836008518156429), ((1.0604812584408307, 1.0624812584408305), (4.743448141561094, 4.745448141561095), -1.3055841354333642), ((4.743448141561094, 4.745448141561095), (6.9375187415591695, 6.93951874155917), -2.8763804622282607), ((5.252551858438904, 5.254551858438905), (1.0604812584408307, 1.0624812584408305), 0.26521219136153257), ((6.833049990677634, 6.835049990677635), (6.92927718367959, 6.93127718367959), 2.8917028517928864), ((3.1629500093223655, 3.1649500093223653), (1.0687228163204097, 1.0707228163204094), -0.2498898017969066)]
[INFO] [1753420605.755051539] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7300000190734863, 4.625, 2.9230000972747803])
[INFO] [1753420605.756530108] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73000002 4.625      2.9230001 ]
[INFO] [1753420605.762870063] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420605.764714498] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420605.765609660] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420605.766445331] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420605.767302891] [solver_node]: 求解器返回结果: [((1.0856555174686198, 1.0876555174686195), (4.86977932378463, 4.87177932378463), -1.4103842331495846), ((8.91034448253138, 8.91234448253138), (3.12822067621537, 3.13022067621537), 1.731208420440208), ((8.93551874155917, 8.937518741559169), (3.2545518584389055, 3.2565518584389053), 1.836008518156429), ((1.0604812584408307, 1.0624812584408305), (4.743448141561094, 4.745448141561095), -1.3055841354333642), ((4.743448141561094, 4.745448141561095), (6.9375187415591695, 6.93951874155917), -2.8763804622282607), ((5.252551858438904, 5.254551858438905), (1.0604812584408307, 1.0624812584408305), 0.26521219136153257), ((6.833049990677634, 6.835049990677635), (6.92927718367959, 6.93127718367959), 2.8917028517928864), ((3.1629500093223655, 3.1649500093223653), (1.0687228163204097, 1.0707228163204094), -0.2498898017969066)]
[INFO] [1753420605.857989729] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7300000190734863, 4.625, 2.9230000972747803])
[INFO] [1753420605.859688209] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73000002 4.625      2.9230001 ]
[INFO] [1753420605.863474780] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420605.864425654] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420605.865171979] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420605.865880479] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420605.866756440] [solver_node]: 求解器返回结果: [((1.0856555174686198, 1.0876555174686195), (4.86977932378463, 4.87177932378463), -1.4103842331495846), ((8.91034448253138, 8.91234448253138), (3.12822067621537, 3.13022067621537), 1.731208420440208), ((8.93551874155917, 8.937518741559169), (3.2545518584389055, 3.2565518584389053), 1.836008518156429), ((1.0604812584408307, 1.0624812584408305), (4.743448141561094, 4.745448141561095), -1.3055841354333642), ((4.743448141561094, 4.745448141561095), (6.9375187415591695, 6.93951874155917), -2.8763804622282607), ((5.252551858438904, 5.254551858438905), (1.0604812584408307, 1.0624812584408305), 0.26521219136153257), ((6.833049990677634, 6.835049990677635), (6.92927718367959, 6.93127718367959), 2.8917028517928864), ((3.1629500093223655, 3.1649500093223653), (1.0687228163204097, 1.0707228163204094), -0.2498898017969066)]
[INFO] [1753420605.957182119] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7300000190734863, 4.625, 2.9230000972747803])
[INFO] [1753420605.958902391] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73000002 4.625      2.9230001 ]
[INFO] [1753420605.962560190] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420605.963521689] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420605.964313615] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420605.965096517] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420605.965908604] [solver_node]: 求解器返回结果: [((1.0856555174686198, 1.0876555174686195), (4.86977932378463, 4.87177932378463), -1.4103842331495846), ((8.91034448253138, 8.91234448253138), (3.12822067621537, 3.13022067621537), 1.731208420440208), ((8.93551874155917, 8.937518741559169), (3.2545518584389055, 3.2565518584389053), 1.836008518156429), ((1.0604812584408307, 1.0624812584408305), (4.743448141561094, 4.745448141561095), -1.3055841354333642), ((4.743448141561094, 4.745448141561095), (6.9375187415591695, 6.93951874155917), -2.8763804622282607), ((5.252551858438904, 5.254551858438905), (1.0604812584408307, 1.0624812584408305), 0.26521219136153257), ((6.833049990677634, 6.835049990677635), (6.92927718367959, 6.93127718367959), 2.8917028517928864), ((3.1629500093223655, 3.1649500093223653), (1.0687228163204097, 1.0707228163204094), -0.2498898017969066)]
[INFO] [1753420606.060199256] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7300000190734863, 4.625, 2.930000066757202])
[INFO] [1753420606.061743396] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73000002 4.625      2.93000007]
[INFO] [1753420606.065154660] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420606.066025052] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420606.066873492] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420606.067864944] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420606.068689319] [solver_node]: 求解器返回结果: [((1.084903456519145, 1.0869034565191449), (4.865886457436534, 4.867886457436534), -1.4063377948224742), ((8.911096543480856, 8.913096543480854), (3.132113542563466, 3.134113542563466), 1.7352548587673184), ((8.935356012960362, 8.937356012960361), (3.2537519441577794, 3.255751944157779), 1.835458821252127), ((1.0606439870396387, 1.0626439870396385), (4.74424805584222, 4.746248055842221), -1.3061338323376661), ((4.74424805584222, 4.746248055842221), (6.937356012960361, 6.939356012960362), -2.8769301591325624), ((5.251751944157778, 5.253751944157779), (1.0606439870396385, 1.0626439870396382), 0.26466249445723056), ((6.8262674297752435, 6.828267429775244), (6.92927718367959, 6.93127718367959), 2.8917028517928864), ((3.1697325702247556, 3.1717325702247554), (1.0687228163204097, 1.0707228163204094), -0.2498898017969066)]
[INFO] [1753420606.156377386] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7300000190734863, 4.625, 2.930000066757202])
[INFO] [1753420606.159765481] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73000002 4.625      2.93000007]
[INFO] [1753420606.164947099] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420606.166303521] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420606.167171097] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420606.167959983] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420606.168851496] [solver_node]: 求解器返回结果: [((1.084903456519145, 1.0869034565191449), (4.865886457436534, 4.867886457436534), -1.4063377948224742), ((8.911096543480856, 8.913096543480854), (3.132113542563466, 3.134113542563466), 1.7352548587673184), ((8.935356012960362, 8.937356012960361), (3.2537519441577794, 3.255751944157779), 1.835458821252127), ((1.0606439870396387, 1.0626439870396385), (4.74424805584222, 4.746248055842221), -1.3061338323376661), ((4.74424805584222, 4.746248055842221), (6.937356012960361, 6.939356012960362), -2.8769301591325624), ((5.251751944157778, 5.253751944157779), (1.0606439870396385, 1.0626439870396382), 0.26466249445723056), ((6.8262674297752435, 6.828267429775244), (6.92927718367959, 6.93127718367959), 2.8917028517928864), ((3.1697325702247556, 3.1717325702247554), (1.0687228163204097, 1.0707228163204094), -0.2498898017969066)]
[INFO] [1753420606.254624917] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7300000190734863, 4.625, 2.930000066757202])
[INFO] [1753420606.256148352] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73000002 4.625      2.93000007]
[INFO] [1753420606.259547584] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420606.260425304] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420606.261199118] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420606.261959139] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420606.262769242] [solver_node]: 求解器返回结果: [((1.084903456519145, 1.0869034565191449), (4.865886457436534, 4.867886457436534), -1.4063377948224742), ((8.911096543480856, 8.913096543480854), (3.132113542563466, 3.134113542563466), 1.7352548587673184), ((8.935356012960362, 8.937356012960361), (3.2537519441577794, 3.255751944157779), 1.835458821252127), ((1.0606439870396387, 1.0626439870396385), (4.74424805584222, 4.746248055842221), -1.3061338323376661), ((4.74424805584222, 4.746248055842221), (6.937356012960361, 6.939356012960362), -2.8769301591325624), ((5.251751944157778, 5.253751944157779), (1.0606439870396385, 1.0626439870396382), 0.26466249445723056), ((6.8262674297752435, 6.828267429775244), (6.92927718367959, 6.93127718367959), 2.8917028517928864), ((3.1697325702247556, 3.1717325702247554), (1.0687228163204097, 1.0707228163204094), -0.2498898017969066)]
[INFO] [1753420606.356197598] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7300000190734863, 4.625, 2.930000066757202])
[INFO] [1753420606.357834060] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73000002 4.625      2.93000007]
[INFO] [1753420606.361741402] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420606.363851574] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420606.364652236] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420606.365416610] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420606.366219192] [solver_node]: 求解器返回结果: [((1.084903456519145, 1.0869034565191449), (4.865886457436534, 4.867886457436534), -1.4063377948224742), ((8.911096543480856, 8.913096543480854), (3.132113542563466, 3.134113542563466), 1.7352548587673184), ((8.935356012960362, 8.937356012960361), (3.2537519441577794, 3.255751944157779), 1.835458821252127), ((1.0606439870396387, 1.0626439870396385), (4.74424805584222, 4.746248055842221), -1.3061338323376661), ((4.74424805584222, 4.746248055842221), (6.937356012960361, 6.939356012960362), -2.8769301591325624), ((5.251751944157778, 5.253751944157779), (1.0606439870396385, 1.0626439870396382), 0.26466249445723056), ((6.8262674297752435, 6.828267429775244), (6.92927718367959, 6.93127718367959), 2.8917028517928864), ((3.1697325702247556, 3.1717325702247554), (1.0687228163204097, 1.0707228163204094), -0.2498898017969066)]
[INFO] [1753420606.455726958] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7279999852180481, 4.625, 2.930000066757202])
[INFO] [1753420606.457224440] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72799999 4.625      2.93000007]
[INFO] [1753420606.460763612] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420606.461635988] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420606.462399658] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420606.463208288] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420606.464019607] [solver_node]: 求解器返回结果: [((1.0829304076215154, 1.0849304076215152), (4.865886457436534, 4.867886457436534), -1.4063377948224742), ((8.913069592378484, 8.915069592378483), (3.132113542563466, 3.134113542563466), 1.7352548587673184), ((8.937115827774349, 8.939115827774348), (3.2529117876654206, 3.2549117876654203), 1.8348804062085995), ((1.0588841722256517, 1.0608841722256515), (4.745088212334579, 4.74708821233458), -1.3067122473811936), ((4.745088212334579, 4.74708821233458), (6.939115827774348, 6.9411158277743485), -2.87750857417609), ((5.250911787665419, 5.25291178766542), (1.0588841722256515, 1.0608841722256512), 0.2640840794137031), ((6.826050385172432, 6.828050385172433), (6.9311148634044875, 6.933114863404488), 2.8920820263378326), ((3.1699496148275674, 3.171949614827567), (1.0668851365955123, 1.068885136595512), -0.24951062725196035)]
[INFO] [1753420606.557410938] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7279999852180481, 4.625, 30.763999938964844])
[WARN] [1753420606.559034600] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420606.655634789] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7279999852180481, 4.625, 30.763999938964844])
[WARN] [1753420606.656695203] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420606.756956647] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7279999852180481, 4.625, 30.763999938964844])
[WARN] [1753420606.758001861] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420606.856415669] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7279999852180481, 4.625, 30.763999938964844])
[WARN] [1753420606.857475507] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420606.956111017] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7279999852180481, 4.625, 30.763999938964844])
[WARN] [1753420606.957275178] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420607.056291915] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7279999852180481, 4.625, 30.76300048828125])
[WARN] [1753420607.057490733] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420607.154600857] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7279999852180481, 4.625, 30.76300048828125])
[WARN] [1753420607.155893118] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420607.256244933] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7279999852180481, 4.625, 30.76300048828125])
[WARN] [1753420607.258500901] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420607.355533455] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7279999852180481, 4.625, 30.76300048828125])
[WARN] [1753420607.357626154] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420607.455057503] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.064998626708984, 4.625, 30.76300048828125])
[WARN] [1753420607.456354180] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420607.555677966] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.064998626708984, 4.625, 1.097000002861023])
[WARN] [1753420607.556747212] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420607.655553416] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.064998626708984, 4.625, 1.097000002861023])
[WARN] [1753420607.657471774] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420607.756325724] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.064998626708984, 4.625, 1.097000002861023])
[WARN] [1753420607.757463484] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420607.855788842] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 34.064998626708984, 4.625, 1.097000002861023])
[WARN] [1753420607.856824327] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420607.956715938] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.722000002861023, 4.625, 1.097000002861023])
[INFO] [1753420607.958336111] [solver_node]: 调用求解器前，distances shape: (4,), values: [  nan 0.722 4.625 1.097]
[INFO] [1753420607.961565706] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420607.962491684] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420607.963334620] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420607.964112498] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420607.964918825] [solver_node]: 求解器返回结果: [((9.072513926654374, 9.074513926654372), (3.8745226507426813, 3.876522650742681), 2.1279577599165855), ((0.9234860733456263, 0.9254860733456263), (4.1234773492573185, 4.125477349257319), -1.0136348936732076), ((8.934630843159095, 8.936630843159094), (1.3938427880413449, 1.3958427880413447), 1.3224236399394877), ((1.0613691568409054, 1.0633691568409052), (6.604157211958655, 6.606157211958656), -1.8191690136503054), ((4.1234773492573185, 4.125477349257319), (7.074513926654373, 7.076513926654374), -2.584431220468104), ((5.87252265074268, 5.874522650742681), (0.9234860733456262, 0.9254860733456262), 0.557161433121689), ((8.602157211958655, 8.604157211958654), (6.936630843159094, 6.938630843159094), 2.8932199667343843), ((1.3938427880413449, 1.3958427880413447), (1.0613691568409054, 1.0633691568409052), -0.24837268685540864)]
[INFO] [1753420608.055194293] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.722000002861023, 4.625, 1.097000002861023])
[INFO] [1753420608.056955239] [solver_node]: 调用求解器前，distances shape: (4,), values: [  nan 0.722 4.625 1.097]
[INFO] [1753420608.061342338] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420608.063600418] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420608.064403192] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420608.065159853] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420608.065973348] [solver_node]: 求解器返回结果: [((9.072513926654374, 9.074513926654372), (3.8745226507426813, 3.876522650742681), 2.1279577599165855), ((0.9234860733456263, 0.9254860733456263), (4.1234773492573185, 4.125477349257319), -1.0136348936732076), ((8.934630843159095, 8.936630843159094), (1.3938427880413449, 1.3958427880413447), 1.3224236399394877), ((1.0613691568409054, 1.0633691568409052), (6.604157211958655, 6.606157211958656), -1.8191690136503054), ((4.1234773492573185, 4.125477349257319), (7.074513926654373, 7.076513926654374), -2.584431220468104), ((5.87252265074268, 5.874522650742681), (0.9234860733456262, 0.9254860733456262), 0.557161433121689), ((8.602157211958655, 8.604157211958654), (6.936630843159094, 6.938630843159094), 2.8932199667343843), ((1.3938427880413449, 1.3958427880413447), (1.0613691568409054, 1.0633691568409052), -0.24837268685540864)]
[INFO] [1753420608.154984301] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.722000002861023, 4.625, 1.097000002861023])
[INFO] [1753420608.156466391] [solver_node]: 调用求解器前，distances shape: (4,), values: [  nan 0.722 4.625 1.097]
[INFO] [1753420608.159496300] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420608.160340996] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420608.161150619] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420608.161909840] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420608.162709159] [solver_node]: 求解器返回结果: [((9.072513926654374, 9.074513926654372), (3.8745226507426813, 3.876522650742681), 2.1279577599165855), ((0.9234860733456263, 0.9254860733456263), (4.1234773492573185, 4.125477349257319), -1.0136348936732076), ((8.934630843159095, 8.936630843159094), (1.3938427880413449, 1.3958427880413447), 1.3224236399394877), ((1.0613691568409054, 1.0633691568409052), (6.604157211958655, 6.606157211958656), -1.8191690136503054), ((4.1234773492573185, 4.125477349257319), (7.074513926654373, 7.076513926654374), -2.584431220468104), ((5.87252265074268, 5.874522650742681), (0.9234860733456262, 0.9254860733456262), 0.557161433121689), ((8.602157211958655, 8.604157211958654), (6.936630843159094, 6.938630843159094), 2.8932199667343843), ((1.3938427880413449, 1.3958427880413447), (1.0613691568409054, 1.0633691568409052), -0.24837268685540864)]
[INFO] [1753420608.255540443] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.722000002861023, 4.625, 1.097000002861023])
[INFO] [1753420608.257130824] [solver_node]: 调用求解器前，distances shape: (4,), values: [  nan 0.722 4.625 1.097]
[INFO] [1753420608.261124345] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420608.262118164] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420608.262880938] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420608.263632575] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420608.264395925] [solver_node]: 求解器返回结果: [((9.072513926654374, 9.074513926654372), (3.8745226507426813, 3.876522650742681), 2.1279577599165855), ((0.9234860733456263, 0.9254860733456263), (4.1234773492573185, 4.125477349257319), -1.0136348936732076), ((8.934630843159095, 8.936630843159094), (1.3938427880413449, 1.3958427880413447), 1.3224236399394877), ((1.0613691568409054, 1.0633691568409052), (6.604157211958655, 6.606157211958656), -1.8191690136503054), ((4.1234773492573185, 4.125477349257319), (7.074513926654373, 7.076513926654374), -2.584431220468104), ((5.87252265074268, 5.874522650742681), (0.9234860733456262, 0.9254860733456262), 0.557161433121689), ((8.602157211958655, 8.604157211958654), (6.936630843159094, 6.938630843159094), 2.8932199667343843), ((1.3938427880413449, 1.3958427880413447), (1.0613691568409054, 1.0633691568409052), -0.24837268685540864)]
[INFO] [1753420608.354516797] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.722000002861023, 4.625, 1.097000002861023])
[INFO] [1753420608.356338800] [solver_node]: 调用求解器前，distances shape: (4,), values: [  nan 0.722 4.625 1.097]
[INFO] [1753420608.359548938] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420608.360425091] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420608.361208953] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420608.361910285] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420608.362692995] [solver_node]: 求解器返回结果: [((9.072513926654374, 9.074513926654372), (3.8745226507426813, 3.876522650742681), 2.1279577599165855), ((0.9234860733456263, 0.9254860733456263), (4.1234773492573185, 4.125477349257319), -1.0136348936732076), ((8.934630843159095, 8.936630843159094), (1.3938427880413449, 1.3958427880413447), 1.3224236399394877), ((1.0613691568409054, 1.0633691568409052), (6.604157211958655, 6.606157211958656), -1.8191690136503054), ((4.1234773492573185, 4.125477349257319), (7.074513926654373, 7.076513926654374), -2.584431220468104), ((5.87252265074268, 5.874522650742681), (0.9234860733456262, 0.9254860733456262), 0.557161433121689), ((8.602157211958655, 8.604157211958654), (6.936630843159094, 6.938630843159094), 2.8932199667343843), ((1.3938427880413449, 1.3958427880413447), (1.0613691568409054, 1.0633691568409052), -0.24837268685540864)]
[INFO] [1753420608.454756162] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7310000061988831, 4.625, 1.097000002861023])
[INFO] [1753420608.456201483] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73100001 4.625      1.097     ]
[INFO] [1753420608.459145949] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420608.459952244] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420608.460908143] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420608.461603011] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420608.462339831] [solver_node]: 求解器返回结果: [((9.067630969109649, 9.069630969109648), (3.8874177002425436, 3.8894177002425434), 2.132613014790569), ((0.9283690308903508, 0.9303690308903508), (4.110582299757455, 4.112582299757456), -1.008979638799224), ((8.92635856216936, 8.92835856216936), (1.3936400253854426, 1.3956400253854424), 1.3207169708849462), ((1.0696414378306383, 1.071641437830638), (6.604359974614558, 6.606359974614558), -1.820875682704847), ((4.110582299757455, 4.112582299757456), (7.069630969109649, 7.071630969109649), -2.579775965594121), ((5.885417700242543, 5.887417700242544), (0.9283690308903508, 0.9303690308903508), 0.5618166879956725), ((8.602359974614558, 8.604359974614557), (6.928358562169361, 6.930358562169362), 2.8915132976798428), ((1.3936400253854426, 1.3956400253854424), (1.0696414378306385, 1.0716414378306383), -0.2500793559099503)]
[INFO] [1753420608.555957762] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7310000061988831, 4.625, 1.097000002861023])
[INFO] [1753420608.558097534] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73100001 4.625      1.097     ]
[INFO] [1753420608.561877353] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420608.562890661] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420608.563746525] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420608.564532787] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420608.565361675] [solver_node]: 求解器返回结果: [((9.067630969109649, 9.069630969109648), (3.8874177002425436, 3.8894177002425434), 2.132613014790569), ((0.9283690308903508, 0.9303690308903508), (4.110582299757455, 4.112582299757456), -1.008979638799224), ((8.92635856216936, 8.92835856216936), (1.3936400253854426, 1.3956400253854424), 1.3207169708849462), ((1.0696414378306383, 1.071641437830638), (6.604359974614558, 6.606359974614558), -1.820875682704847), ((4.110582299757455, 4.112582299757456), (7.069630969109649, 7.071630969109649), -2.579775965594121), ((5.885417700242543, 5.887417700242544), (0.9283690308903508, 0.9303690308903508), 0.5618166879956725), ((8.602359974614558, 8.604359974614557), (6.928358562169361, 6.930358562169362), 2.8915132976798428), ((1.3936400253854426, 1.3956400253854424), (1.0696414378306385, 1.0716414378306383), -0.2500793559099503)]
[INFO] [1753420608.654939364] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7310000061988831, 4.625, 1.097000002861023])
[INFO] [1753420608.657212868] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73100001 4.625      1.097     ]
[INFO] [1753420608.660581699] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420608.661440539] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420608.662183344] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420608.662951461] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420608.663723259] [solver_node]: 求解器返回结果: [((9.067630969109649, 9.069630969109648), (3.8874177002425436, 3.8894177002425434), 2.132613014790569), ((0.9283690308903508, 0.9303690308903508), (4.110582299757455, 4.112582299757456), -1.008979638799224), ((8.92635856216936, 8.92835856216936), (1.3936400253854426, 1.3956400253854424), 1.3207169708849462), ((1.0696414378306383, 1.071641437830638), (6.604359974614558, 6.606359974614558), -1.820875682704847), ((4.110582299757455, 4.112582299757456), (7.069630969109649, 7.071630969109649), -2.579775965594121), ((5.885417700242543, 5.887417700242544), (0.9283690308903508, 0.9303690308903508), 0.5618166879956725), ((8.602359974614558, 8.604359974614557), (6.928358562169361, 6.930358562169362), 2.8915132976798428), ((1.3936400253854426, 1.3956400253854424), (1.0696414378306385, 1.0716414378306383), -0.2500793559099503)]
[INFO] [1753420608.754845087] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7310000061988831, 4.625, 1.097000002861023])
[INFO] [1753420608.756415660] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73100001 4.625      1.097     ]
[INFO] [1753420608.759626118] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420608.760711877] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420608.762251920] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420608.763060455] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420608.763824156] [solver_node]: 求解器返回结果: [((9.067630969109649, 9.069630969109648), (3.8874177002425436, 3.8894177002425434), 2.132613014790569), ((0.9283690308903508, 0.9303690308903508), (4.110582299757455, 4.112582299757456), -1.008979638799224), ((8.92635856216936, 8.92835856216936), (1.3936400253854426, 1.3956400253854424), 1.3207169708849462), ((1.0696414378306383, 1.071641437830638), (6.604359974614558, 6.606359974614558), -1.820875682704847), ((4.110582299757455, 4.112582299757456), (7.069630969109649, 7.071630969109649), -2.579775965594121), ((5.885417700242543, 5.887417700242544), (0.9283690308903508, 0.9303690308903508), 0.5618166879956725), ((8.602359974614558, 8.604359974614557), (6.928358562169361, 6.930358562169362), 2.8915132976798428), ((1.3936400253854426, 1.3956400253854424), (1.0696414378306385, 1.0716414378306383), -0.2500793559099503)]
[INFO] [1753420608.855134758] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7310000061988831, 4.625, 1.097000002861023])
[INFO] [1753420608.856750387] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73100001 4.625      1.097     ]
[INFO] [1753420608.860100402] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420608.862938562] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420608.865490633] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420608.867440736] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420608.868304409] [solver_node]: 求解器返回结果: [((9.067630969109649, 9.069630969109648), (3.8874177002425436, 3.8894177002425434), 2.132613014790569), ((0.9283690308903508, 0.9303690308903508), (4.110582299757455, 4.112582299757456), -1.008979638799224), ((8.92635856216936, 8.92835856216936), (1.3936400253854426, 1.3956400253854424), 1.3207169708849462), ((1.0696414378306383, 1.071641437830638), (6.604359974614558, 6.606359974614558), -1.820875682704847), ((4.110582299757455, 4.112582299757456), (7.069630969109649, 7.071630969109649), -2.579775965594121), ((5.885417700242543, 5.887417700242544), (0.9283690308903508, 0.9303690308903508), 0.5618166879956725), ((8.602359974614558, 8.604359974614557), (6.928358562169361, 6.930358562169362), 2.8915132976798428), ((1.3936400253854426, 1.3956400253854424), (1.0696414378306385, 1.0716414378306383), -0.2500793559099503)]
[INFO] [1753420608.954959167] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7350000143051147, 4.625, 1.097000002861023])
[INFO] [1753420608.956443113] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73500001 4.625      1.097     ]
[INFO] [1753420608.959363163] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420608.960170770] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420608.960891494] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420608.961581818] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420608.962324975] [solver_node]: 求解器返回结果: [((9.065476320069914, 9.067476320069913), (3.89315318001584, 3.8951531800158397), 2.134673311566541), ((0.9305236799300862, 0.9325236799300862), (4.104846819984159, 4.10684681998416), -1.006919342023252), ((8.922685296257965, 8.924685296257964), (1.3935486622587256, 1.3955486622587254), 1.31995892678709), ((1.0733147037420347, 1.0753147037420345), (6.604451337741274, 6.606451337741275), -1.8216337268027032), ((4.104846819984158, 4.106846819984159), (7.067476320069914, 7.069476320069914), -2.5777156688181484), ((5.89115318001584, 5.89315318001584), (0.9305236799300864, 0.9325236799300864), 0.5638769847716446), ((8.602451337741273, 8.604451337741272), (6.924685296257965, 6.926685296257966), 2.8907552535819865), ((1.3935486622587256, 1.3955486622587254), (1.0733147037420347, 1.0753147037420345), -0.2508374000078065)]
[INFO] [1753420609.055310664] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7350000143051147, 4.625, 1.097000002861023])
[INFO] [1753420609.058880140] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73500001 4.625      1.097     ]
[INFO] [1753420609.063578289] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420609.064522283] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420609.065300929] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420609.066044246] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420609.067295449] [solver_node]: 求解器返回结果: [((9.065476320069914, 9.067476320069913), (3.89315318001584, 3.8951531800158397), 2.134673311566541), ((0.9305236799300862, 0.9325236799300862), (4.104846819984159, 4.10684681998416), -1.006919342023252), ((8.922685296257965, 8.924685296257964), (1.3935486622587256, 1.3955486622587254), 1.31995892678709), ((1.0733147037420347, 1.0753147037420345), (6.604451337741274, 6.606451337741275), -1.8216337268027032), ((4.104846819984158, 4.106846819984159), (7.067476320069914, 7.069476320069914), -2.5777156688181484), ((5.89115318001584, 5.89315318001584), (0.9305236799300864, 0.9325236799300864), 0.5638769847716446), ((8.602451337741273, 8.604451337741272), (6.924685296257965, 6.926685296257966), 2.8907552535819865), ((1.3935486622587256, 1.3955486622587254), (1.0733147037420347, 1.0753147037420345), -0.2508374000078065)]
[INFO] [1753420609.154593587] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7350000143051147, 4.625, 1.097000002861023])
[INFO] [1753420609.156136446] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73500001 4.625      1.097     ]
[INFO] [1753420609.159462012] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420609.161181836] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420609.162551027] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420609.165188349] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420609.166793514] [solver_node]: 求解器返回结果: [((9.065476320069914, 9.067476320069913), (3.89315318001584, 3.8951531800158397), 2.134673311566541), ((0.9305236799300862, 0.9325236799300862), (4.104846819984159, 4.10684681998416), -1.006919342023252), ((8.922685296257965, 8.924685296257964), (1.3935486622587256, 1.3955486622587254), 1.31995892678709), ((1.0733147037420347, 1.0753147037420345), (6.604451337741274, 6.606451337741275), -1.8216337268027032), ((4.104846819984158, 4.106846819984159), (7.067476320069914, 7.069476320069914), -2.5777156688181484), ((5.89115318001584, 5.89315318001584), (0.9305236799300864, 0.9325236799300864), 0.5638769847716446), ((8.602451337741273, 8.604451337741272), (6.924685296257965, 6.926685296257966), 2.8907552535819865), ((1.3935486622587256, 1.3955486622587254), (1.0733147037420347, 1.0753147037420345), -0.2508374000078065)]
[INFO] [1753420609.255529228] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7350000143051147, 4.625, 1.097000002861023])
[INFO] [1753420609.257146394] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73500001 4.625      1.097     ]
[INFO] [1753420609.260172079] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420609.260990278] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420609.261727419] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420609.262433807] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420609.263244773] [solver_node]: 求解器返回结果: [((9.065476320069914, 9.067476320069913), (3.89315318001584, 3.8951531800158397), 2.134673311566541), ((0.9305236799300862, 0.9325236799300862), (4.104846819984159, 4.10684681998416), -1.006919342023252), ((8.922685296257965, 8.924685296257964), (1.3935486622587256, 1.3955486622587254), 1.31995892678709), ((1.0733147037420347, 1.0753147037420345), (6.604451337741274, 6.606451337741275), -1.8216337268027032), ((4.104846819984158, 4.106846819984159), (7.067476320069914, 7.069476320069914), -2.5777156688181484), ((5.89115318001584, 5.89315318001584), (0.9305236799300864, 0.9325236799300864), 0.5638769847716446), ((8.602451337741273, 8.604451337741272), (6.924685296257965, 6.926685296257966), 2.8907552535819865), ((1.3935486622587256, 1.3955486622587254), (1.0733147037420347, 1.0753147037420345), -0.2508374000078065)]
[INFO] [1753420609.357760266] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7350000143051147, 4.625, 1.097000002861023])
[INFO] [1753420609.359446073] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73500001 4.625      1.097     ]
[INFO] [1753420609.362743638] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420609.363681425] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420609.364491623] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420609.365278974] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420609.366097269] [solver_node]: 求解器返回结果: [((9.065476320069914, 9.067476320069913), (3.89315318001584, 3.8951531800158397), 2.134673311566541), ((0.9305236799300862, 0.9325236799300862), (4.104846819984159, 4.10684681998416), -1.006919342023252), ((8.922685296257965, 8.924685296257964), (1.3935486622587256, 1.3955486622587254), 1.31995892678709), ((1.0733147037420347, 1.0753147037420345), (6.604451337741274, 6.606451337741275), -1.8216337268027032), ((4.104846819984158, 4.106846819984159), (7.067476320069914, 7.069476320069914), -2.5777156688181484), ((5.89115318001584, 5.89315318001584), (0.9305236799300864, 0.9325236799300864), 0.5638769847716446), ((8.602451337741273, 8.604451337741272), (6.924685296257965, 6.926685296257966), 2.8907552535819865), ((1.3935486622587256, 1.3955486622587254), (1.0733147037420347, 1.0753147037420345), -0.2508374000078065)]
[INFO] [1753420609.455734512] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7329999804496765, 4.625, 1.097000002861023])
[INFO] [1753420609.457858892] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73299998 4.625      1.097     ]
[INFO] [1753420609.461453745] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420609.462440749] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420609.463279876] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420609.464083867] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420609.464917683] [solver_node]: 求解器返回结果: [((9.066552466750357, 9.068552466750356), (3.8902850811570056, 3.8922850811570053), 2.133643817361723), ((0.9294475332496425, 0.9314475332496425), (4.107714918842994, 4.109714918842995), -1.0079488362280702), ((8.92452170145428, 8.926521701454279), (1.3935944402453189, 1.3955944402453186), 1.3203379177313221), ((1.07147829854572, 1.0734782985457199), (6.604405559754681, 6.606405559754681), -1.821254735858471), ((4.107714918842993, 4.109714918842994), (7.068552466750357, 7.070552466750358), -2.5787451630229667), ((5.888285081157004, 5.890285081157005), (0.9294475332496424, 0.9314475332496424), 0.5628474905668264), ((8.602405559754681, 8.60440555975468), (6.92652170145428, 6.92852170145428), 2.891134244526219), ((1.3935944402453189, 1.3955944402453186), (1.0714782985457205, 1.0734782985457203), -0.2504584090635744)]
[INFO] [1753420609.557355165] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7329999804496765, 4.625, 1.097000002861023])
[INFO] [1753420609.559096750] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73299998 4.625      1.097     ]
[INFO] [1753420609.562439628] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420609.563622669] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420609.564546759] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420609.565365758] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420609.566277880] [solver_node]: 求解器返回结果: [((9.066552466750357, 9.068552466750356), (3.8902850811570056, 3.8922850811570053), 2.133643817361723), ((0.9294475332496425, 0.9314475332496425), (4.107714918842994, 4.109714918842995), -1.0079488362280702), ((8.92452170145428, 8.926521701454279), (1.3935944402453189, 1.3955944402453186), 1.3203379177313221), ((1.07147829854572, 1.0734782985457199), (6.604405559754681, 6.606405559754681), -1.821254735858471), ((4.107714918842993, 4.109714918842994), (7.068552466750357, 7.070552466750358), -2.5787451630229667), ((5.888285081157004, 5.890285081157005), (0.9294475332496424, 0.9314475332496424), 0.5628474905668264), ((8.602405559754681, 8.60440555975468), (6.92652170145428, 6.92852170145428), 2.891134244526219), ((1.3935944402453189, 1.3955944402453186), (1.0714782985457205, 1.0734782985457203), -0.2504584090635744)]
[INFO] [1753420609.655486535] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7329999804496765, 4.625, 1.097000002861023])
[INFO] [1753420609.658893159] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73299998 4.625      1.097     ]
[INFO] [1753420609.662451115] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420609.663420806] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420609.664251422] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420609.665019700] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420609.665842091] [solver_node]: 求解器返回结果: [((9.066552466750357, 9.068552466750356), (3.8902850811570056, 3.8922850811570053), 2.133643817361723), ((0.9294475332496425, 0.9314475332496425), (4.107714918842994, 4.109714918842995), -1.0079488362280702), ((8.92452170145428, 8.926521701454279), (1.3935944402453189, 1.3955944402453186), 1.3203379177313221), ((1.07147829854572, 1.0734782985457199), (6.604405559754681, 6.606405559754681), -1.821254735858471), ((4.107714918842993, 4.109714918842994), (7.068552466750357, 7.070552466750358), -2.5787451630229667), ((5.888285081157004, 5.890285081157005), (0.9294475332496424, 0.9314475332496424), 0.5628474905668264), ((8.602405559754681, 8.60440555975468), (6.92652170145428, 6.92852170145428), 2.891134244526219), ((1.3935944402453189, 1.3955944402453186), (1.0714782985457205, 1.0734782985457203), -0.2504584090635744)]
[INFO] [1753420609.758945608] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7329999804496765, 4.625, 0.24400000274181366])
[INFO] [1753420609.762313510] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73299998 4.625      0.244     ]
[WARN] [1753420609.765780296] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420609.766870887] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420609.767882147] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420609.855527078] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7329999804496765, 4.625, 0.24699999392032623])
[INFO] [1753420609.857608769] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73299998 4.625      0.24699999]
[WARN] [1753420609.859264720] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420609.860188970] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420609.861176613] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420609.956014963] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7289999723434448, 4.625, 0.24899999797344208])
[INFO] [1753420609.958025100] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72899997 4.625      0.249     ]
[WARN] [1753420609.961899513] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420609.964402303] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420609.965441917] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420610.056178935] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7289999723434448, 4.625, 0.24899999797344208])
[INFO] [1753420610.057910984] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72899997 4.625      0.249     ]
[WARN] [1753420610.060035652] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420610.065553151] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420610.067888481] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420610.156996206] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7289999723434448, 4.625, 0.25])
[INFO] [1753420610.158747583] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72899997 4.625      0.25      ]
[WARN] [1753420610.160489648] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420610.161449995] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420610.162506857] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420610.255544741] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7289999723434448, 4.625999927520752, 0.24899999797344208])
[INFO] [1753420610.258017931] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72899997 4.62599993 0.249     ]
[WARN] [1753420610.260257386] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420610.263368161] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420610.264837131] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420610.360007650] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7289999723434448, 4.625999927520752, 0.24899999797344208])
[INFO] [1753420610.361629360] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72899997 4.62599993 0.249     ]
[WARN] [1753420610.362809553] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420610.363598247] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420610.364513281] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420610.455253084] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7289999723434448, 4.625999927520752, 0.24899999797344208])
[INFO] [1753420610.456872170] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72899997 4.62599993 0.249     ]
[WARN] [1753420610.458074636] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420610.458936740] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420610.459814269] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420610.556974316] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.625999927520752, 0.24899999797344208])
[INFO] [1753420610.558618107] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.62599993 0.249     ]
[WARN] [1753420610.560294858] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420610.561214180] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420610.562119645] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420610.660106596] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.625999927520752, 0.24899999797344208])
[INFO] [1753420610.661657968] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.62599993 0.249     ]
[WARN] [1753420610.662851826] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420610.663646120] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420610.664539521] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420610.755856269] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.625999927520752, 0.24899999797344208])
[INFO] [1753420610.757655103] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.62599993 0.249     ]
[WARN] [1753420610.758880738] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420610.759687192] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420610.760549713] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420610.855693096] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.625999927520752, 0.24899999797344208])
[INFO] [1753420610.858875937] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.62599993 0.249     ]
[WARN] [1753420610.860244424] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420610.861126241] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420610.862003033] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420610.955310269] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.625999927520752, 0.24899999797344208])
[INFO] [1753420610.963532292] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.62599993 0.249     ]
[WARN] [1753420610.968329899] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420610.970518697] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420610.972935725] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420611.059999105] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7260000109672546, 4.625999927520752, 0.24899999797344208])
[INFO] [1753420611.062458182] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72600001 4.62599993 0.249     ]
[WARN] [1753420611.064055315] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420611.064908651] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420611.065841926] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420611.157690400] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7260000109672546, 4.625999927520752, 0.24899999797344208])
[INFO] [1753420611.159562197] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72600001 4.62599993 0.249     ]
[WARN] [1753420611.162415526] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420611.163506084] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420611.164465343] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420611.257907815] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7260000109672546, 4.625999927520752, 0.24899999797344208])
[INFO] [1753420611.259964961] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72600001 4.62599993 0.249     ]
[WARN] [1753420611.261400169] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420611.263535206] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420611.264913580] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420611.356507072] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7260000109672546, 4.625999927520752, 0.24899999797344208])
[INFO] [1753420611.358705470] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72600001 4.62599993 0.249     ]
[WARN] [1753420611.360081093] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420611.362114910] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420611.363114714] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420611.456542914] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7260000109672546, 4.625999927520752, 0.24899999797344208])
[INFO] [1753420611.460067653] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72600001 4.62599993 0.249     ]
[WARN] [1753420611.463572232] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420611.464442656] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420611.465307544] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420611.557281911] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.625999927520752, 0.24899999797344208])
[INFO] [1753420611.559401235] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.62599993 0.249     ]
[WARN] [1753420611.560606741] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420611.561408651] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420611.562270723] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420611.656398719] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.625999927520752, 0.24899999797344208])
[INFO] [1753420611.658255283] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.62599993 0.249     ]
[WARN] [1753420611.659557207] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420611.660369550] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420611.661212710] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420611.755252575] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.631999969482422, 0.23800000548362732])
[INFO] [1753420611.756718408] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63199997 0.23800001]
[WARN] [1753420611.757930442] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420611.763341603] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420611.764340191] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420611.862497515] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.631999969482422, 0.23800000548362732])
[INFO] [1753420611.864465795] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63199997 0.23800001]
[WARN] [1753420611.867337396] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420611.868363153] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420611.869296747] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420611.955778511] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.631999969482422, 0.2370000034570694])
[INFO] [1753420611.957457438] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63199997 0.237     ]
[WARN] [1753420611.958693985] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420611.959546425] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420611.962419434] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420612.056097240] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.631999969482422, 0.2370000034570694])
[INFO] [1753420612.057753127] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63199997 0.237     ]
[WARN] [1753420612.058920136] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420612.059739903] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420612.060616408] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420612.155476744] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.631999969482422, 0.2370000034570694])
[INFO] [1753420612.157450496] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63199997 0.237     ]
[WARN] [1753420612.158645089] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420612.159483129] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420612.160353938] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420612.257130200] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.631999969482422, 0.23600000143051147])
[INFO] [1753420612.259028717] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63199997 0.236     ]
[WARN] [1753420612.260370547] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420612.261254092] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420612.262154438] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420612.355162210] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.631999969482422, 0.23600000143051147])
[INFO] [1753420612.356722222] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63199997 0.236     ]
[WARN] [1753420612.357896527] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420612.358699973] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420612.359545085] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420612.456318628] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.631999969482422, 0.23600000143051147])
[INFO] [1753420612.458030292] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63199997 0.236     ]
[WARN] [1753420612.459259382] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420612.460092366] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420612.461201101] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420612.560721633] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.631999969482422, 0.23600000143051147])
[INFO] [1753420612.562306893] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63199997 0.236     ]
[WARN] [1753420612.563540304] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420612.564321382] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420612.565181182] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420612.655990525] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.631999969482422, 0.23600000143051147])
[INFO] [1753420612.660049103] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63199997 0.236     ]
[WARN] [1753420612.661755775] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420612.662838558] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420612.663924156] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420612.761027852] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.631999969482422, 0.23600000143051147])
[INFO] [1753420612.764029888] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63199997 0.236     ]
[WARN] [1753420612.769020141] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420612.770298513] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420612.771310862] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420612.856906137] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.631999969482422, 0.23600000143051147])
[INFO] [1753420612.858612297] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63199997 0.236     ]
[WARN] [1753420612.860296856] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420612.861268884] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420612.862165101] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420612.956621458] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.631999969482422, 0.23600000143051147])
[INFO] [1753420612.958151709] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63199997 0.236     ]
[WARN] [1753420612.959894190] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420612.961097904] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420612.962147246] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420613.056084165] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.631999969482422, 0.23600000143051147])
[INFO] [1753420613.063043465] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63199997 0.236     ]
[WARN] [1753420613.065920538] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420613.067912850] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420613.069954507] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420613.156259596] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.631999969482422, 0.23600000143051147])
[INFO] [1753420613.160054358] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63199997 0.236     ]
[WARN] [1753420613.162730882] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420613.164656728] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420613.166406857] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420613.259592427] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.631999969482422, 0.23600000143051147])
[INFO] [1753420613.261296987] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63199997 0.236     ]
[WARN] [1753420613.262464156] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420613.263291284] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420613.265990688] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420613.356555992] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.631999969482422, 0.23600000143051147])
[INFO] [1753420613.358163845] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63199997 0.236     ]
[WARN] [1753420613.359376615] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420613.360172830] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420613.361038006] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420613.456730943] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.631999969482422, 0.23600000143051147])
[INFO] [1753420613.461078041] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63199997 0.236     ]
[WARN] [1753420613.462591812] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420613.464867620] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420613.465829119] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420613.560321638] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.631999969482422, 0.23600000143051147])
[INFO] [1753420613.561872721] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63199997 0.236     ]
[WARN] [1753420613.569244929] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420613.576573456] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420613.580131668] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420613.656319447] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.631999969482422, 0.17599999904632568])
[INFO] [1753420613.658192492] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63199997 0.176     ]
[WARN] [1753420613.663390974] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420613.664377146] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420613.665486361] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420613.755772393] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.630000114440918, 0.17599999904632568])
[INFO] [1753420613.757419288] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63000011 0.176     ]
[WARN] [1753420613.760497679] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420613.763399456] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420613.768250377] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420613.856679109] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.630000114440918, 0.15700000524520874])
[INFO] [1753420613.858771808] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63000011 0.15700001]
[WARN] [1753420613.860080133] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420613.860929821] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420613.861868471] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420613.954702479] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.630000114440918, 0.1550000011920929])
[INFO] [1753420613.956276668] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63000011 0.155     ]
[WARN] [1753420613.957449693] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420613.958228274] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420613.959111467] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420614.061444623] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.630000114440918, 0.1550000011920929])
[INFO] [1753420614.064196893] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.63000011 0.155     ]
[WARN] [1753420614.065416799] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420614.066202166] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420614.067054286] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420614.157202299] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.629000186920166, 0.1550000011920929])
[INFO] [1753420614.159167282] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.62900019 0.155     ]
[WARN] [1753420614.160379444] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420614.161187851] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420614.162054659] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420614.257773325] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.629000186920166, 0.17000000178813934])
[INFO] [1753420614.259342618] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.62900019 0.17      ]
[WARN] [1753420614.260502618] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420614.261885985] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420614.262842332] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420614.357393829] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.629000186920166, 0.17000000178813934])
[INFO] [1753420614.358964210] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.62900019 0.17      ]
[WARN] [1753420614.360126674] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420614.360956938] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420614.362384882] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420614.454798879] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.629000186920166, 0.17000000178813934])
[INFO] [1753420614.456411468] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.62900019 0.17      ]
[WARN] [1753420614.457530188] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420614.458294817] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420614.459198011] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420614.554525658] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.629000186920166, 0.17000000178813934])
[INFO] [1753420614.556145607] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62900019 0.17      ]
[WARN] [1753420614.557975131] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420614.558815475] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420614.560040725] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420614.654919304] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.629000186920166, 0.17000000178813934])
[INFO] [1753420614.657189159] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62900019 0.17      ]
[WARN] [1753420614.658339528] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420614.659182912] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420614.660691626] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420614.758328426] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.629000186920166, 0.23399999737739563])
[INFO] [1753420614.759913751] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62900019 0.234     ]
[WARN] [1753420614.761049175] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420614.761942576] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420614.763206132] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420614.856398006] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.629000186920166, 0.23399999737739563])
[INFO] [1753420614.857898945] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62900019 0.234     ]
[WARN] [1753420614.859094243] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420614.859876601] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420614.860731249] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420614.956906343] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.629000186920166, 0.23399999737739563])
[INFO] [1753420614.958476692] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62900019 0.234     ]
[WARN] [1753420614.959657333] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420614.960430699] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420614.961296419] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420615.056756070] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.629000186920166, 0.23399999737739563])
[INFO] [1753420615.058628859] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62900019 0.234     ]
[WARN] [1753420615.059980097] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420615.060880123] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420615.061911128] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420615.155022297] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.627999782562256, 0.23399999737739563])
[INFO] [1753420615.156800011] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.62799978 0.234     ]
[WARN] [1753420615.158001901] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420615.158866789] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420615.159751998] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420615.255710576] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.627999782562256, 2.890000104904175])
[INFO] [1753420615.257321629] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.62799978 2.8900001 ]
[INFO] [1753420615.262084931] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420615.263554445] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420615.264408069] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420615.266289786] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420615.268376181] [solver_node]: 求解器返回结果: [((1.0858757035150497, 1.0878757035150495), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0688723659018866, 1.0708723659018864), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.91012429648495, 8.912124296484949), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.927127634098113, 8.929127634098112), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.938931105611307, 8.940931105611305), (3.2542066662320974, 3.256206666232097), 1.8377531941614835), ((1.0570688943886941, 1.059068894388694), (4.743793333767902, 4.745793333767903), -1.3038394594283096), ((8.929995709065532, 8.93199570906553), (3.1313759573825637, 3.1333759573825635), 1.3216200589407943), ((1.0660042909344685, 1.0680042909344682), (4.866624042617436, 4.868624042617436), -1.8199725946489989), ((4.743793333767902, 4.745793333767903), (6.940931105611305, 6.942931105611306), -2.874635786223206), ((5.252206666232096, 5.254206666232097), (1.0570688943886934, 1.0590688943886932), 0.26695686736658697), ((6.864624042617435, 6.866624042617436), (6.931995709065531, 6.933995709065532), 2.892416385735691), ((3.1313759573825637, 3.1333759573825635), (1.0660042909344685, 1.0680042909344682), -0.2491762678541023)]
[INFO] [1753420615.355251206] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.627999782562256, 2.890000104904175])
[INFO] [1753420615.356864083] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.62799978 2.8900001 ]
[INFO] [1753420615.360549947] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420615.361413268] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420615.362646422] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420615.363762518] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420615.364763730] [solver_node]: 求解器返回结果: [((1.0858757035150497, 1.0878757035150495), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0688723659018866, 1.0708723659018864), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.91012429648495, 8.912124296484949), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.927127634098113, 8.929127634098112), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.938931105611307, 8.940931105611305), (3.2542066662320974, 3.256206666232097), 1.8377531941614835), ((1.0570688943886941, 1.059068894388694), (4.743793333767902, 4.745793333767903), -1.3038394594283096), ((8.929995709065532, 8.93199570906553), (3.1313759573825637, 3.1333759573825635), 1.3216200589407943), ((1.0660042909344685, 1.0680042909344682), (4.866624042617436, 4.868624042617436), -1.8199725946489989), ((4.743793333767902, 4.745793333767903), (6.940931105611305, 6.942931105611306), -2.874635786223206), ((5.252206666232096, 5.254206666232097), (1.0570688943886934, 1.0590688943886932), 0.26695686736658697), ((6.864624042617435, 6.866624042617436), (6.931995709065531, 6.933995709065532), 2.892416385735691), ((3.1313759573825637, 3.1333759573825635), (1.0660042909344685, 1.0680042909344682), -0.2491762678541023)]
[INFO] [1753420615.456519373] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.627999782562256, 2.890000104904175])
[INFO] [1753420615.458265854] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.62799978 2.8900001 ]
[INFO] [1753420615.461600092] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420615.462492534] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420615.463271595] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420615.463960511] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420615.464726036] [solver_node]: 求解器返回结果: [((1.0858757035150497, 1.0878757035150495), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0688723659018866, 1.0708723659018864), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.91012429648495, 8.912124296484949), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.927127634098113, 8.929127634098112), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.938931105611307, 8.940931105611305), (3.2542066662320974, 3.256206666232097), 1.8377531941614835), ((1.0570688943886941, 1.059068894388694), (4.743793333767902, 4.745793333767903), -1.3038394594283096), ((8.929995709065532, 8.93199570906553), (3.1313759573825637, 3.1333759573825635), 1.3216200589407943), ((1.0660042909344685, 1.0680042909344682), (4.866624042617436, 4.868624042617436), -1.8199725946489989), ((4.743793333767902, 4.745793333767903), (6.940931105611305, 6.942931105611306), -2.874635786223206), ((5.252206666232096, 5.254206666232097), (1.0570688943886934, 1.0590688943886932), 0.26695686736658697), ((6.864624042617435, 6.866624042617436), (6.931995709065531, 6.933995709065532), 2.892416385735691), ((3.1313759573825637, 3.1333759573825635), (1.0660042909344685, 1.0680042909344682), -0.2491762678541023)]
[INFO] [1753420615.555073992] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7269999980926514, 4.627999782562256, 2.890000104904175])
[INFO] [1753420615.556576530] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.727      4.62799978 2.8900001 ]
[INFO] [1753420615.560487488] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420615.562027596] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420615.564137895] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420615.565438156] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420615.566802258] [solver_node]: 求解器返回结果: [((1.0858757035150497, 1.0878757035150495), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0688723659018866, 1.0708723659018864), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.91012429648495, 8.912124296484949), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.927127634098113, 8.929127634098112), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.938931105611307, 8.940931105611305), (3.2542066662320974, 3.256206666232097), 1.8377531941614835), ((1.0570688943886941, 1.059068894388694), (4.743793333767902, 4.745793333767903), -1.3038394594283096), ((8.929995709065532, 8.93199570906553), (3.1313759573825637, 3.1333759573825635), 1.3216200589407943), ((1.0660042909344685, 1.0680042909344682), (4.866624042617436, 4.868624042617436), -1.8199725946489989), ((4.743793333767902, 4.745793333767903), (6.940931105611305, 6.942931105611306), -2.874635786223206), ((5.252206666232096, 5.254206666232097), (1.0570688943886934, 1.0590688943886932), 0.26695686736658697), ((6.864624042617435, 6.866624042617436), (6.931995709065531, 6.933995709065532), 2.892416385735691), ((3.1313759573825637, 3.1333759573825635), (1.0660042909344685, 1.0680042909344682), -0.2491762678541023)]
[INFO] [1753420615.655829376] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.890000104904175])
[INFO] [1753420615.657468975] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.8900001 ]
[INFO] [1753420615.663277458] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420615.664180908] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420615.664931649] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420615.665682006] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420615.666497133] [solver_node]: 求解器返回结果: [((1.0829058950378454, 1.0849058950378452), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0659569434276557, 1.0679569434276555), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.913094104962154, 8.915094104962153), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.930043056572345, 8.932043056572343), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.941565009095706, 8.943565009095705), (3.2529224658467144, 3.254922465846714), 1.8368756965998534), ((1.0544349909042938, 1.0564349909042936), (4.7450775341532845, 4.747077534153285), -1.3047169569899397), ((8.932753810220623, 8.934753810220622), (3.131694397603069, 3.133694397603069), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.86630560239693, 4.868305602396931), -1.819403948791938), ((4.7450775341532845, 4.747077534153285), (6.943565009095706, 6.945565009095707), -2.8755132837848363), ((5.250922465846714, 5.252922465846715), (1.0544349909042932, 1.056434990904293), 0.26607936980495694), ((6.8643056023969296, 6.86630560239693), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.131694397603069, 3.133694397603069), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420615.755521083] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.890000104904175])
[INFO] [1753420615.757145737] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.8900001 ]
[INFO] [1753420615.761327679] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420615.763158898] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420615.764277170] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420615.765505557] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420615.766590707] [solver_node]: 求解器返回结果: [((1.0829058950378454, 1.0849058950378452), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0659569434276557, 1.0679569434276555), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.913094104962154, 8.915094104962153), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.930043056572345, 8.932043056572343), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.941565009095706, 8.943565009095705), (3.2529224658467144, 3.254922465846714), 1.8368756965998534), ((1.0544349909042938, 1.0564349909042936), (4.7450775341532845, 4.747077534153285), -1.3047169569899397), ((8.932753810220623, 8.934753810220622), (3.131694397603069, 3.133694397603069), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.86630560239693, 4.868305602396931), -1.819403948791938), ((4.7450775341532845, 4.747077534153285), (6.943565009095706, 6.945565009095707), -2.8755132837848363), ((5.250922465846714, 5.252922465846715), (1.0544349909042932, 1.056434990904293), 0.26607936980495694), ((6.8643056023969296, 6.86630560239693), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.131694397603069, 3.133694397603069), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420615.854862988] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.890000104904175])
[INFO] [1753420615.856527131] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.8900001 ]
[INFO] [1753420615.864620063] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420615.865897091] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420615.869877971] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420615.871127382] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420615.872092818] [solver_node]: 求解器返回结果: [((1.0829058950378454, 1.0849058950378452), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0659569434276557, 1.0679569434276555), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.913094104962154, 8.915094104962153), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.930043056572345, 8.932043056572343), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.941565009095706, 8.943565009095705), (3.2529224658467144, 3.254922465846714), 1.8368756965998534), ((1.0544349909042938, 1.0564349909042936), (4.7450775341532845, 4.747077534153285), -1.3047169569899397), ((8.932753810220623, 8.934753810220622), (3.131694397603069, 3.133694397603069), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.86630560239693, 4.868305602396931), -1.819403948791938), ((4.7450775341532845, 4.747077534153285), (6.943565009095706, 6.945565009095707), -2.8755132837848363), ((5.250922465846714, 5.252922465846715), (1.0544349909042932, 1.056434990904293), 0.26607936980495694), ((6.8643056023969296, 6.86630560239693), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.131694397603069, 3.133694397603069), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420615.955775177] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.890000104904175])
[INFO] [1753420615.958068906] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.8900001 ]
[INFO] [1753420615.963298845] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420615.964347003] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420615.965152241] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420615.965943688] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420615.966832545] [solver_node]: 求解器返回结果: [((1.0829058950378454, 1.0849058950378452), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0659569434276557, 1.0679569434276555), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.913094104962154, 8.915094104962153), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.930043056572345, 8.932043056572343), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.941565009095706, 8.943565009095705), (3.2529224658467144, 3.254922465846714), 1.8368756965998534), ((1.0544349909042938, 1.0564349909042936), (4.7450775341532845, 4.747077534153285), -1.3047169569899397), ((8.932753810220623, 8.934753810220622), (3.131694397603069, 3.133694397603069), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.86630560239693, 4.868305602396931), -1.819403948791938), ((4.7450775341532845, 4.747077534153285), (6.943565009095706, 6.945565009095707), -2.8755132837848363), ((5.250922465846714, 5.252922465846715), (1.0544349909042932, 1.056434990904293), 0.26607936980495694), ((6.8643056023969296, 6.86630560239693), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.131694397603069, 3.133694397603069), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420616.057810054] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.890000104904175])
[INFO] [1753420616.061533135] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.8900001 ]
[INFO] [1753420616.066111440] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420616.067574362] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420616.068765403] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420616.070606575] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420616.071696430] [solver_node]: 求解器返回结果: [((1.0829058950378454, 1.0849058950378452), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0659569434276557, 1.0679569434276555), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.913094104962154, 8.915094104962153), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.930043056572345, 8.932043056572343), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.941565009095706, 8.943565009095705), (3.2529224658467144, 3.254922465846714), 1.8368756965998534), ((1.0544349909042938, 1.0564349909042936), (4.7450775341532845, 4.747077534153285), -1.3047169569899397), ((8.932753810220623, 8.934753810220622), (3.131694397603069, 3.133694397603069), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.86630560239693, 4.868305602396931), -1.819403948791938), ((4.7450775341532845, 4.747077534153285), (6.943565009095706, 6.945565009095707), -2.8755132837848363), ((5.250922465846714, 5.252922465846715), (1.0544349909042932, 1.056434990904293), 0.26607936980495694), ((6.8643056023969296, 6.86630560239693), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.131694397603069, 3.133694397603069), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420616.155789297] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.890000104904175])
[INFO] [1753420616.157305340] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.8900001 ]
[INFO] [1753420616.161214634] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420616.162122276] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420616.162997277] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420616.163893046] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420616.164750990] [solver_node]: 求解器返回结果: [((1.0829058950378454, 1.0849058950378452), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0659569434276557, 1.0679569434276555), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.913094104962154, 8.915094104962153), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.930043056572345, 8.932043056572343), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.941565009095706, 8.943565009095705), (3.2529224658467144, 3.254922465846714), 1.8368756965998534), ((1.0544349909042938, 1.0564349909042936), (4.7450775341532845, 4.747077534153285), -1.3047169569899397), ((8.932753810220623, 8.934753810220622), (3.131694397603069, 3.133694397603069), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.86630560239693, 4.868305602396931), -1.819403948791938), ((4.7450775341532845, 4.747077534153285), (6.943565009095706, 6.945565009095707), -2.8755132837848363), ((5.250922465846714, 5.252922465846715), (1.0544349909042932, 1.056434990904293), 0.26607936980495694), ((6.8643056023969296, 6.86630560239693), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.131694397603069, 3.133694397603069), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420616.258191001] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.890000104904175])
[INFO] [1753420616.262834556] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.8900001 ]
[INFO] [1753420616.266885294] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420616.268815685] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420616.271443663] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420616.275851819] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420616.277696223] [solver_node]: 求解器返回结果: [((1.0829058950378454, 1.0849058950378452), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0659569434276557, 1.0679569434276555), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.913094104962154, 8.915094104962153), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.930043056572345, 8.932043056572343), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.941565009095706, 8.943565009095705), (3.2529224658467144, 3.254922465846714), 1.8368756965998534), ((1.0544349909042938, 1.0564349909042936), (4.7450775341532845, 4.747077534153285), -1.3047169569899397), ((8.932753810220623, 8.934753810220622), (3.131694397603069, 3.133694397603069), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.86630560239693, 4.868305602396931), -1.819403948791938), ((4.7450775341532845, 4.747077534153285), (6.943565009095706, 6.945565009095707), -2.8755132837848363), ((5.250922465846714, 5.252922465846715), (1.0544349909042932, 1.056434990904293), 0.26607936980495694), ((6.8643056023969296, 6.86630560239693), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.131694397603069, 3.133694397603069), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420616.362543096] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.890000104904175])
[INFO] [1753420616.365099488] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.8900001 ]
[INFO] [1753420616.368680005] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420616.370312915] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420616.371794813] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420616.373201348] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420616.375515494] [solver_node]: 求解器返回结果: [((1.0829058950378454, 1.0849058950378452), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0659569434276557, 1.0679569434276555), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.913094104962154, 8.915094104962153), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.930043056572345, 8.932043056572343), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.941565009095706, 8.943565009095705), (3.2529224658467144, 3.254922465846714), 1.8368756965998534), ((1.0544349909042938, 1.0564349909042936), (4.7450775341532845, 4.747077534153285), -1.3047169569899397), ((8.932753810220623, 8.934753810220622), (3.131694397603069, 3.133694397603069), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.86630560239693, 4.868305602396931), -1.819403948791938), ((4.7450775341532845, 4.747077534153285), (6.943565009095706, 6.945565009095707), -2.8755132837848363), ((5.250922465846714, 5.252922465846715), (1.0544349909042932, 1.056434990904293), 0.26607936980495694), ((6.8643056023969296, 6.86630560239693), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.131694397603069, 3.133694397603069), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420616.457678931] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.890000104904175])
[INFO] [1753420616.459351298] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.8900001 ]
[INFO] [1753420616.462934567] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420616.463809600] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420616.464643927] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420616.465468910] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420616.466504908] [solver_node]: 求解器返回结果: [((1.0829058950378454, 1.0849058950378452), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0659569434276557, 1.0679569434276555), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.913094104962154, 8.915094104962153), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.930043056572345, 8.932043056572343), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.941565009095706, 8.943565009095705), (3.2529224658467144, 3.254922465846714), 1.8368756965998534), ((1.0544349909042938, 1.0564349909042936), (4.7450775341532845, 4.747077534153285), -1.3047169569899397), ((8.932753810220623, 8.934753810220622), (3.131694397603069, 3.133694397603069), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.86630560239693, 4.868305602396931), -1.819403948791938), ((4.7450775341532845, 4.747077534153285), (6.943565009095706, 6.945565009095707), -2.8755132837848363), ((5.250922465846714, 5.252922465846715), (1.0544349909042932, 1.056434990904293), 0.26607936980495694), ((6.8643056023969296, 6.86630560239693), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.131694397603069, 3.133694397603069), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420616.556541975] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.890000104904175])
[INFO] [1753420616.560017337] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.8900001 ]
[INFO] [1753420616.565978913] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420616.568143582] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420616.569158043] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420616.570362461] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420616.571273750] [solver_node]: 求解器返回结果: [((1.0829058950378454, 1.0849058950378452), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0659569434276557, 1.0679569434276555), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.913094104962154, 8.915094104962153), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.930043056572345, 8.932043056572343), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.941565009095706, 8.943565009095705), (3.2529224658467144, 3.254922465846714), 1.8368756965998534), ((1.0544349909042938, 1.0564349909042936), (4.7450775341532845, 4.747077534153285), -1.3047169569899397), ((8.932753810220623, 8.934753810220622), (3.131694397603069, 3.133694397603069), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.86630560239693, 4.868305602396931), -1.819403948791938), ((4.7450775341532845, 4.747077534153285), (6.943565009095706, 6.945565009095707), -2.8755132837848363), ((5.250922465846714, 5.252922465846715), (1.0544349909042932, 1.056434990904293), 0.26607936980495694), ((6.8643056023969296, 6.86630560239693), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.131694397603069, 3.133694397603069), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420616.655888744] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.890000104904175])
[INFO] [1753420616.657394643] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.8900001 ]
[INFO] [1753420616.660770450] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420616.661601514] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420616.662327934] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420616.663049714] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420616.663832553] [solver_node]: 求解器返回结果: [((1.0829058950378454, 1.0849058950378452), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0659569434276557, 1.0679569434276555), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.913094104962154, 8.915094104962153), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.930043056572345, 8.932043056572343), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.941565009095706, 8.943565009095705), (3.2529224658467144, 3.254922465846714), 1.8368756965998534), ((1.0544349909042938, 1.0564349909042936), (4.7450775341532845, 4.747077534153285), -1.3047169569899397), ((8.932753810220623, 8.934753810220622), (3.131694397603069, 3.133694397603069), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.86630560239693, 4.868305602396931), -1.819403948791938), ((4.7450775341532845, 4.747077534153285), (6.943565009095706, 6.945565009095707), -2.8755132837848363), ((5.250922465846714, 5.252922465846715), (1.0544349909042932, 1.056434990904293), 0.26607936980495694), ((6.8643056023969296, 6.86630560239693), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.131694397603069, 3.133694397603069), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420616.755647366] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.890000104904175])
[INFO] [1753420616.757395767] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.8900001 ]
[INFO] [1753420616.760737589] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420616.761613070] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420616.762473062] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420616.763241020] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420616.764020274] [solver_node]: 求解器返回结果: [((1.0829058950378454, 1.0849058950378452), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0659569434276557, 1.0679569434276555), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.913094104962154, 8.915094104962153), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.930043056572345, 8.932043056572343), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.941565009095706, 8.943565009095705), (3.2529224658467144, 3.254922465846714), 1.8368756965998534), ((1.0544349909042938, 1.0564349909042936), (4.7450775341532845, 4.747077534153285), -1.3047169569899397), ((8.932753810220623, 8.934753810220622), (3.131694397603069, 3.133694397603069), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.86630560239693, 4.868305602396931), -1.819403948791938), ((4.7450775341532845, 4.747077534153285), (6.943565009095706, 6.945565009095707), -2.8755132837848363), ((5.250922465846714, 5.252922465846715), (1.0544349909042932, 1.056434990904293), 0.26607936980495694), ((6.8643056023969296, 6.86630560239693), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.131694397603069, 3.133694397603069), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420616.854791282] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.890000104904175])
[INFO] [1753420616.856263163] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.8900001 ]
[INFO] [1753420616.859669659] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420616.860498899] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420616.861262728] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420616.861990909] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420616.862823348] [solver_node]: 求解器返回结果: [((1.0829058950378454, 1.0849058950378452), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0659569434276557, 1.0679569434276555), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.913094104962154, 8.915094104962153), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.930043056572345, 8.932043056572343), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.941565009095706, 8.943565009095705), (3.2529224658467144, 3.254922465846714), 1.8368756965998534), ((1.0544349909042938, 1.0564349909042936), (4.7450775341532845, 4.747077534153285), -1.3047169569899397), ((8.932753810220623, 8.934753810220622), (3.131694397603069, 3.133694397603069), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.86630560239693, 4.868305602396931), -1.819403948791938), ((4.7450775341532845, 4.747077534153285), (6.943565009095706, 6.945565009095707), -2.8755132837848363), ((5.250922465846714, 5.252922465846715), (1.0544349909042932, 1.056434990904293), 0.26607936980495694), ((6.8643056023969296, 6.86630560239693), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.131694397603069, 3.133694397603069), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420616.955701967] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.890000104904175])
[INFO] [1753420616.959694016] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.8900001 ]
[INFO] [1753420616.963336679] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420616.964234784] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420616.965003318] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420616.965747339] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420616.966551169] [solver_node]: 求解器返回结果: [((1.0829058950378454, 1.0849058950378452), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0659569434276557, 1.0679569434276555), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.913094104962154, 8.915094104962153), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.930043056572345, 8.932043056572343), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.941565009095706, 8.943565009095705), (3.2529224658467144, 3.254922465846714), 1.8368756965998534), ((1.0544349909042938, 1.0564349909042936), (4.7450775341532845, 4.747077534153285), -1.3047169569899397), ((8.932753810220623, 8.934753810220622), (3.131694397603069, 3.133694397603069), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.86630560239693, 4.868305602396931), -1.819403948791938), ((4.7450775341532845, 4.747077534153285), (6.943565009095706, 6.945565009095707), -2.8755132837848363), ((5.250922465846714, 5.252922465846715), (1.0544349909042932, 1.056434990904293), 0.26607936980495694), ((6.8643056023969296, 6.86630560239693), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.131694397603069, 3.133694397603069), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420617.055476814] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.890000104904175])
[INFO] [1753420617.057236543] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.8900001 ]
[INFO] [1753420617.061015530] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420617.061922659] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420617.062726426] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420617.063463055] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420617.064277702] [solver_node]: 求解器返回结果: [((1.0829058950378454, 1.0849058950378452), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0659569434276557, 1.0679569434276555), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.913094104962154, 8.915094104962153), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.930043056572345, 8.932043056572343), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.941565009095706, 8.943565009095705), (3.2529224658467144, 3.254922465846714), 1.8368756965998534), ((1.0544349909042938, 1.0564349909042936), (4.7450775341532845, 4.747077534153285), -1.3047169569899397), ((8.932753810220623, 8.934753810220622), (3.131694397603069, 3.133694397603069), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.86630560239693, 4.868305602396931), -1.819403948791938), ((4.7450775341532845, 4.747077534153285), (6.943565009095706, 6.945565009095707), -2.8755132837848363), ((5.250922465846714, 5.252922465846715), (1.0544349909042932, 1.056434990904293), 0.26607936980495694), ((6.8643056023969296, 6.86630560239693), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.131694397603069, 3.133694397603069), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420617.158981077] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.890000104904175])
[INFO] [1753420617.160679109] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.8900001 ]
[INFO] [1753420617.164490865] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420617.165387562] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420617.166138911] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420617.166885844] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420617.167698283] [solver_node]: 求解器返回结果: [((1.0829058950378454, 1.0849058950378452), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0659569434276557, 1.0679569434276555), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.913094104962154, 8.915094104962153), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.930043056572345, 8.932043056572343), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.941565009095706, 8.943565009095705), (3.2529224658467144, 3.254922465846714), 1.8368756965998534), ((1.0544349909042938, 1.0564349909042936), (4.7450775341532845, 4.747077534153285), -1.3047169569899397), ((8.932753810220623, 8.934753810220622), (3.131694397603069, 3.133694397603069), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.86630560239693, 4.868305602396931), -1.819403948791938), ((4.7450775341532845, 4.747077534153285), (6.943565009095706, 6.945565009095707), -2.8755132837848363), ((5.250922465846714, 5.252922465846715), (1.0544349909042932, 1.056434990904293), 0.26607936980495694), ((6.8643056023969296, 6.86630560239693), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.131694397603069, 3.133694397603069), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420617.256543701] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.890000104904175])
[INFO] [1753420617.258189956] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.8900001 ]
[INFO] [1753420617.262178676] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420617.263203153] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420617.264038473] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420617.264921794] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420617.265846588] [solver_node]: 求解器返回结果: [((1.0829058950378454, 1.0849058950378452), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0659569434276557, 1.0679569434276555), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.913094104962154, 8.915094104962153), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.930043056572345, 8.932043056572343), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.941565009095706, 8.943565009095705), (3.2529224658467144, 3.254922465846714), 1.8368756965998534), ((1.0544349909042938, 1.0564349909042936), (4.7450775341532845, 4.747077534153285), -1.3047169569899397), ((8.932753810220623, 8.934753810220622), (3.131694397603069, 3.133694397603069), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.86630560239693, 4.868305602396931), -1.819403948791938), ((4.7450775341532845, 4.747077534153285), (6.943565009095706, 6.945565009095707), -2.8755132837848363), ((5.250922465846714, 5.252922465846715), (1.0544349909042932, 1.056434990904293), 0.26607936980495694), ((6.8643056023969296, 6.86630560239693), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.131694397603069, 3.133694397603069), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420617.356563899] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.890000104904175])
[INFO] [1753420617.358262507] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.8900001 ]
[INFO] [1753420617.362142424] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420617.363907818] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420617.364870725] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420617.365801631] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420617.366821884] [solver_node]: 求解器返回结果: [((1.0829058950378454, 1.0849058950378452), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0659569434276557, 1.0679569434276555), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.913094104962154, 8.915094104962153), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.930043056572345, 8.932043056572343), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.941565009095706, 8.943565009095705), (3.2529224658467144, 3.254922465846714), 1.8368756965998534), ((1.0544349909042938, 1.0564349909042936), (4.7450775341532845, 4.747077534153285), -1.3047169569899397), ((8.932753810220623, 8.934753810220622), (3.131694397603069, 3.133694397603069), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.86630560239693, 4.868305602396931), -1.819403948791938), ((4.7450775341532845, 4.747077534153285), (6.943565009095706, 6.945565009095707), -2.8755132837848363), ((5.250922465846714, 5.252922465846715), (1.0544349909042932, 1.056434990904293), 0.26607936980495694), ((6.8643056023969296, 6.86630560239693), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.131694397603069, 3.133694397603069), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420617.458452821] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.890000104904175])
[INFO] [1753420617.463581861] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.8900001 ]
[INFO] [1753420617.469017695] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420617.469899224] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420617.470587915] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420617.471317824] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420617.472120470] [solver_node]: 求解器返回结果: [((1.0829058950378454, 1.0849058950378452), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0659569434276557, 1.0679569434276555), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.913094104962154, 8.915094104962153), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.930043056572345, 8.932043056572343), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.941565009095706, 8.943565009095705), (3.2529224658467144, 3.254922465846714), 1.8368756965998534), ((1.0544349909042938, 1.0564349909042936), (4.7450775341532845, 4.747077534153285), -1.3047169569899397), ((8.932753810220623, 8.934753810220622), (3.131694397603069, 3.133694397603069), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.86630560239693, 4.868305602396931), -1.819403948791938), ((4.7450775341532845, 4.747077534153285), (6.943565009095706, 6.945565009095707), -2.8755132837848363), ((5.250922465846714, 5.252922465846715), (1.0544349909042932, 1.056434990904293), 0.26607936980495694), ((6.8643056023969296, 6.86630560239693), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.131694397603069, 3.133694397603069), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420617.554856756] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.890000104904175])
[INFO] [1753420617.556356286] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.8900001 ]
[INFO] [1753420617.559765695] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420617.560621175] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420617.561409741] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420617.562146306] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420617.562984537] [solver_node]: 求解器返回结果: [((1.0829058950378454, 1.0849058950378452), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0659569434276557, 1.0679569434276555), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.913094104962154, 8.915094104962153), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.930043056572345, 8.932043056572343), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.941565009095706, 8.943565009095705), (3.2529224658467144, 3.254922465846714), 1.8368756965998534), ((1.0544349909042938, 1.0564349909042936), (4.7450775341532845, 4.747077534153285), -1.3047169569899397), ((8.932753810220623, 8.934753810220622), (3.131694397603069, 3.133694397603069), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.86630560239693, 4.868305602396931), -1.819403948791938), ((4.7450775341532845, 4.747077534153285), (6.943565009095706, 6.945565009095707), -2.8755132837848363), ((5.250922465846714, 5.252922465846715), (1.0544349909042932, 1.056434990904293), 0.26607936980495694), ((6.8643056023969296, 6.86630560239693), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.131694397603069, 3.133694397603069), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420617.656390916] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7260000109672546, 4.627999782562256, 2.890000104904175])
[INFO] [1753420617.658042675] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72600001 4.62799978 2.8900001 ]
[INFO] [1753420617.663305383] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420617.664665262] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420617.666920525] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420617.667842823] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420617.668751873] [solver_node]: 求解器返回结果: [((1.0848857870241086, 1.0868857870241084), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0679005777184216, 1.0699005777184214), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.91111421297589, 8.91311421297589), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.928099422281578, 8.930099422281577), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.939808825342014, 8.941808825342013), (3.253778270360297, 3.2557782703602967), 1.8374607475067153), ((1.056191174657986, 1.0581911746579857), (4.744221729639702, 4.746221729639703), -1.3041319060830778), ((8.93091493096908, 8.932914930969078), (3.131482204325936, 3.1334822043259356), 1.321809585528511), ((1.0650850690309208, 1.0670850690309206), (4.866517795674064, 4.868517795674065), -1.819783068061282), ((4.744221729639702, 4.746221729639703), (6.941808825342014, 6.943808825342015), -2.8749282328779744), ((5.251778270360297, 5.253778270360297), (1.056191174657985, 1.0581911746579848), 0.2666644207118189), ((6.864517795674064, 6.866517795674064), (6.932914930969079, 6.93491493096908), 2.8926059123234076), ((3.131482204325936, 3.1334822043259356), (1.0650850690309208, 1.0670850690309206), -0.24898674126638554)]
[INFO] [1753420617.755438734] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7260000109672546, 4.627999782562256, 2.890000104904175])
[INFO] [1753420617.756956985] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72600001 4.62799978 2.8900001 ]
[INFO] [1753420617.760688514] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420617.761843619] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420617.762659482] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420617.763445936] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420617.764250183] [solver_node]: 求解器返回结果: [((1.0848857870241086, 1.0868857870241084), (4.889416369438327, 4.8914163694383275), -1.428752426637165), ((1.0679005777184216, 1.0699005777184214), (4.860573195179392, 4.862573195179393), -1.8088382131177108), ((8.91111421297589, 8.91311421297589), (3.108583630561673, 3.1105836305616728), 1.712840226952628), ((8.928099422281578, 8.930099422281577), (3.1374268048206084, 3.139426804820608), 1.3327544404720821), ((8.939808825342014, 8.941808825342013), (3.253778270360297, 3.2557782703602967), 1.8374607475067153), ((1.056191174657986, 1.0581911746579857), (4.744221729639702, 4.746221729639703), -1.3041319060830778), ((8.93091493096908, 8.932914930969078), (3.131482204325936, 3.1334822043259356), 1.321809585528511), ((1.0650850690309208, 1.0670850690309206), (4.866517795674064, 4.868517795674065), -1.819783068061282), ((4.744221729639702, 4.746221729639703), (6.941808825342014, 6.943808825342015), -2.8749282328779744), ((5.251778270360297, 5.253778270360297), (1.056191174657985, 1.0581911746579848), 0.2666644207118189), ((6.864517795674064, 6.866517795674064), (6.932914930969079, 6.93491493096908), 2.8926059123234076), ((3.131482204325936, 3.1334822043259356), (1.0650850690309208, 1.0670850690309206), -0.24898674126638554)]
[INFO] [1753420617.856349997] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7260000109672546, 4.627999782562256, 2.9100000858306885])
[INFO] [1753420617.858653998] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72600001 4.62799978 2.91000009]
[INFO] [1753420617.862514811] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420617.863426612] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420617.864346222] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420617.865097603] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420617.865867449] [solver_node]: 求解器返回结果: [((1.0827729002799493, 1.084772900279949), (4.878303027728661, 4.880303027728662), -1.4163129320044803), ((8.91322709972005, 8.915227099720049), (3.119696972271339, 3.1216969722713386), 1.7252797215853122), ((8.939338629086633, 8.941338629086632), (3.2514581995064717, 3.2534581995064715), 1.8358720982701), ((1.0566613709133672, 1.058661370913367), (4.746541800493528, 4.748541800493529), -1.305720555319693), ((4.746541800493528, 4.748541800493529), (6.941338629086633, 6.943338629086633), -2.87651688211459), ((5.249458199506471, 5.251458199506471), (1.056661370913367, 1.0586613709133668), 0.26507577147520345), ((6.845134525783533, 6.847134525783534), (6.932914930969079, 6.93491493096908), 2.8926059123234076), ((3.1508654742164666, 3.1528654742164663), (1.0650850690309208, 1.0670850690309206), -0.24898674126638554)]
[INFO] [1753420617.956800542] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7260000109672546, 4.627999782562256, 2.9100000858306885])
[INFO] [1753420617.959456777] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72600001 4.62799978 2.91000009]
[INFO] [1753420617.963251892] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420617.971298967] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420617.973586872] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420617.976000476] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420617.976970295] [solver_node]: 求解器返回结果: [((1.0827729002799493, 1.084772900279949), (4.878303027728661, 4.880303027728662), -1.4163129320044803), ((8.91322709972005, 8.915227099720049), (3.119696972271339, 3.1216969722713386), 1.7252797215853122), ((8.939338629086633, 8.941338629086632), (3.2514581995064717, 3.2534581995064715), 1.8358720982701), ((1.0566613709133672, 1.058661370913367), (4.746541800493528, 4.748541800493529), -1.305720555319693), ((4.746541800493528, 4.748541800493529), (6.941338629086633, 6.943338629086633), -2.87651688211459), ((5.249458199506471, 5.251458199506471), (1.056661370913367, 1.0586613709133668), 0.26507577147520345), ((6.845134525783533, 6.847134525783534), (6.932914930969079, 6.93491493096908), 2.8926059123234076), ((3.1508654742164666, 3.1528654742164663), (1.0650850690309208, 1.0670850690309206), -0.24898674126638554)]
[INFO] [1753420618.054768810] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7260000109672546, 4.627999782562256, 2.9100000858306885])
[INFO] [1753420618.056253364] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72600001 4.62799978 2.91000009]
[INFO] [1753420618.061508936] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420618.062456771] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420618.063301691] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420618.064018511] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420618.064789701] [solver_node]: 求解器返回结果: [((1.0827729002799493, 1.084772900279949), (4.878303027728661, 4.880303027728662), -1.4163129320044803), ((8.91322709972005, 8.915227099720049), (3.119696972271339, 3.1216969722713386), 1.7252797215853122), ((8.939338629086633, 8.941338629086632), (3.2514581995064717, 3.2534581995064715), 1.8358720982701), ((1.0566613709133672, 1.058661370913367), (4.746541800493528, 4.748541800493529), -1.305720555319693), ((4.746541800493528, 4.748541800493529), (6.941338629086633, 6.943338629086633), -2.87651688211459), ((5.249458199506471, 5.251458199506471), (1.056661370913367, 1.0586613709133668), 0.26507577147520345), ((6.845134525783533, 6.847134525783534), (6.932914930969079, 6.93491493096908), 2.8926059123234076), ((3.1508654742164666, 3.1528654742164663), (1.0650850690309208, 1.0670850690309206), -0.24898674126638554)]
[INFO] [1753420618.156527969] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.9100000858306885])
[INFO] [1753420618.158128398] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.91000009]
[INFO] [1753420618.161586032] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420618.162417255] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420618.163217182] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420618.163938034] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420618.164695336] [solver_node]: 求解器返回结果: [((1.0807966833923075, 1.0827966833923073), (4.878303027728661, 4.880303027728662), -1.4163129320044803), ((8.915203316607693, 8.917203316607692), (3.119696972271339, 3.1216969722713386), 1.7252797215853122), ((8.941097555574787, 8.943097555574786), (3.2506113901141185, 3.2526113901141183), 1.8352901998200193), ((1.0549024444252124, 1.0569024444252122), (4.74738860988588, 4.749388609885881), -1.3063024537697738), ((4.74738860988588, 4.749388609885881), (6.943097555574787, 6.945097555574788), -2.8770987805646704), ((5.248611390114118, 5.250611390114119), (1.0549024444252124, 1.0569024444252122), 0.2644938730251228), ((6.844920465488076, 6.846920465488076), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.1510795345119242, 3.153079534511924), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420618.256292480] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.9100000858306885])
[INFO] [1753420618.258797447] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.91000009]
[INFO] [1753420618.262292425] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420618.264123549] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420618.264888243] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420618.265618151] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420618.266383997] [solver_node]: 求解器返回结果: [((1.0807966833923075, 1.0827966833923073), (4.878303027728661, 4.880303027728662), -1.4163129320044803), ((8.915203316607693, 8.917203316607692), (3.119696972271339, 3.1216969722713386), 1.7252797215853122), ((8.941097555574787, 8.943097555574786), (3.2506113901141185, 3.2526113901141183), 1.8352901998200193), ((1.0549024444252124, 1.0569024444252122), (4.74738860988588, 4.749388609885881), -1.3063024537697738), ((4.74738860988588, 4.749388609885881), (6.943097555574787, 6.945097555574788), -2.8770987805646704), ((5.248611390114118, 5.250611390114119), (1.0549024444252124, 1.0569024444252122), 0.2644938730251228), ((6.844920465488076, 6.846920465488076), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.1510795345119242, 3.153079534511924), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420618.355194919] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.9079999923706055])
[INFO] [1753420618.356714449] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.90799999]
[INFO] [1753420618.360155187] [solver_node]: [PoseSolver] 第0个组合有10个有效解
[INFO] [1753420618.360980234] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420618.361734015] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420618.362466516] [solver_node]: [PoseSolver] 找到10个完美相容解 (相容数=N)
[INFO] [1753420618.363305739] [solver_node]: 求解器返回结果: [((1.081008819369277, 1.0830088193692768), (4.879415196362543, 4.881415196362544), -1.417520739225214), ((8.914991180630723, 8.916991180630722), (3.1185848036374577, 3.1205848036374575), 1.7240719143645795), ((8.94114393932474, 8.943143939324738), (3.250840763079655, 3.252840763079655), 1.8354479262183219), ((1.0548560606752613, 1.056856060675261), (4.747159236920345, 4.749159236920345), -1.3061447273714712), ((8.932753810220623, 8.934753810220622), (3.149140928385415, 3.1511409283854146), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.8488590716145845, 4.850859071614585), -1.819403948791938), ((4.747159236920345, 4.749159236920345), (6.943143939324739, 6.94514393932474), -2.876941054166368), ((5.248840763079654, 5.250840763079655), (1.0548560606752613, 1.056856060675261), 0.26465159942342525), ((6.846859071614584, 6.8488590716145845), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.149140928385415, 3.1511409283854146), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420618.454871459] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.9079999923706055])
[INFO] [1753420618.456655605] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.90799999]
[INFO] [1753420618.460463681] [solver_node]: [PoseSolver] 第0个组合有10个有效解
[INFO] [1753420618.462155249] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420618.464491122] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420618.465629811] [solver_node]: [PoseSolver] 找到10个完美相容解 (相容数=N)
[INFO] [1753420618.466559213] [solver_node]: 求解器返回结果: [((1.081008819369277, 1.0830088193692768), (4.879415196362543, 4.881415196362544), -1.417520739225214), ((8.914991180630723, 8.916991180630722), (3.1185848036374577, 3.1205848036374575), 1.7240719143645795), ((8.94114393932474, 8.943143939324738), (3.250840763079655, 3.252840763079655), 1.8354479262183219), ((1.0548560606752613, 1.056856060675261), (4.747159236920345, 4.749159236920345), -1.3061447273714712), ((8.932753810220623, 8.934753810220622), (3.149140928385415, 3.1511409283854146), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.8488590716145845, 4.850859071614585), -1.819403948791938), ((4.747159236920345, 4.749159236920345), (6.943143939324739, 6.94514393932474), -2.876941054166368), ((5.248840763079654, 5.250840763079655), (1.0548560606752613, 1.056856060675261), 0.26465159942342525), ((6.846859071614584, 6.8488590716145845), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.149140928385415, 3.1511409283854146), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420618.556369459] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.9079999923706055])
[INFO] [1753420618.558147973] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.90799999]
[INFO] [1753420618.563661697] [solver_node]: [PoseSolver] 第0个组合有10个有效解
[INFO] [1753420618.564520281] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420618.565243405] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420618.567226021] [solver_node]: [PoseSolver] 找到10个完美相容解 (相容数=N)
[INFO] [1753420618.568127039] [solver_node]: 求解器返回结果: [((1.081008819369277, 1.0830088193692768), (4.879415196362543, 4.881415196362544), -1.417520739225214), ((8.914991180630723, 8.916991180630722), (3.1185848036374577, 3.1205848036374575), 1.7240719143645795), ((8.94114393932474, 8.943143939324738), (3.250840763079655, 3.252840763079655), 1.8354479262183219), ((1.0548560606752613, 1.056856060675261), (4.747159236920345, 4.749159236920345), -1.3061447273714712), ((8.932753810220623, 8.934753810220622), (3.149140928385415, 3.1511409283854146), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.8488590716145845, 4.850859071614585), -1.819403948791938), ((4.747159236920345, 4.749159236920345), (6.943143939324739, 6.94514393932474), -2.876941054166368), ((5.248840763079654, 5.250840763079655), (1.0548560606752613, 1.056856060675261), 0.26465159942342525), ((6.846859071614584, 6.8488590716145845), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.149140928385415, 3.1511409283854146), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420618.657261969] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.9079999923706055])
[INFO] [1753420618.659567699] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.90799999]
[INFO] [1753420618.665577244] [solver_node]: [PoseSolver] 第0个组合有10个有效解
[INFO] [1753420618.667497266] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420618.669940215] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420618.671510339] [solver_node]: [PoseSolver] 找到10个完美相容解 (相容数=N)
[INFO] [1753420618.672546017] [solver_node]: 求解器返回结果: [((1.081008819369277, 1.0830088193692768), (4.879415196362543, 4.881415196362544), -1.417520739225214), ((8.914991180630723, 8.916991180630722), (3.1185848036374577, 3.1205848036374575), 1.7240719143645795), ((8.94114393932474, 8.943143939324738), (3.250840763079655, 3.252840763079655), 1.8354479262183219), ((1.0548560606752613, 1.056856060675261), (4.747159236920345, 4.749159236920345), -1.3061447273714712), ((8.932753810220623, 8.934753810220622), (3.149140928385415, 3.1511409283854146), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.8488590716145845, 4.850859071614585), -1.819403948791938), ((4.747159236920345, 4.749159236920345), (6.943143939324739, 6.94514393932474), -2.876941054166368), ((5.248840763079654, 5.250840763079655), (1.0548560606752613, 1.056856060675261), 0.26465159942342525), ((6.846859071614584, 6.8488590716145845), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.149140928385415, 3.1511409283854146), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420618.758259123] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.9079999923706055])
[INFO] [1753420618.761633426] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.90799999]
[INFO] [1753420618.773479553] [solver_node]: [PoseSolver] 第0个组合有10个有效解
[INFO] [1753420618.775614333] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420618.778026977] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420618.780952755] [solver_node]: [PoseSolver] 找到10个完美相容解 (相容数=N)
[INFO] [1753420618.783829605] [solver_node]: 求解器返回结果: [((1.081008819369277, 1.0830088193692768), (4.879415196362543, 4.881415196362544), -1.417520739225214), ((8.914991180630723, 8.916991180630722), (3.1185848036374577, 3.1205848036374575), 1.7240719143645795), ((8.94114393932474, 8.943143939324738), (3.250840763079655, 3.252840763079655), 1.8354479262183219), ((1.0548560606752613, 1.056856060675261), (4.747159236920345, 4.749159236920345), -1.3061447273714712), ((8.932753810220623, 8.934753810220622), (3.149140928385415, 3.1511409283854146), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.8488590716145845, 4.850859071614585), -1.819403948791938), ((4.747159236920345, 4.749159236920345), (6.943143939324739, 6.94514393932474), -2.876941054166368), ((5.248840763079654, 5.250840763079655), (1.0548560606752613, 1.056856060675261), 0.26465159942342525), ((6.846859071614584, 6.8488590716145845), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.149140928385415, 3.1511409283854146), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420618.860806273] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.9059998989105225])
[INFO] [1753420618.863497868] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.9059999 ]
[INFO] [1753420618.868024972] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420618.872118720] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420618.872879445] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420618.873592969] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420618.874392128] [solver_node]: 求解器返回结果: [((1.0812207059607701, 1.08322070596077), (4.880527224278511, 4.882527224278512), -1.418736199038504), ((1.0634392834702422, 1.065439283470242), (4.850383247431587, 4.852383247431588), -1.8186663739831843), ((8.91477929403923, 8.916779294039229), (3.1174727757214886, 3.1194727757214884), 1.7228564545512892), ((8.932560716529757, 8.934560716529756), (3.1476167525684127, 3.1496167525684124), 1.3229262796066088), ((8.94119040343964, 8.943190403439639), (3.251070521667151, 3.253070521667151), 1.8356058364180872), ((1.054809596560361, 1.0568095965603608), (4.746929478332849, 4.748929478332849), -1.305986817171706), ((8.932753810220623, 8.934753810220622), (3.147202322258905, 3.1492023222589047), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.850797677741094, 4.852797677741095), -1.819403948791938), ((4.746929478332848, 4.748929478332848), (6.943190403439638, 6.945190403439638), -2.8767831439666023), ((5.249070521667151, 5.251070521667152), (1.0548095965603612, 1.056809596560361), 0.2648095096231908), ((6.848797677741094, 6.850797677741094), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.147202322258905, 3.1492023222589047), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420618.956275238] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.9059998989105225])
[INFO] [1753420618.957815762] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.9059999 ]
[INFO] [1753420618.962107595] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420618.963368718] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420618.964551888] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420618.965637230] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420618.966700876] [solver_node]: 求解器返回结果: [((1.0812207059607701, 1.08322070596077), (4.880527224278511, 4.882527224278512), -1.418736199038504), ((1.0634392834702422, 1.065439283470242), (4.850383247431587, 4.852383247431588), -1.8186663739831843), ((8.91477929403923, 8.916779294039229), (3.1174727757214886, 3.1194727757214884), 1.7228564545512892), ((8.932560716529757, 8.934560716529756), (3.1476167525684127, 3.1496167525684124), 1.3229262796066088), ((8.94119040343964, 8.943190403439639), (3.251070521667151, 3.253070521667151), 1.8356058364180872), ((1.054809596560361, 1.0568095965603608), (4.746929478332849, 4.748929478332849), -1.305986817171706), ((8.932753810220623, 8.934753810220622), (3.147202322258905, 3.1492023222589047), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.850797677741094, 4.852797677741095), -1.819403948791938), ((4.746929478332848, 4.748929478332848), (6.943190403439638, 6.945190403439638), -2.8767831439666023), ((5.249070521667151, 5.251070521667152), (1.0548095965603612, 1.056809596560361), 0.2648095096231908), ((6.848797677741094, 6.850797677741094), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.147202322258905, 3.1492023222589047), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420619.059989973] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.9059998989105225])
[INFO] [1753420619.061949036] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.9059999 ]
[INFO] [1753420619.065762712] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420619.067300675] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420619.068170844] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420619.068934385] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420619.069793450] [solver_node]: 求解器返回结果: [((1.0812207059607701, 1.08322070596077), (4.880527224278511, 4.882527224278512), -1.418736199038504), ((1.0634392834702422, 1.065439283470242), (4.850383247431587, 4.852383247431588), -1.8186663739831843), ((8.91477929403923, 8.916779294039229), (3.1174727757214886, 3.1194727757214884), 1.7228564545512892), ((8.932560716529757, 8.934560716529756), (3.1476167525684127, 3.1496167525684124), 1.3229262796066088), ((8.94119040343964, 8.943190403439639), (3.251070521667151, 3.253070521667151), 1.8356058364180872), ((1.054809596560361, 1.0568095965603608), (4.746929478332849, 4.748929478332849), -1.305986817171706), ((8.932753810220623, 8.934753810220622), (3.147202322258905, 3.1492023222589047), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.850797677741094, 4.852797677741095), -1.819403948791938), ((4.746929478332848, 4.748929478332848), (6.943190403439638, 6.945190403439638), -2.8767831439666023), ((5.249070521667151, 5.251070521667152), (1.0548095965603612, 1.056809596560361), 0.2648095096231908), ((6.848797677741094, 6.850797677741094), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.147202322258905, 3.1492023222589047), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420619.158307564] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.9059998989105225])
[INFO] [1753420619.161044569] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.9059999 ]
[INFO] [1753420619.165158317] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420619.173722463] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420619.178768141] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420619.180747365] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420619.182492214] [solver_node]: 求解器返回结果: [((1.0812207059607701, 1.08322070596077), (4.880527224278511, 4.882527224278512), -1.418736199038504), ((1.0634392834702422, 1.065439283470242), (4.850383247431587, 4.852383247431588), -1.8186663739831843), ((8.91477929403923, 8.916779294039229), (3.1174727757214886, 3.1194727757214884), 1.7228564545512892), ((8.932560716529757, 8.934560716529756), (3.1476167525684127, 3.1496167525684124), 1.3229262796066088), ((8.94119040343964, 8.943190403439639), (3.251070521667151, 3.253070521667151), 1.8356058364180872), ((1.054809596560361, 1.0568095965603608), (4.746929478332849, 4.748929478332849), -1.305986817171706), ((8.932753810220623, 8.934753810220622), (3.147202322258905, 3.1492023222589047), 1.322188704797855), ((1.063246189779377, 1.0652461897793768), (4.850797677741094, 4.852797677741095), -1.819403948791938), ((4.746929478332848, 4.748929478332848), (6.943190403439638, 6.945190403439638), -2.8767831439666023), ((5.249070521667151, 5.251070521667152), (1.0548095965603612, 1.056809596560361), 0.2648095096231908), ((6.848797677741094, 6.850797677741094), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.147202322258905, 3.1492023222589047), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420619.259187083] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7250000238418579, 4.627999782562256, 2.9059998989105225])
[INFO] [1753420619.260914299] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72500002 4.62799978 2.9059999 ]
[INFO] [1753420619.266487641] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420619.267850751] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420619.268759481] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420619.269632658] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420619.271932850] [solver_node]: 求解器返回结果: [((1.082209213826292, 1.0842092138262918), (4.880527224278511, 4.882527224278512), -1.418736199038504), ((1.0644087650530902, 1.06640876505309), (4.850383247431587, 4.852383247431588), -1.8186663739831843), ((8.913790786173708, 8.915790786173707), (3.1174727757214886, 3.1194727757214884), 1.7228564545512892), ((8.931591234946909, 8.933591234946908), (3.1476167525684127, 3.1496167525684124), 1.3229262796066088), ((8.940311072130685, 8.942311072130684), (3.2514946650801524, 3.253494665080152), 1.8358971313805938), ((1.055688927869315, 1.0576889278693147), (4.746505334919847, 4.748505334919848), -1.3056955222091993), ((8.931834279776014, 8.933834279776013), (3.1470955270521825, 3.1490955270521823), 1.3219991303846808), ((1.0641657202239845, 1.0661657202239843), (4.850904472947817, 4.8529044729478175), -1.8195935232051124), ((4.746505334919847, 4.748505334919848), (6.942311072130684, 6.944311072130684), -2.8764918490040956), ((5.249494665080151, 5.251494665080152), (1.0556889278693153, 1.0576889278693151), 0.26510080458569746), ((6.848904472947816, 6.850904472947817), (6.933834279776015, 6.9358342797760155), 2.8927954571795773), ((3.1470955270521825, 3.1490955270521823), (1.064165720223984, 1.0661657202239838), -0.24879719641021564)]
[INFO] [1753420619.356148187] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7250000238418579, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420619.357717543] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72500002 4.62799978 2.91199994]
[INFO] [1753420619.361531763] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420619.363352454] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420619.364224319] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420619.367680481] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420619.368641180] [solver_node]: 求解器返回结果: [((1.0815722821853797, 1.0835722821853795), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.91442771781462, 8.916427717814619), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.940171518182927, 8.942171518182926), (3.250805233215402, 3.2528052332154016), 1.8354234997204522), ((1.0558284818170716, 1.0578284818170713), (4.747194766784598, 4.749194766784599), -1.306169153869341), ((4.747194766784598, 4.749194766784599), (6.942171518182928, 6.944171518182928), -2.8769654806642375), ((5.248805233215401, 5.250805233215401), (1.0558284818170725, 1.0578284818170722), 0.26462717292555576), ((6.843089165629675, 6.845089165629676), (6.933834279776015, 6.9358342797760155), 2.8927954571795773), ((3.152910834370324, 3.1549108343703236), (1.064165720223984, 1.0661657202239838), -0.24879719641021564)]
[INFO] [1753420619.455924635] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7250000238418579, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420619.457474599] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72500002 4.62799978 2.91199994]
[INFO] [1753420619.461987558] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420619.462889472] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420619.463617460] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420619.464654961] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420619.466224830] [solver_node]: 求解器返回结果: [((1.0815722821853797, 1.0835722821853795), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.91442771781462, 8.916427717814619), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.940171518182927, 8.942171518182926), (3.250805233215402, 3.2528052332154016), 1.8354234997204522), ((1.0558284818170716, 1.0578284818170713), (4.747194766784598, 4.749194766784599), -1.306169153869341), ((4.747194766784598, 4.749194766784599), (6.942171518182928, 6.944171518182928), -2.8769654806642375), ((5.248805233215401, 5.250805233215401), (1.0558284818170725, 1.0578284818170722), 0.26462717292555576), ((6.843089165629675, 6.845089165629676), (6.933834279776015, 6.9358342797760155), 2.8927954571795773), ((3.152910834370324, 3.1549108343703236), (1.064165720223984, 1.0661657202239838), -0.24879719641021564)]
[INFO] [1753420619.556159368] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7250000238418579, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420619.557767797] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72500002 4.62799978 2.91199994]
[INFO] [1753420619.562554172] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420619.564829245] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420619.566462859] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420619.567902611] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420619.569322683] [solver_node]: 求解器返回结果: [((1.0815722821853797, 1.0835722821853795), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.91442771781462, 8.916427717814619), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.940171518182927, 8.942171518182926), (3.250805233215402, 3.2528052332154016), 1.8354234997204522), ((1.0558284818170716, 1.0578284818170713), (4.747194766784598, 4.749194766784599), -1.306169153869341), ((4.747194766784598, 4.749194766784599), (6.942171518182928, 6.944171518182928), -2.8769654806642375), ((5.248805233215401, 5.250805233215401), (1.0558284818170725, 1.0578284818170722), 0.26462717292555576), ((6.843089165629675, 6.845089165629676), (6.933834279776015, 6.9358342797760155), 2.8927954571795773), ((3.152910834370324, 3.1549108343703236), (1.064165720223984, 1.0661657202239838), -0.24879719641021564)]
[INFO] [1753420619.660352133] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7250000238418579, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420619.661909808] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72500002 4.62799978 2.91199994]
[INFO] [1753420619.667328521] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420619.669024857] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420619.669799279] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420619.670544548] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420619.671429053] [solver_node]: 求解器返回结果: [((1.0815722821853797, 1.0835722821853795), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.91442771781462, 8.916427717814619), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.940171518182927, 8.942171518182926), (3.250805233215402, 3.2528052332154016), 1.8354234997204522), ((1.0558284818170716, 1.0578284818170713), (4.747194766784598, 4.749194766784599), -1.306169153869341), ((4.747194766784598, 4.749194766784599), (6.942171518182928, 6.944171518182928), -2.8769654806642375), ((5.248805233215401, 5.250805233215401), (1.0558284818170725, 1.0578284818170722), 0.26462717292555576), ((6.843089165629675, 6.845089165629676), (6.933834279776015, 6.9358342797760155), 2.8927954571795773), ((3.152910834370324, 3.1549108343703236), (1.064165720223984, 1.0661657202239838), -0.24879719641021564)]
[INFO] [1753420619.758465557] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7250000238418579, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420619.760114244] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72500002 4.62799978 2.91199994]
[INFO] [1753420619.764637444] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420619.765517949] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420619.766378933] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420619.767230861] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420619.768148807] [solver_node]: 求解器返回结果: [((1.0815722821853797, 1.0835722821853795), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.91442771781462, 8.916427717814619), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.940171518182927, 8.942171518182926), (3.250805233215402, 3.2528052332154016), 1.8354234997204522), ((1.0558284818170716, 1.0578284818170713), (4.747194766784598, 4.749194766784599), -1.306169153869341), ((4.747194766784598, 4.749194766784599), (6.942171518182928, 6.944171518182928), -2.8769654806642375), ((5.248805233215401, 5.250805233215401), (1.0558284818170725, 1.0578284818170722), 0.26462717292555576), ((6.843089165629675, 6.845089165629676), (6.933834279776015, 6.9358342797760155), 2.8927954571795773), ((3.152910834370324, 3.1549108343703236), (1.064165720223984, 1.0661657202239838), -0.24879719641021564)]
[INFO] [1753420619.856308255] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7250000238418579, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420619.858446619] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72500002 4.62799978 2.91199994]
[INFO] [1753420619.863877780] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420619.864846640] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420619.865991472] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420619.867060782] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420619.868008841] [solver_node]: 求解器返回结果: [((1.0815722821853797, 1.0835722821853795), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.91442771781462, 8.916427717814619), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.940171518182927, 8.942171518182926), (3.250805233215402, 3.2528052332154016), 1.8354234997204522), ((1.0558284818170716, 1.0578284818170713), (4.747194766784598, 4.749194766784599), -1.306169153869341), ((4.747194766784598, 4.749194766784599), (6.942171518182928, 6.944171518182928), -2.8769654806642375), ((5.248805233215401, 5.250805233215401), (1.0558284818170725, 1.0578284818170722), 0.26462717292555576), ((6.843089165629675, 6.845089165629676), (6.933834279776015, 6.9358342797760155), 2.8927954571795773), ((3.152910834370324, 3.1549108343703236), (1.064165720223984, 1.0661657202239838), -0.24879719641021564)]
[INFO] [1753420619.956482378] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7250000238418579, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420619.962524692] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72500002 4.62799978 2.91199994]
[INFO] [1753420619.966459908] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420619.967606788] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420619.969618013] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420619.970896097] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420619.971855868] [solver_node]: 求解器返回结果: [((1.0815722821853797, 1.0835722821853795), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.91442771781462, 8.916427717814619), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.940171518182927, 8.942171518182926), (3.250805233215402, 3.2528052332154016), 1.8354234997204522), ((1.0558284818170716, 1.0578284818170713), (4.747194766784598, 4.749194766784599), -1.306169153869341), ((4.747194766784598, 4.749194766784599), (6.942171518182928, 6.944171518182928), -2.8769654806642375), ((5.248805233215401, 5.250805233215401), (1.0558284818170725, 1.0578284818170722), 0.26462717292555576), ((6.843089165629675, 6.845089165629676), (6.933834279776015, 6.9358342797760155), 2.8927954571795773), ((3.152910834370324, 3.1549108343703236), (1.064165720223984, 1.0661657202239838), -0.24879719641021564)]
[INFO] [1753420620.060842540] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7250000238418579, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420620.066557933] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72500002 4.62799978 2.91199994]
[INFO] [1753420620.073518641] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420620.075128767] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420620.077007028] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420620.078433116] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420620.080460373] [solver_node]: 求解器返回结果: [((1.0815722821853797, 1.0835722821853795), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.91442771781462, 8.916427717814619), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.940171518182927, 8.942171518182926), (3.250805233215402, 3.2528052332154016), 1.8354234997204522), ((1.0558284818170716, 1.0578284818170713), (4.747194766784598, 4.749194766784599), -1.306169153869341), ((4.747194766784598, 4.749194766784599), (6.942171518182928, 6.944171518182928), -2.8769654806642375), ((5.248805233215401, 5.250805233215401), (1.0558284818170725, 1.0578284818170722), 0.26462717292555576), ((6.843089165629675, 6.845089165629676), (6.933834279776015, 6.9358342797760155), 2.8927954571795773), ((3.152910834370324, 3.1549108343703236), (1.064165720223984, 1.0661657202239838), -0.24879719641021564)]
[INFO] [1753420620.155759587] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7250000238418579, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420620.158103557] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72500002 4.62799978 2.91199994]
[INFO] [1753420620.164830371] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420620.166039813] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420620.167065538] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420620.168022077] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420620.169729805] [solver_node]: 求解器返回结果: [((1.0815722821853797, 1.0835722821853795), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.91442771781462, 8.916427717814619), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.940171518182927, 8.942171518182926), (3.250805233215402, 3.2528052332154016), 1.8354234997204522), ((1.0558284818170716, 1.0578284818170713), (4.747194766784598, 4.749194766784599), -1.306169153869341), ((4.747194766784598, 4.749194766784599), (6.942171518182928, 6.944171518182928), -2.8769654806642375), ((5.248805233215401, 5.250805233215401), (1.0558284818170725, 1.0578284818170722), 0.26462717292555576), ((6.843089165629675, 6.845089165629676), (6.933834279776015, 6.9358342797760155), 2.8927954571795773), ((3.152910834370324, 3.1549108343703236), (1.064165720223984, 1.0661657202239838), -0.24879719641021564)]
[INFO] [1753420620.257782083] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7250000238418579, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420620.262089565] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72500002 4.62799978 2.91199994]
[INFO] [1753420620.265682146] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420620.266533242] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420620.267429619] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420620.268169800] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420620.270463497] [solver_node]: 求解器返回结果: [((1.0815722821853797, 1.0835722821853795), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.91442771781462, 8.916427717814619), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.940171518182927, 8.942171518182926), (3.250805233215402, 3.2528052332154016), 1.8354234997204522), ((1.0558284818170716, 1.0578284818170713), (4.747194766784598, 4.749194766784599), -1.306169153869341), ((4.747194766784598, 4.749194766784599), (6.942171518182928, 6.944171518182928), -2.8769654806642375), ((5.248805233215401, 5.250805233215401), (1.0558284818170725, 1.0578284818170722), 0.26462717292555576), ((6.843089165629675, 6.845089165629676), (6.933834279776015, 6.9358342797760155), 2.8927954571795773), ((3.152910834370324, 3.1549108343703236), (1.064165720223984, 1.0661657202239838), -0.24879719641021564)]
[INFO] [1753420620.354810966] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7250000238418579, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420620.356342849] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72500002 4.62799978 2.91199994]
[INFO] [1753420620.359816996] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420620.361013989] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420620.361916511] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420620.364046299] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420620.364854802] [solver_node]: 求解器返回结果: [((1.0815722821853797, 1.0835722821853795), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.91442771781462, 8.916427717814619), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.940171518182927, 8.942171518182926), (3.250805233215402, 3.2528052332154016), 1.8354234997204522), ((1.0558284818170716, 1.0578284818170713), (4.747194766784598, 4.749194766784599), -1.306169153869341), ((4.747194766784598, 4.749194766784599), (6.942171518182928, 6.944171518182928), -2.8769654806642375), ((5.248805233215401, 5.250805233215401), (1.0558284818170725, 1.0578284818170722), 0.26462717292555576), ((6.843089165629675, 6.845089165629676), (6.933834279776015, 6.9358342797760155), 2.8927954571795773), ((3.152910834370324, 3.1549108343703236), (1.064165720223984, 1.0661657202239838), -0.24879719641021564)]
[INFO] [1753420620.457340325] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7250000238418579, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420620.461857636] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72500002 4.62799978 2.91199994]
[INFO] [1753420620.466258528] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420620.468175606] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420620.469796580] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420620.470602971] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420620.471483604] [solver_node]: 求解器返回结果: [((1.0815722821853797, 1.0835722821853795), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.91442771781462, 8.916427717814619), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.940171518182927, 8.942171518182926), (3.250805233215402, 3.2528052332154016), 1.8354234997204522), ((1.0558284818170716, 1.0578284818170713), (4.747194766784598, 4.749194766784599), -1.306169153869341), ((4.747194766784598, 4.749194766784599), (6.942171518182928, 6.944171518182928), -2.8769654806642375), ((5.248805233215401, 5.250805233215401), (1.0558284818170725, 1.0578284818170722), 0.26462717292555576), ((6.843089165629675, 6.845089165629676), (6.933834279776015, 6.9358342797760155), 2.8927954571795773), ((3.152910834370324, 3.1549108343703236), (1.064165720223984, 1.0661657202239838), -0.24879719641021564)]
[INFO] [1753420620.556939584] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7250000238418579, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420620.560858351] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72500002 4.62799978 2.91199994]
[INFO] [1753420620.564394163] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420620.565225034] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420620.565940318] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420620.566641106] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420620.567478378] [solver_node]: 求解器返回结果: [((1.0815722821853797, 1.0835722821853795), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.91442771781462, 8.916427717814619), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.940171518182927, 8.942171518182926), (3.250805233215402, 3.2528052332154016), 1.8354234997204522), ((1.0558284818170716, 1.0578284818170713), (4.747194766784598, 4.749194766784599), -1.306169153869341), ((4.747194766784598, 4.749194766784599), (6.942171518182928, 6.944171518182928), -2.8769654806642375), ((5.248805233215401, 5.250805233215401), (1.0558284818170725, 1.0578284818170722), 0.26462717292555576), ((6.843089165629675, 6.845089165629676), (6.933834279776015, 6.9358342797760155), 2.8927954571795773), ((3.152910834370324, 3.1549108343703236), (1.064165720223984, 1.0661657202239838), -0.24879719641021564)]
[INFO] [1753420620.655515647] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7250000238418579, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420620.659140005] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72500002 4.62799978 2.91199994]
[INFO] [1753420620.664578783] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420620.668900409] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420620.671913454] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420620.673671167] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420620.675296237] [solver_node]: 求解器返回结果: [((1.0815722821853797, 1.0835722821853795), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.91442771781462, 8.916427717814619), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.940171518182927, 8.942171518182926), (3.250805233215402, 3.2528052332154016), 1.8354234997204522), ((1.0558284818170716, 1.0578284818170713), (4.747194766784598, 4.749194766784599), -1.306169153869341), ((4.747194766784598, 4.749194766784599), (6.942171518182928, 6.944171518182928), -2.8769654806642375), ((5.248805233215401, 5.250805233215401), (1.0558284818170725, 1.0578284818170722), 0.26462717292555576), ((6.843089165629675, 6.845089165629676), (6.933834279776015, 6.9358342797760155), 2.8927954571795773), ((3.152910834370324, 3.1549108343703236), (1.064165720223984, 1.0661657202239838), -0.24879719641021564)]
[INFO] [1753420620.760467890] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7250000238418579, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420620.762087935] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72500002 4.62799978 2.91199994]
[INFO] [1753420620.765643460] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420620.766801380] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420620.767594299] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420620.768360912] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420620.769154695] [solver_node]: 求解器返回结果: [((1.0815722821853797, 1.0835722821853795), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.91442771781462, 8.916427717814619), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.940171518182927, 8.942171518182926), (3.250805233215402, 3.2528052332154016), 1.8354234997204522), ((1.0558284818170716, 1.0578284818170713), (4.747194766784598, 4.749194766784599), -1.306169153869341), ((4.747194766784598, 4.749194766784599), (6.942171518182928, 6.944171518182928), -2.8769654806642375), ((5.248805233215401, 5.250805233215401), (1.0558284818170725, 1.0578284818170722), 0.26462717292555576), ((6.843089165629675, 6.845089165629676), (6.933834279776015, 6.9358342797760155), 2.8927954571795773), ((3.152910834370324, 3.1549108343703236), (1.064165720223984, 1.0661657202239838), -0.24879719641021564)]
[INFO] [1753420620.855911544] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7250000238418579, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420620.857417090] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72500002 4.62799978 2.91199994]
[INFO] [1753420620.864248163] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420620.865237567] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420620.866125304] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420620.867020434] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420620.868143985] [solver_node]: 求解器返回结果: [((1.0815722821853797, 1.0835722821853795), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.91442771781462, 8.916427717814619), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.940171518182927, 8.942171518182926), (3.250805233215402, 3.2528052332154016), 1.8354234997204522), ((1.0558284818170716, 1.0578284818170713), (4.747194766784598, 4.749194766784599), -1.306169153869341), ((4.747194766784598, 4.749194766784599), (6.942171518182928, 6.944171518182928), -2.8769654806642375), ((5.248805233215401, 5.250805233215401), (1.0558284818170725, 1.0578284818170722), 0.26462717292555576), ((6.843089165629675, 6.845089165629676), (6.933834279776015, 6.9358342797760155), 2.8927954571795773), ((3.152910834370324, 3.1549108343703236), (1.064165720223984, 1.0661657202239838), -0.24879719641021564)]
[INFO] [1753420620.956739638] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7250000238418579, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420620.960209304] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72500002 4.62799978 2.91199994]
[INFO] [1753420620.964640565] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420620.965507534] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420620.966248899] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420620.967034553] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420620.967797166] [solver_node]: 求解器返回结果: [((1.0815722821853797, 1.0835722821853795), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.91442771781462, 8.916427717814619), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.940171518182927, 8.942171518182926), (3.250805233215402, 3.2528052332154016), 1.8354234997204522), ((1.0558284818170716, 1.0578284818170713), (4.747194766784598, 4.749194766784599), -1.306169153869341), ((4.747194766784598, 4.749194766784599), (6.942171518182928, 6.944171518182928), -2.8769654806642375), ((5.248805233215401, 5.250805233215401), (1.0558284818170725, 1.0578284818170722), 0.26462717292555576), ((6.843089165629675, 6.845089165629676), (6.933834279776015, 6.9358342797760155), 2.8927954571795773), ((3.152910834370324, 3.1549108343703236), (1.064165720223984, 1.0661657202239838), -0.24879719641021564)]
[INFO] [1753420621.055741121] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7250000238418579, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420621.057228203] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72500002 4.62799978 2.91199994]
[INFO] [1753420621.064878979] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420621.067052929] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420621.068502218] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420621.069886161] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420621.071334042] [solver_node]: 求解器返回结果: [((1.0815722821853797, 1.0835722821853795), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.91442771781462, 8.916427717814619), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.940171518182927, 8.942171518182926), (3.250805233215402, 3.2528052332154016), 1.8354234997204522), ((1.0558284818170716, 1.0578284818170713), (4.747194766784598, 4.749194766784599), -1.306169153869341), ((4.747194766784598, 4.749194766784599), (6.942171518182928, 6.944171518182928), -2.8769654806642375), ((5.248805233215401, 5.250805233215401), (1.0558284818170725, 1.0578284818170722), 0.26462717292555576), ((6.843089165629675, 6.845089165629676), (6.933834279776015, 6.9358342797760155), 2.8927954571795773), ((3.152910834370324, 3.1549108343703236), (1.064165720223984, 1.0661657202239838), -0.24879719641021564)]
[INFO] [1753420621.156099475] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7250000238418579, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420621.157530044] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72500002 4.62799978 2.91199994]
[INFO] [1753420621.161057855] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420621.161888183] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420621.162651020] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420621.163454243] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420621.165012527] [solver_node]: 求解器返回结果: [((1.0815722821853797, 1.0835722821853795), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.91442771781462, 8.916427717814619), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.940171518182927, 8.942171518182926), (3.250805233215402, 3.2528052332154016), 1.8354234997204522), ((1.0558284818170716, 1.0578284818170713), (4.747194766784598, 4.749194766784599), -1.306169153869341), ((4.747194766784598, 4.749194766784599), (6.942171518182928, 6.944171518182928), -2.8769654806642375), ((5.248805233215401, 5.250805233215401), (1.0558284818170725, 1.0578284818170722), 0.26462717292555576), ((6.843089165629675, 6.845089165629676), (6.933834279776015, 6.9358342797760155), 2.8927954571795773), ((3.152910834370324, 3.1549108343703236), (1.064165720223984, 1.0661657202239838), -0.24879719641021564)]
[INFO] [1753420621.254903481] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420621.257383871] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.91199994]
[INFO] [1753420621.260816960] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420621.261687449] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420621.262394253] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420621.264038235] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420621.266697350] [solver_node]: 求解器返回结果: [((1.0805843296762276, 1.0825843296762274), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.915415670323773, 8.917415670323772), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.94105125752196, 8.943051257521958), (3.250382429181975, 3.2523824291819747), 1.8351326756790713), ((1.0549487424780408, 1.0569487424780406), (4.747617570818025, 4.7496175708180255), -1.3064599779107218), ((4.747617570818025, 4.7496175708180255), (6.943051257521959, 6.94505125752196), -2.877256304705618), ((5.248382429181974, 5.2503824291819745), (1.0549487424780417, 1.0569487424780415), 0.26433634888417484), ((6.842982090450625, 6.8449820904506256), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.1530179095493738, 3.1550179095493736), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420621.355265771] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420621.356990140] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.91199994]
[INFO] [1753420621.360473758] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420621.361292277] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420621.362022410] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420621.362770111] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420621.363524884] [solver_node]: 求解器返回结果: [((1.0805843296762276, 1.0825843296762274), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.915415670323773, 8.917415670323772), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.94105125752196, 8.943051257521958), (3.250382429181975, 3.2523824291819747), 1.8351326756790713), ((1.0549487424780408, 1.0569487424780406), (4.747617570818025, 4.7496175708180255), -1.3064599779107218), ((4.747617570818025, 4.7496175708180255), (6.943051257521959, 6.94505125752196), -2.877256304705618), ((5.248382429181974, 5.2503824291819745), (1.0549487424780417, 1.0569487424780415), 0.26433634888417484), ((6.842982090450625, 6.8449820904506256), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.1530179095493738, 3.1550179095493736), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420621.455613244] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420621.458103683] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.91199994]
[INFO] [1753420621.461393952] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420621.462296665] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420621.463096528] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420621.463800740] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420621.464560185] [solver_node]: 求解器返回结果: [((1.0805843296762276, 1.0825843296762274), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.915415670323773, 8.917415670323772), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.94105125752196, 8.943051257521958), (3.250382429181975, 3.2523824291819747), 1.8351326756790713), ((1.0549487424780408, 1.0569487424780406), (4.747617570818025, 4.7496175708180255), -1.3064599779107218), ((4.747617570818025, 4.7496175708180255), (6.943051257521959, 6.94505125752196), -2.877256304705618), ((5.248382429181974, 5.2503824291819745), (1.0549487424780417, 1.0569487424780415), 0.26433634888417484), ((6.842982090450625, 6.8449820904506256), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.1530179095493738, 3.1550179095493736), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420621.555161367] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420621.556558175] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.91199994]
[INFO] [1753420621.559935614] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420621.560756245] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420621.561465897] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420621.562163965] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420621.562950643] [solver_node]: 求解器返回结果: [((1.0805843296762276, 1.0825843296762274), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.915415670323773, 8.917415670323772), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.94105125752196, 8.943051257521958), (3.250382429181975, 3.2523824291819747), 1.8351326756790713), ((1.0549487424780408, 1.0569487424780406), (4.747617570818025, 4.7496175708180255), -1.3064599779107218), ((4.747617570818025, 4.7496175708180255), (6.943051257521959, 6.94505125752196), -2.877256304705618), ((5.248382429181974, 5.2503824291819745), (1.0549487424780417, 1.0569487424780415), 0.26433634888417484), ((6.842982090450625, 6.8449820904506256), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.1530179095493738, 3.1550179095493736), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420621.658091218] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7239999771118164, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420621.659617661] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72399998 4.62799978 2.91199994]
[INFO] [1753420621.663263460] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420621.664131836] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420621.664879665] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420621.667914151] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420621.668892963] [solver_node]: 求解器返回结果: [((1.0805843296762276, 1.0825843296762274), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.915415670323773, 8.917415670323772), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.94105125752196, 8.943051257521958), (3.250382429181975, 3.2523824291819747), 1.8351326756790713), ((1.0549487424780408, 1.0569487424780406), (4.747617570818025, 4.7496175708180255), -1.3064599779107218), ((4.747617570818025, 4.7496175708180255), (6.943051257521959, 6.94505125752196), -2.877256304705618), ((5.248382429181974, 5.2503824291819745), (1.0549487424780417, 1.0569487424780415), 0.26433634888417484), ((6.842982090450625, 6.8449820904506256), (6.934753810220623, 6.936753810220623), 2.892985031592752), ((3.1530179095493738, 3.1550179095493736), (1.0632461897793766, 1.0652461897793764), -0.24860762199704137)]
[INFO] [1753420621.758350049] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7229999899864197, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420621.761126863] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72299999 4.62799978 2.91199994]
[INFO] [1753420621.766278176] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420621.768199287] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420621.769735650] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420621.770485079] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420621.771355312] [solver_node]: 求解器返回结果: [((1.0795964360508827, 1.0815964360508825), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.916403563949117, 8.918403563949116), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.941931172259656, 8.943931172259655), (3.249959985471317, 3.251959985471317), 1.8348418231830783), ((1.0540688277403447, 1.0560688277403445), (4.748040014528683, 4.750040014528683), -1.3067508304067148), ((4.748040014528682, 4.7500400145286825), (6.9439311722596555, 6.945931172259656), -2.877547157201611), ((5.247959985471316, 5.249959985471317), (1.0540688277403445, 1.0560688277403443), 0.2640454963881818), ((6.842875124703964, 6.8448751247039645), (6.935673412616164, 6.9376734126161645), 2.8931746129539673), ((3.1531248752960352, 3.155124875296035), (1.062326587383835, 1.0643265873838348), -0.24841804063582593)]
[INFO] [1753420621.855142190] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7229999899864197, 4.627999782562256, 2.9119999408721924])
[INFO] [1753420621.857492208] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.72299999 4.62799978 2.91199994]
[INFO] [1753420621.861151255] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420621.862875112] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420621.863644510] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420621.864372114] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420621.865152872] [solver_node]: 求解器返回结果: [((1.0795964360508827, 1.0815964360508825), (4.877190862311066, 4.8791908623110665), -1.415112784906503), ((8.916403563949117, 8.918403563949116), (3.120809137688934, 3.1228091376889338), 1.72647986868329), ((8.941931172259656, 8.943931172259655), (3.249959985471317, 3.251959985471317), 1.8348418231830783), ((1.0540688277403447, 1.0560688277403445), (4.748040014528683, 4.750040014528683), -1.3067508304067148), ((4.748040014528682, 4.7500400145286825), (6.9439311722596555, 6.945931172259656), -2.877547157201611), ((5.247959985471316, 5.249959985471317), (1.0540688277403445, 1.0560688277403443), 0.2640454963881818), ((6.842875124703964, 6.8448751247039645), (6.935673412616164, 6.9376734126161645), 2.8931746129539673), ((3.1531248752960352, 3.155124875296035), (1.062326587383835, 1.0643265873838348), -0.24841804063582593)]
[INFO] [1753420621.955771399] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7229999899864197, 4.627999782562256, 30.76300048828125])
[WARN] [1753420621.960674097] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420622.057283226] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7229999899864197, 4.627999782562256, 30.76300048828125])
[WARN] [1753420622.068541304] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420622.154771707] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7229999899864197, 4.627999782562256, 30.76300048828125])
[WARN] [1753420622.155856890] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420622.256941473] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6010000109672546, 4.627999782562256, 30.76300048828125])
[WARN] [1753420622.258039840] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420622.358201997] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6010000109672546, 4.627999782562256, 30.76300048828125])
[WARN] [1753420622.362137244] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420622.455144895] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6010000109672546, 4.627999782562256, 2.9040000438690186])
[INFO] [1753420622.458053521] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.60100001 4.62799978 2.90400004]
[INFO] [1753420622.463825972] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420622.465380064] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420622.466639619] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420622.467543229] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420622.468600059] [solver_node]: 求解器返回结果: [((0.9598288622591331, 0.9618288622591331), (4.8816389672606935, 4.883638967260694), -1.4199593044097503), ((9.036171137740867, 9.038171137740866), (3.1163610327393063, 3.118361032739306), 1.7216333491800428), ((9.051068931829436, 9.053068931829435), (3.201728831051262, 3.203728831051262), 1.799577780529708), ((0.9449310681705646, 0.9469310681705646), (4.796271168948737, 4.798271168948737), -1.3420148730600852), ((4.796271168948738, 4.798271168948738), (7.0530689318294355, 7.055068931829436), -2.912811199854982), ((5.199728831051262, 5.201728831051263), (0.9449310681705644, 0.9469310681705644), 0.22878145373481135), ((6.838409371167908, 6.840409371167909), (7.048793416569998, 7.050793416569999), 2.9164372612446607), ((3.157590628832091, 3.159590628832091), (0.9492065834300007, 0.9512065834300008), -0.22515539234513232)]
[INFO] [1753420622.557386470] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6010000109672546, 4.627999782562256, 2.9040000438690186])
[INFO] [1753420622.559458977] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.60100001 4.62799978 2.90400004]
[INFO] [1753420622.563427345] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420622.564555665] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420622.565426698] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420622.566148606] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420622.567097305] [solver_node]: 求解器返回结果: [((0.9598288622591331, 0.9618288622591331), (4.8816389672606935, 4.883638967260694), -1.4199593044097503), ((9.036171137740867, 9.038171137740866), (3.1163610327393063, 3.118361032739306), 1.7216333491800428), ((9.051068931829436, 9.053068931829435), (3.201728831051262, 3.203728831051262), 1.799577780529708), ((0.9449310681705646, 0.9469310681705646), (4.796271168948737, 4.798271168948737), -1.3420148730600852), ((4.796271168948738, 4.798271168948738), (7.0530689318294355, 7.055068931829436), -2.912811199854982), ((5.199728831051262, 5.201728831051263), (0.9449310681705644, 0.9469310681705644), 0.22878145373481135), ((6.838409371167908, 6.840409371167909), (7.048793416569998, 7.050793416569999), 2.9164372612446607), ((3.157590628832091, 3.159590628832091), (0.9492065834300007, 0.9512065834300008), -0.22515539234513232)]
[INFO] [1753420622.660690060] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6010000109672546, 4.629000186920166, 2.9040000438690186])
[INFO] [1753420622.662369468] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.60100001 4.62900019 2.90400004]
[INFO] [1753420622.666210280] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420622.667155267] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420622.667955769] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420622.668691790] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420622.669501669] [solver_node]: 求解器返回结果: [((0.9597343905919283, 0.9617343905919283), (4.882071802961848, 4.884071802961849), -1.4193464767924162), ((9.03626560940807, 9.03826560940807), (3.115928197038152, 3.1179281970381516), 1.7222461767973767), ((9.051068931829436, 9.053068931829435), (3.2007544937562957, 3.2027544937562955), 1.799577780529708), ((0.9449310681705646, 0.9469310681705646), (4.797245506243704, 4.799245506243705), -1.3420148730600852), ((4.797245506243704, 4.799245506243705), (7.0530689318294355, 7.055068931829436), -2.912811199854982), ((5.198754493756295, 5.200754493756295), (0.9449310681705644, 0.9469310681705644), 0.22878145373481135), ((6.8383879123010365, 6.840387912301037), (7.04878420674641, 7.05078420674641), 2.916481185079265), ((3.157612087698962, 3.159612087698962), (0.9492157932535897, 0.9512157932535897), -0.22511146851052832)]
[INFO] [1753420622.757681695] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6949999928474426, 4.629000186920166, 2.9040000438690186])
[INFO] [1753420622.759385456] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.69499999 4.62900019 2.90400004]
[INFO] [1753420622.763836077] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420622.764776744] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420622.765473308] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420622.766178351] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420622.767015783] [solver_node]: 求解器返回结果: [((1.0526584421070653, 1.054658442107065), (4.882071802961848, 4.884071802961849), -1.4193464767924162), ((8.943341557892934, 8.945341557892933), (3.115928197038152, 3.1179281970381516), 1.7222461767973767), ((8.966831289898009, 8.968831289898008), (3.238167788793296, 3.2401677887932956), 1.8272923005584527), ((1.029168710101992, 1.0311687101019917), (4.759832211206704, 4.761832211206705), -1.3143003530313404), ((4.759832211206704, 4.761832211206705), (6.968831289898008, 6.970831289898008), -2.885096679826237), ((5.236167788793295, 5.238167788793295), (1.0291687101019917, 1.0311687101019915), 0.25649597376355626), ((6.847661031008765, 6.8496610310087656), (6.961462006905, 6.963462006905001), 2.89853747841636), ((3.1483389689912338, 3.1503389689912336), (1.0365379930949987, 1.0385379930949985), -0.24305517517343292)]
[INFO] [1753420622.857394080] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6949999928474426, 4.629000186920166, 2.9040000438690186])
[INFO] [1753420622.859996713] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.69499999 4.62900019 2.90400004]
[INFO] [1753420622.863994554] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420622.864827314] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420622.865554950] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420622.866263130] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420622.867054225] [solver_node]: 求解器返回结果: [((1.0526584421070653, 1.054658442107065), (4.882071802961848, 4.884071802961849), -1.4193464767924162), ((8.943341557892934, 8.945341557892933), (3.115928197038152, 3.1179281970381516), 1.7222461767973767), ((8.966831289898009, 8.968831289898008), (3.238167788793296, 3.2401677887932956), 1.8272923005584527), ((1.029168710101992, 1.0311687101019917), (4.759832211206704, 4.761832211206705), -1.3143003530313404), ((4.759832211206704, 4.761832211206705), (6.968831289898008, 6.970831289898008), -2.885096679826237), ((5.236167788793295, 5.238167788793295), (1.0291687101019917, 1.0311687101019915), 0.25649597376355626), ((6.847661031008765, 6.8496610310087656), (6.961462006905, 6.963462006905001), 2.89853747841636), ((3.1483389689912338, 3.1503389689912336), (1.0365379930949987, 1.0385379930949985), -0.24305517517343292)]
[INFO] [1753420622.955948767] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6949999928474426, 4.629000186920166, 3.009000062942505])
[INFO] [1753420622.959122297] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.69499999 4.62900019 3.00900006]
[INFO] [1753420622.962543930] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420622.963738363] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420622.964516689] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420622.965281575] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420622.966081309] [solver_node]: 求解器返回结果: [((1.0415966831852923, 1.043596683185292), (4.823681519692902, 4.825681519692902), -1.3634716863944263), ((8.954403316814707, 8.956403316814706), (3.174318480307099, 3.1763184803070987), 1.7781209671953673), ((8.964686770767091, 8.96668677076709), (3.2272362285987284, 3.229236228598728), 1.8194698905619073), ((1.0313132292329077, 1.0333132292329075), (4.770763771401271, 4.772763771401272), -1.3221227630278858), ((4.7707637714012705, 4.772763771401271), (6.966686770767092, 6.968686770767093), -2.892919089822782), ((5.225236228598727, 5.227236228598728), (1.0313132292329084, 1.0333132292329081), 0.24867356376701086), ((6.745747068801053, 6.747747068801053), (6.961462006905, 6.963462006905001), 2.89853747841636), ((3.250252931198946, 3.252252931198946), (1.0365379930949987, 1.0385379930949985), -0.24305517517343292)]
[INFO] [1753420623.057798204] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6949999928474426, 4.627999782562256, 3.009000062942505])
[INFO] [1753420623.060315459] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.69499999 4.62799978 3.00900006]
[INFO] [1753420623.064425463] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420623.065418163] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420623.066179273] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420623.066941759] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420623.067737525] [solver_node]: 求解器返回结果: [((1.041703501801412, 1.0437035018014118), (4.823257440307853, 4.825257440307854), -1.3639423218753208), ((8.954296498198588, 8.956296498198586), (3.1747425596921457, 3.1767425596921455), 1.7776503317144725), ((8.964686770767091, 8.96668677076709), (3.2282058602533037, 3.2302058602533035), 1.8194698905619073), ((1.0313132292329077, 1.0333132292329075), (4.769794139746696, 4.771794139746697), -1.3221227630278858), ((4.769794139746695, 4.771794139746696), (6.966686770767092, 6.968686770767093), -2.892919089822782), ((5.226205860253303, 5.228205860253303), (1.0313132292329084, 1.0333132292329081), 0.24867356376701086), ((6.74577396757996, 6.747773967579961), (6.9614737638565805, 6.963473763856581), 2.8984903222850127), ((3.2502260324200396, 3.2522260324200394), (1.0365262361434184, 1.0385262361434182), -0.24310233130478043)]
[INFO] [1753420623.156680422] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6949999928474426, 4.626999855041504, 3.009000062942505])
[INFO] [1753420623.158172304] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.69499999 4.62699986 3.00900006]
[INFO] [1753420623.161645714] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420623.163330850] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420623.164386111] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420623.165154901] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420623.165936747] [solver_node]: 求解器返回结果: [((1.0418102529126894, 1.0438102529126891), (4.82283341493325, 4.82483341493325), -1.3644136798573756), ((8.95418974708731, 8.95618974708731), (3.1751665850667505, 3.1771665850667503), 1.7771789737324173), ((8.964686770767091, 8.96668677076709), (3.2291750297383586, 3.2311750297383584), 1.8194698905619073), ((1.0313132292329077, 1.0333132292329075), (4.768824970261641, 4.770824970261642), -1.3221227630278858), ((4.768824970261641, 4.770824970261642), (6.966686770767092, 6.968686770767093), -2.892919089822782), ((5.2271750297383575, 5.229175029738358), (1.0313132292329084, 1.0333132292329081), 0.24867356376701086), ((6.745800870992068, 6.7478008709920685), (6.961485521980528, 6.9634855219805285), 2.8984431707038354), ((3.2501991290079317, 3.2521991290079315), (1.036514478019471, 1.0385144780194708), -0.2431494828859576)]
[INFO] [1753420623.255812918] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6949999928474426, 4.626999855041504, 3.009000062942505])
[INFO] [1753420623.258747881] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.69499999 4.62699986 3.00900006]
[INFO] [1753420623.262259692] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420623.263180102] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420623.263932348] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420623.264652784] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420623.265429638] [solver_node]: 求解器返回结果: [((1.0418102529126894, 1.0438102529126891), (4.82283341493325, 4.82483341493325), -1.3644136798573756), ((8.95418974708731, 8.95618974708731), (3.1751665850667505, 3.1771665850667503), 1.7771789737324173), ((8.964686770767091, 8.96668677076709), (3.2291750297383586, 3.2311750297383584), 1.8194698905619073), ((1.0313132292329077, 1.0333132292329075), (4.768824970261641, 4.770824970261642), -1.3221227630278858), ((4.768824970261641, 4.770824970261642), (6.966686770767092, 6.968686770767093), -2.892919089822782), ((5.2271750297383575, 5.229175029738358), (1.0313132292329084, 1.0333132292329081), 0.24867356376701086), ((6.745800870992068, 6.7478008709920685), (6.961485521980528, 6.9634855219805285), 2.8984431707038354), ((3.2501991290079317, 3.2521991290079315), (1.036514478019471, 1.0385144780194708), -0.2431494828859576)]
[INFO] [1753420623.354932358] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6949999928474426, 4.626999855041504, 3.009000062942505])
[INFO] [1753420623.356616694] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.69499999 4.62699986 3.00900006]
[INFO] [1753420623.360162106] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420623.361004338] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420623.361754503] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420623.362485244] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420623.363294259] [solver_node]: 求解器返回结果: [((1.0418102529126894, 1.0438102529126891), (4.82283341493325, 4.82483341493325), -1.3644136798573756), ((8.95418974708731, 8.95618974708731), (3.1751665850667505, 3.1771665850667503), 1.7771789737324173), ((8.964686770767091, 8.96668677076709), (3.2291750297383586, 3.2311750297383584), 1.8194698905619073), ((1.0313132292329077, 1.0333132292329075), (4.768824970261641, 4.770824970261642), -1.3221227630278858), ((4.768824970261641, 4.770824970261642), (6.966686770767092, 6.968686770767093), -2.892919089822782), ((5.2271750297383575, 5.229175029738358), (1.0313132292329084, 1.0333132292329081), 0.24867356376701086), ((6.745800870992068, 6.7478008709920685), (6.961485521980528, 6.9634855219805285), 2.8984431707038354), ((3.2501991290079317, 3.2521991290079315), (1.036514478019471, 1.0385144780194708), -0.2431494828859576)]
[INFO] [1753420623.454738762] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.6949999928474426, 4.625, 3.0910000801086426])
[INFO] [1753420623.456248501] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.69499999 4.625      3.09100008]
[INFO] [1753420623.459768152] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420623.461641133] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420623.463296700] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420623.464105107] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420623.464929706] [solver_node]: 求解器返回结果: [((1.0332333960314377, 1.0352333960314375), (4.776694137356189, 4.778694137356189), -1.329330783303516), ((8.962766603968563, 8.964766603968561), (3.2213058626438107, 3.2233058626438105), 1.8122618702862772), ((8.963139778523312, 8.96513977852331), (3.2232139719365978, 3.2252139719365975), 1.813678627301151), ((1.032860221476688, 1.0348602214766878), (4.774786028063402, 4.776786028063403), -1.3279140262886422), ((4.774786028063402, 4.776786028063403), (6.965139778523311, 6.967139778523312), -2.8987103530835387), ((5.221213971936597, 5.223213971936597), (1.0328602214766878, 1.0348602214766875), 0.2428823005062544), ((6.666268501159643, 6.668268501159644), (6.961509058572751, 6.963509058572751), 2.8983488137346214), ((3.329731498840356, 3.3317314988403557), (1.0364909414272492, 1.038490941427249), -0.24324383985517187)]
[INFO] [1753420623.554887895] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.7310000061988831, 4.624000072479248, 3.0910000801086426])
[INFO] [1753420623.556465956] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.73100001 4.62400007 3.09100008]
[INFO] [1753420623.560544919] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420623.561439376] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420623.562817111] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420623.563582445] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420623.564380899] [solver_node]: 求解器返回结果: [((1.0683000334189447, 1.0703000334189445), (4.7762728868806015, 4.778272886880602), -1.3297403065891427), ((8.927699966581056, 8.929699966581055), (3.2217271131193983, 3.223727113119398), 1.8118523470006505), ((8.930978157358858, 8.932978157358857), (3.2379249962559187, 3.2399249962559185), 1.82368031150725), ((1.065021842641141, 1.0670218426411409), (4.760075003744081, 4.762075003744082), -1.3179123420825432), ((4.760075003744081, 4.762075003744082), (6.932978157358859, 6.934978157358859), -2.88870866887744), ((5.235924996255918, 5.237924996255918), (1.065021842641141, 1.0670218426411409), 0.2528839847123534), ((6.670413768136027, 6.672413768136027), (6.928371418570802, 6.930371418570803), 2.891464876551652), ((3.3255862318639724, 3.327586231863972), (1.0696285814291966, 1.0716285814291964), -0.2501277770381409)]
[INFO] [1753420623.655240426] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.0540000200271606, 4.624000072479248, 3.0910000801086426])
[INFO] [1753420623.658985684] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.05400002 4.62400007 3.09100008]
[INFO] [1753420623.664260041] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420623.665983738] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420623.667106522] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420623.667912880] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420623.668716583] [solver_node]: 求解器返回结果: [((1.3819612419714924, 1.3839612419714922), (4.7762728868806015, 4.778272886880602), -1.3297403065891427), ((8.614038758028508, 8.616038758028507), (3.2217271131193983, 3.223727113119398), 1.8118523470006505), ((8.655244937361525, 8.657244937361524), (3.377849304607899, 3.3798493046078986), 1.9109435271654072), ((1.3407550626384757, 1.3427550626384754), (4.620150695392101, 4.622150695392102), -1.230649126424386), ((4.6201506953921, 4.622150695392101), (6.657244937361523, 6.659244937361524), -2.8014454532192823), ((5.375849304607898, 5.377849304607898), (1.3407550626384763, 1.342755062638476), 0.34014720037051066), ((6.713372467560835, 6.715372467560836), (6.638723432539578, 6.640723432539579), 2.8312463376450006), ((3.2826275324391645, 3.2846275324391643), (1.3592765674604212, 1.361276567460421), -0.3103463159447924)]
[INFO] [1753420623.754893994] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.378999948501587, 4.622000217437744, 3.0910000801086426])
[INFO] [1753420623.756319794] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.37899995 4.62200022 3.09100008]
[INFO] [1753420623.759614799] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420623.760400549] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420623.761142362] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420623.761834094] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420623.762614596] [solver_node]: 求解器返回结果: [((1.6979133310277545, 1.6999133310277543), (4.775430005872722, 4.777430005872723), -1.3305613052782164), ((1.6558153413890293, 1.657815341389029), (4.735503923783662, 4.737503923783662), -1.904786378227504), ((8.298086668972246, 8.300086668972245), (3.2225699941272783, 3.224569994127278), 1.811031348311577), ((8.340184658610971, 8.34218465861097), (3.262496076216338, 3.264496076216338), 1.2368062753622893), ((8.403350817738215, 8.405350817738213), (3.544735948515815, 3.5467359485158148), 1.9936336942953035), ((1.592649182261784, 1.5946491822617839), (4.453264051484185, 4.4552640514841855), -1.1479589592944897), ((8.36092105485334, 8.36292105485334), (3.2295253225761855, 3.2315253225761853), 1.2019811475561035), ((1.6350789451466594, 1.6370789451466592), (4.768474677423814, 4.770474677423815), -1.9396115060336896), ((4.453264051484185, 4.4552640514841855), (6.405350817738215, 6.407350817738216), -2.718755286089386), ((5.542735948515814, 5.5447359485158145), (1.592649182261785, 1.5946491822617848), 0.4228373675004069), ((6.766474677423814, 6.768474677423814), (6.362921054853341, 6.364921054853341), 2.7727774743510003), ((3.229525322576186, 3.2315253225761857), (1.6350789451466592, 1.637078945146659), -0.36881517923879287)]
[INFO] [1753420623.857781060] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.378999948501587, 4.620999813079834, 3.0910000801086426])
[INFO] [1753420623.859330224] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.37899995 4.62099981 3.09100008]
[INFO] [1753420623.862740848] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420623.863563080] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420623.864294460] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420623.865006992] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420623.865812391] [solver_node]: 求解器返回结果: [((1.6980877948286757, 1.7000877948286754), (4.775008173867755, 4.777008173867755), -1.330972982615001), ((1.6560421402094767, 1.6580421402094765), (4.735147752772311, 4.737147752772311), -1.9043859423170364), ((8.297912205171324, 8.299912205171323), (3.222991826132245, 3.224991826132245), 1.8106196709747917), ((8.339957859790523, 8.341957859790522), (3.262852247227688, 3.264852247227688), 1.2372067112727567), ((8.403350817738215, 8.405350817738213), (3.5456482455613645, 3.5476482455613643), 1.9936336942953035), ((1.592649182261784, 1.5946491822617839), (4.452351754438635, 4.454351754438636), -1.1479589592944897), ((8.360963480538146, 8.362963480538145), (3.229457119719222, 3.231457119719222), 1.2019131697360304), ((1.635036519461854, 1.6370365194618537), (4.768542880280777, 4.770542880280778), -1.9396794838537628), ((4.452351754438635, 4.454351754438636), (6.405350817738215, 6.407350817738216), -2.718755286089386), ((5.543648245561363, 5.545648245561364), (1.592649182261785, 1.5946491822617848), 0.4228373675004069), ((6.7665428802807766, 6.768542880280777), (6.362963480538146, 6.3649634805381465), 2.772709496530927), ((3.2294571197192226, 3.2314571197192223), (1.635036519461854, 1.6370365194618537), -0.36888315705886615)]
[INFO] [1753420623.955727571] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.7430000305175781, 4.620999813079834, 3.0910000801086426])
[INFO] [1753420623.957784813] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.74300003 4.62099981 3.09100008]
[INFO] [1753420623.962924991] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420623.963816056] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420623.964662096] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420623.965424741] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420623.966264509] [solver_node]: 求解器返回结果: [((2.0516704943393265, 2.0536704943393262), (4.775008173867755, 4.777008173867755), -1.330972982615001), ((1.999975574147416, 2.0019755741474157), (4.735147752772311, 4.737147752772311), -1.9043859423170364), ((7.944329505660673, 7.946329505660674), (3.222991826132245, 3.224991826132245), 1.8106196709747917), ((7.996024425852583, 7.998024425852583), (3.262852247227688, 3.264852247227688), 1.2372067112727567), ((8.15348354862648, 8.15548354862648), (3.749008737977672, 3.751008737977672), 2.079445905621511), ((1.84251645137352, 1.8445164513735197), (4.248991262022328, 4.250991262022328), -1.0621467479682822), ((8.072373218305886, 8.074373218305885), (3.160636867025887, 3.1626368670258866), 1.1395462714168616), ((1.9236267816941144, 1.9256267816941142), (4.8373631329741125, 4.839363132974113), -2.0020463821729315), ((4.248991262022328, 4.250991262022328), (6.15548354862648, 6.15748354862648), -2.632943074763179), ((5.747008737977671, 5.749008737977672), (1.8425164513735197, 1.8445164513735195), 0.5086495788266143), ((6.835363132974113, 6.837363132974113), (6.074373218305885, 6.076373218305886), 2.710342598211758), ((3.160636867025887, 3.1626368670258866), (1.9236267816941144, 1.9256267816941142), -0.43125005537803485)]
[INFO] [1753420624.055057770] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.7860000133514404, 4.620999813079834, 3.0910000801086426])
[INFO] [1753420624.058026750] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.78600001 4.62099981 3.09100008]
[INFO] [1753420624.061506624] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420624.062739459] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420624.063602843] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420624.064417682] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420624.065449263] [solver_node]: 求解器返回结果: [((2.093439853085352, 2.095439853085352), (4.775008173867755, 4.777008173867755), -1.330972982615001), ((2.040605047837131, 2.0426050478371307), (4.735147752772311, 4.737147752772311), -1.9043859423170364), ((7.902560146914647, 7.904560146914648), (3.222991826132245, 3.224991826132245), 1.8106196709747917), ((7.955394952162868, 7.957394952162868), (3.262852247227688, 3.264852247227688), 1.2372067112727567), ((8.126215655634269, 8.128215655634268), (3.77384979729046, 3.77584979729046), 2.08909044699066), ((1.8697843443657307, 1.8717843443657305), (4.224150202709539, 4.2261502027095394), -1.0525022065991327), ((8.039757529058225, 8.041757529058223), (3.151959303567545, 3.153959303567545), 1.1323989539282144), ((1.9562424709417754, 1.9582424709417752), (4.846040696432454, 4.848040696432455), -2.0091936996615787), ((4.224150202709539, 4.2261502027095394), (6.128215655634269, 6.130215655634269), -2.6232985333940295), ((5.77184979729046, 5.7738497972904606), (1.8697843443657307, 1.8717843443657305), 0.5182941201957638), ((6.844040696432454, 6.846040696432454), (6.041757529058224, 6.043757529058225), 2.703195280723111), ((3.1519593035675455, 3.1539593035675453), (1.956242470941775, 1.9582424709417747), -0.43839737286668196)]
[INFO] [1753420624.160559503] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.8259999752044678, 4.61899995803833, 3.0910000801086426])
[INFO] [1753420624.164179381] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.82599998 4.61899996 3.09100008]
[INFO] [1753420624.167901598] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420624.170093020] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420624.172219000] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420624.174729855] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420624.179966291] [solver_node]: 求解器返回结果: [((2.132731221709148, 2.134731221709148), (4.774164530155643, 4.7761645301556435), -1.331797922415932), ((2.0789708999303778, 2.0809708999303775), (4.734435573812269, 4.73643557381227), -1.9035834827292266), ((7.863268778290851, 7.865268778290852), (3.2238354698443565, 3.2258354698443563), 1.8097947311738611), ((7.917029100069622, 7.919029100069623), (3.2635644261877306, 3.2655644261877304), 1.238009170860566), ((8.10127029034062, 8.10327029034062), (3.7987908547928053, 3.800790854792805), 2.0979678986473047), ((1.8947297096593803, 1.89672970965938), (4.1992091452071945, 4.201209145207195), -1.0436247549424884), ((8.0098486923056, 8.011848692305598), (3.1435999977239377, 3.1455999977239375), 1.1256359317308853), ((1.9861513076943997, 1.9881513076943995), (4.854400002276062, 4.856400002276063), -2.015956721858908), ((4.1992091452071945, 4.201209145207195), (6.103270290340619, 6.10527029034062), -2.614421081737385), ((5.796790854792804, 5.798790854792805), (1.89472970965938, 1.8967297096593798), 0.5271715718524081), ((6.852400002276061, 6.854400002276062), (6.011848692305599, 6.0138486923056), 2.696432258525782), ((3.1435999977239377, 3.1455999977239375), (1.9861513076943993, 1.988151307694399), -0.44516039506401106)]
[INFO] [1753420624.256244095] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.8279999494552612, 4.61899995803833, 3.0910000801086426])
[INFO] [1753420624.257775626] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.82799995 4.61899996 3.09100008]
[INFO] [1753420624.261488595] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420624.262397197] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420624.263266085] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420624.264074908] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420624.265663273] [solver_node]: 求解器返回结果: [((2.134674349569929, 2.1366743495699287), (4.774164530155643, 4.7761645301556435), -1.331797922415932), ((2.0808611442174105, 2.0828611442174103), (4.734435573812269, 4.73643557381227), -1.9035834827292266), ((7.861325650430071, 7.863325650430071), (3.2238354698443565, 3.2258354698443563), 1.8097947311738611), ((7.9151388557825895, 7.91713885578259), (3.2635644261877306, 3.2655644261877304), 1.238009170860566), ((8.10003361926177, 8.10203361926177), (3.799953457692521, 3.801953457692521), 2.098409381967752), ((1.895966380738229, 1.8979663807382288), (4.198046542307479, 4.200046542307479), -1.0431832716220413), ((8.00835339903962, 8.01035339903962), (3.1431893059910014, 3.145189305991001), 1.125306638567511), ((1.98764660096038, 1.9896466009603797), (4.854810694008998, 4.856810694008999), -2.016286015022282), ((4.198046542307478, 4.200046542307478), (6.10203361926177, 6.104033619261771), -2.613979598416938), ((5.797953457692521, 5.799953457692522), (1.895966380738229, 1.8979663807382288), 0.5276130551728554), ((6.852810694008998, 6.854810694008998), (6.010353399039619, 6.01235339903962), 2.6961029653624076), ((3.1431893059910014, 3.145189305991001), (1.98764660096038, 1.9896466009603797), -0.4454896882273856)]
[INFO] [1753420624.355261453] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.8279999494552612, 4.61899995803833, 3.0910000801086426])
[INFO] [1753420624.356877114] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.82799995 4.61899996 3.09100008]
[INFO] [1753420624.360458464] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420624.361316024] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420624.362088078] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420624.362829923] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420624.363625433] [solver_node]: 求解器返回结果: [((2.134674349569929, 2.1366743495699287), (4.774164530155643, 4.7761645301556435), -1.331797922415932), ((2.0808611442174105, 2.0828611442174103), (4.734435573812269, 4.73643557381227), -1.9035834827292266), ((7.861325650430071, 7.863325650430071), (3.2238354698443565, 3.2258354698443563), 1.8097947311738611), ((7.9151388557825895, 7.91713885578259), (3.2635644261877306, 3.2655644261877304), 1.238009170860566), ((8.10003361926177, 8.10203361926177), (3.799953457692521, 3.801953457692521), 2.098409381967752), ((1.895966380738229, 1.8979663807382288), (4.198046542307479, 4.200046542307479), -1.0431832716220413), ((8.00835339903962, 8.01035339903962), (3.1431893059910014, 3.145189305991001), 1.125306638567511), ((1.98764660096038, 1.9896466009603797), (4.854810694008998, 4.856810694008999), -2.016286015022282), ((4.198046542307478, 4.200046542307478), (6.10203361926177, 6.104033619261771), -2.613979598416938), ((5.797953457692521, 5.799953457692522), (1.895966380738229, 1.8979663807382288), 0.5276130551728554), ((6.852810694008998, 6.854810694008998), (6.010353399039619, 6.01235339903962), 2.6961029653624076), ((3.1431893059910014, 3.145189305991001), (1.98764660096038, 1.9896466009603797), -0.4454896882273856)]
[INFO] [1753420624.455190421] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.8279999494552612, 4.61899995803833, 3.0910000801086426])
[INFO] [1753420624.456686911] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.82799995 4.61899996 3.09100008]
[INFO] [1753420624.460097855] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420624.460923351] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420624.461673836] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420624.462400960] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420624.463222520] [solver_node]: 求解器返回结果: [((2.134674349569929, 2.1366743495699287), (4.774164530155643, 4.7761645301556435), -1.331797922415932), ((2.0808611442174105, 2.0828611442174103), (4.734435573812269, 4.73643557381227), -1.9035834827292266), ((7.861325650430071, 7.863325650430071), (3.2238354698443565, 3.2258354698443563), 1.8097947311738611), ((7.9151388557825895, 7.91713885578259), (3.2635644261877306, 3.2655644261877304), 1.238009170860566), ((8.10003361926177, 8.10203361926177), (3.799953457692521, 3.801953457692521), 2.098409381967752), ((1.895966380738229, 1.8979663807382288), (4.198046542307479, 4.200046542307479), -1.0431832716220413), ((8.00835339903962, 8.01035339903962), (3.1431893059910014, 3.145189305991001), 1.125306638567511), ((1.98764660096038, 1.9896466009603797), (4.854810694008998, 4.856810694008999), -2.016286015022282), ((4.198046542307478, 4.200046542307478), (6.10203361926177, 6.104033619261771), -2.613979598416938), ((5.797953457692521, 5.799953457692522), (1.895966380738229, 1.8979663807382288), 0.5276130551728554), ((6.852810694008998, 6.854810694008998), (6.010353399039619, 6.01235339903962), 2.6961029653624076), ((3.1431893059910014, 3.145189305991001), (1.98764660096038, 1.9896466009603797), -0.4454896882273856)]
[INFO] [1753420624.554915927] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.8259999752044678, 4.61899995803833, 3.0910000801086426])
[INFO] [1753420624.556458082] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.82599998 4.61899996 3.09100008]
[INFO] [1753420624.562062432] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420624.562982970] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420624.563724207] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420624.564435172] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420624.565240890] [solver_node]: 求解器返回结果: [((2.132731221709148, 2.134731221709148), (4.774164530155643, 4.7761645301556435), -1.331797922415932), ((2.0789708999303778, 2.0809708999303775), (4.734435573812269, 4.73643557381227), -1.9035834827292266), ((7.863268778290851, 7.865268778290852), (3.2238354698443565, 3.2258354698443563), 1.8097947311738611), ((7.917029100069622, 7.919029100069623), (3.2635644261877306, 3.2655644261877304), 1.238009170860566), ((8.10127029034062, 8.10327029034062), (3.7987908547928053, 3.800790854792805), 2.0979678986473047), ((1.8947297096593803, 1.89672970965938), (4.1992091452071945, 4.201209145207195), -1.0436247549424884), ((8.0098486923056, 8.011848692305598), (3.1435999977239377, 3.1455999977239375), 1.1256359317308853), ((1.9861513076943997, 1.9881513076943995), (4.854400002276062, 4.856400002276063), -2.015956721858908), ((4.1992091452071945, 4.201209145207195), (6.103270290340619, 6.10527029034062), -2.614421081737385), ((5.796790854792804, 5.798790854792805), (1.89472970965938, 1.8967297096593798), 0.5271715718524081), ((6.852400002276061, 6.854400002276062), (6.011848692305599, 6.0138486923056), 2.696432258525782), ((3.1435999977239377, 3.1455999977239375), (1.9861513076943993, 1.988151307694399), -0.44516039506401106)]
[INFO] [1753420624.657111390] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.8259999752044678, 4.61899995803833, 3.0910000801086426])
[INFO] [1753420624.658675691] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.82599998 4.61899996 3.09100008]
[INFO] [1753420624.662775358] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420624.664450894] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420624.665850741] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420624.667271805] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420624.668647524] [solver_node]: 求解器返回结果: [((2.132731221709148, 2.134731221709148), (4.774164530155643, 4.7761645301556435), -1.331797922415932), ((2.0789708999303778, 2.0809708999303775), (4.734435573812269, 4.73643557381227), -1.9035834827292266), ((7.863268778290851, 7.865268778290852), (3.2238354698443565, 3.2258354698443563), 1.8097947311738611), ((7.917029100069622, 7.919029100069623), (3.2635644261877306, 3.2655644261877304), 1.238009170860566), ((8.10127029034062, 8.10327029034062), (3.7987908547928053, 3.800790854792805), 2.0979678986473047), ((1.8947297096593803, 1.89672970965938), (4.1992091452071945, 4.201209145207195), -1.0436247549424884), ((8.0098486923056, 8.011848692305598), (3.1435999977239377, 3.1455999977239375), 1.1256359317308853), ((1.9861513076943997, 1.9881513076943995), (4.854400002276062, 4.856400002276063), -2.015956721858908), ((4.1992091452071945, 4.201209145207195), (6.103270290340619, 6.10527029034062), -2.614421081737385), ((5.796790854792804, 5.798790854792805), (1.89472970965938, 1.8967297096593798), 0.5271715718524081), ((6.852400002276061, 6.854400002276062), (6.011848692305599, 6.0138486923056), 2.696432258525782), ((3.1435999977239377, 3.1455999977239375), (1.9861513076943993, 1.988151307694399), -0.44516039506401106)]
[INFO] [1753420624.761019895] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.8270000219345093, 4.61899995803833, 3.0910000801086426])
[INFO] [1753420624.762980654] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.82700002 4.61899996 3.09100008]
[INFO] [1753420624.767681971] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420624.768624749] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420624.769434244] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420624.770225851] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420624.772129616] [solver_node]: 求解器返回结果: [((2.133702843550007, 2.135702843550007), (4.774164530155643, 4.7761645301556435), -1.331797922415932), ((2.079916078408289, 2.081916078408289), (4.734435573812269, 4.73643557381227), -1.9035834827292266), ((7.8622971564499915, 7.864297156449992), (3.2238354698443565, 3.2258354698443563), 1.8097947311738611), ((7.916083921591711, 7.918083921591712), (3.2635644261877306, 3.2655644261877304), 1.238009170860566), ((8.100651792248321, 8.10265179224832), (3.7993721633079436, 3.8013721633079434), 2.09818868184417), ((1.8953482077516792, 1.897348207751679), (4.198627836692056, 4.200627836692057), -1.0434039717456234), ((8.009100915409103, 8.011100915409102), (3.1433946661001517, 3.1453946661001515), 1.1254712623963035), ((1.9868990845908967, 1.9888990845908965), (4.8546053338998485, 4.856605333899849), -2.0161213911934897), ((4.198627836692055, 4.200627836692056), (6.102651792248321, 6.104651792248322), -2.6142002985405197), ((5.7973721633079425, 5.799372163307943), (1.8953482077516788, 1.8973482077516786), 0.5273923550492733), ((6.852605333899848, 6.8546053338998485), (6.011100915409103, 6.013100915409104), 2.6962675891912), ((3.1433946661001517, 3.1453946661001515), (1.9868990845908967, 1.9888990845908965), -0.4453250643985931)]
[INFO] [1753420624.856694758] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.8270000219345093, 4.61899995803833, 3.0910000801086426])
[INFO] [1753420624.858161584] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.82700002 4.61899996 3.09100008]
[INFO] [1753420624.861737941] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420624.862614093] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420624.863418788] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420624.864152505] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420624.865034162] [solver_node]: 求解器返回结果: [((2.133702843550007, 2.135702843550007), (4.774164530155643, 4.7761645301556435), -1.331797922415932), ((2.079916078408289, 2.081916078408289), (4.734435573812269, 4.73643557381227), -1.9035834827292266), ((7.8622971564499915, 7.864297156449992), (3.2238354698443565, 3.2258354698443563), 1.8097947311738611), ((7.916083921591711, 7.918083921591712), (3.2635644261877306, 3.2655644261877304), 1.238009170860566), ((8.100651792248321, 8.10265179224832), (3.7993721633079436, 3.8013721633079434), 2.09818868184417), ((1.8953482077516792, 1.897348207751679), (4.198627836692056, 4.200627836692057), -1.0434039717456234), ((8.009100915409103, 8.011100915409102), (3.1433946661001517, 3.1453946661001515), 1.1254712623963035), ((1.9868990845908967, 1.9888990845908965), (4.8546053338998485, 4.856605333899849), -2.0161213911934897), ((4.198627836692055, 4.200627836692056), (6.102651792248321, 6.104651792248322), -2.6142002985405197), ((5.7973721633079425, 5.799372163307943), (1.8953482077516788, 1.8973482077516786), 0.5273923550492733), ((6.852605333899848, 6.8546053338998485), (6.011100915409103, 6.013100915409104), 2.6962675891912), ((3.1433946661001517, 3.1453946661001515), (1.9868990845908967, 1.9888990845908965), -0.4453250643985931)]
[INFO] [1753420624.956943767] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.8079999685287476, 4.61899995803833, 3.0910000801086426])
[INFO] [1753420624.961360116] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.80799997 4.61899996 3.09100008]
[INFO] [1753420624.966100762] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420624.967341501] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420624.968946474] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420624.970388243] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420624.971568468] [solver_node]: 求解器返回结果: [((2.1152428393202434, 2.117242839320243), (4.774164530155643, 4.7761645301556435), -1.331797922415932), ((2.0619584760095013, 2.063958476009501), (4.734435573812269, 4.73643557381227), -1.9035834827292266), ((7.880757160679756, 7.882757160679756), (3.2238354698443565, 3.2258354698443563), 1.8097947311738611), ((7.934041523990498, 7.9360415239904984), (3.2635644261877306, 3.2655644261877304), 1.238009170860566), ((8.112445777048649, 8.114445777048648), (3.788337432219318, 3.7903374322193177), 2.0939842790358196), ((1.8835542229513504, 1.8855542229513502), (4.209662567780681, 4.211662567780682), -1.0476083745539735), ((8.023337353595169, 8.025337353595168), (3.14728668212581, 3.1492866821258096), 1.1286042643815213), ((1.9726626464048307, 1.9746626464048305), (4.85071331787419, 4.852713317874191), -2.012988389208272), ((4.20966256778068, 4.211662567780681), (6.1144457770486484, 6.116445777048649), -2.6184047013488696), ((5.786337432219318, 5.788337432219318), (1.8835542229513516, 1.8855542229513513), 0.5231879522409233), ((6.84871331787419, 6.850713317874191), (6.025337353595169, 6.027337353595169), 2.699400591176418), ((3.14728668212581, 3.1492866821258096), (1.9726626464048307, 1.9746626464048305), -0.44219206241337505)]
[INFO] [1753420625.055882915] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.8079999685287476, 4.61899995803833, 3.0910000801086426])
[INFO] [1753420625.059169600] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.80799997 4.61899996 3.09100008]
[INFO] [1753420625.067651280] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420625.070307835] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420625.072444855] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420625.073318096] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420625.075493325] [solver_node]: 求解器返回结果: [((2.1152428393202434, 2.117242839320243), (4.774164530155643, 4.7761645301556435), -1.331797922415932), ((2.0619584760095013, 2.063958476009501), (4.734435573812269, 4.73643557381227), -1.9035834827292266), ((7.880757160679756, 7.882757160679756), (3.2238354698443565, 3.2258354698443563), 1.8097947311738611), ((7.934041523990498, 7.9360415239904984), (3.2635644261877306, 3.2655644261877304), 1.238009170860566), ((8.112445777048649, 8.114445777048648), (3.788337432219318, 3.7903374322193177), 2.0939842790358196), ((1.8835542229513504, 1.8855542229513502), (4.209662567780681, 4.211662567780682), -1.0476083745539735), ((8.023337353595169, 8.025337353595168), (3.14728668212581, 3.1492866821258096), 1.1286042643815213), ((1.9726626464048307, 1.9746626464048305), (4.85071331787419, 4.852713317874191), -2.012988389208272), ((4.20966256778068, 4.211662567780681), (6.1144457770486484, 6.116445777048649), -2.6184047013488696), ((5.786337432219318, 5.788337432219318), (1.8835542229513516, 1.8855542229513513), 0.5231879522409233), ((6.84871331787419, 6.850713317874191), (6.025337353595169, 6.027337353595169), 2.699400591176418), ((3.14728668212581, 3.1492866821258096), (1.9726626464048307, 1.9746626464048305), -0.44219206241337505)]
[INFO] [1753420625.158427189] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.8270000219345093, 4.61899995803833, 3.0910000801086426])
[INFO] [1753420625.164363229] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.82700002 4.61899996 3.09100008]
[INFO] [1753420625.168881085] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420625.170589869] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420625.172373600] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420625.175147694] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420625.176048935] [solver_node]: 求解器返回结果: [((2.133702843550007, 2.135702843550007), (4.774164530155643, 4.7761645301556435), -1.331797922415932), ((2.079916078408289, 2.081916078408289), (4.734435573812269, 4.73643557381227), -1.9035834827292266), ((7.8622971564499915, 7.864297156449992), (3.2238354698443565, 3.2258354698443563), 1.8097947311738611), ((7.916083921591711, 7.918083921591712), (3.2635644261877306, 3.2655644261877304), 1.238009170860566), ((8.100651792248321, 8.10265179224832), (3.7993721633079436, 3.8013721633079434), 2.09818868184417), ((1.8953482077516792, 1.897348207751679), (4.198627836692056, 4.200627836692057), -1.0434039717456234), ((8.009100915409103, 8.011100915409102), (3.1433946661001517, 3.1453946661001515), 1.1254712623963035), ((1.9868990845908967, 1.9888990845908965), (4.8546053338998485, 4.856605333899849), -2.0161213911934897), ((4.198627836692055, 4.200627836692056), (6.102651792248321, 6.104651792248322), -2.6142002985405197), ((5.7973721633079425, 5.799372163307943), (1.8953482077516788, 1.8973482077516786), 0.5273923550492733), ((6.852605333899848, 6.8546053338998485), (6.011100915409103, 6.013100915409104), 2.6962675891912), ((3.1433946661001517, 3.1453946661001515), (1.9868990845908967, 1.9888990845908965), -0.4453250643985931)]
[INFO] [1753420625.258316029] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.8270000219345093, 4.61899995803833, 3.0910000801086426])
[INFO] [1753420625.260258228] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.82700002 4.61899996 3.09100008]
[INFO] [1753420625.263827129] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420625.264639439] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420625.265447846] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420625.266168859] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420625.267053684] [solver_node]: 求解器返回结果: [((2.133702843550007, 2.135702843550007), (4.774164530155643, 4.7761645301556435), -1.331797922415932), ((2.079916078408289, 2.081916078408289), (4.734435573812269, 4.73643557381227), -1.9035834827292266), ((7.8622971564499915, 7.864297156449992), (3.2238354698443565, 3.2258354698443563), 1.8097947311738611), ((7.916083921591711, 7.918083921591712), (3.2635644261877306, 3.2655644261877304), 1.238009170860566), ((8.100651792248321, 8.10265179224832), (3.7993721633079436, 3.8013721633079434), 2.09818868184417), ((1.8953482077516792, 1.897348207751679), (4.198627836692056, 4.200627836692057), -1.0434039717456234), ((8.009100915409103, 8.011100915409102), (3.1433946661001517, 3.1453946661001515), 1.1254712623963035), ((1.9868990845908967, 1.9888990845908965), (4.8546053338998485, 4.856605333899849), -2.0161213911934897), ((4.198627836692055, 4.200627836692056), (6.102651792248321, 6.104651792248322), -2.6142002985405197), ((5.7973721633079425, 5.799372163307943), (1.8953482077516788, 1.8973482077516786), 0.5273923550492733), ((6.852605333899848, 6.8546053338998485), (6.011100915409103, 6.013100915409104), 2.6962675891912), ((3.1433946661001517, 3.1453946661001515), (1.9868990845908967, 1.9888990845908965), -0.4453250643985931)]
[INFO] [1753420625.355523640] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.8270000219345093, 4.61899995803833, 3.0910000801086426])
[INFO] [1753420625.356986914] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.82700002 4.61899996 3.09100008]
[INFO] [1753420625.360421187] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420625.362818246] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420625.363717216] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420625.364449461] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420625.365244811] [solver_node]: 求解器返回结果: [((2.133702843550007, 2.135702843550007), (4.774164530155643, 4.7761645301556435), -1.331797922415932), ((2.079916078408289, 2.081916078408289), (4.734435573812269, 4.73643557381227), -1.9035834827292266), ((7.8622971564499915, 7.864297156449992), (3.2238354698443565, 3.2258354698443563), 1.8097947311738611), ((7.916083921591711, 7.918083921591712), (3.2635644261877306, 3.2655644261877304), 1.238009170860566), ((8.100651792248321, 8.10265179224832), (3.7993721633079436, 3.8013721633079434), 2.09818868184417), ((1.8953482077516792, 1.897348207751679), (4.198627836692056, 4.200627836692057), -1.0434039717456234), ((8.009100915409103, 8.011100915409102), (3.1433946661001517, 3.1453946661001515), 1.1254712623963035), ((1.9868990845908967, 1.9888990845908965), (4.8546053338998485, 4.856605333899849), -2.0161213911934897), ((4.198627836692055, 4.200627836692056), (6.102651792248321, 6.104651792248322), -2.6142002985405197), ((5.7973721633079425, 5.799372163307943), (1.8953482077516788, 1.8973482077516786), 0.5273923550492733), ((6.852605333899848, 6.8546053338998485), (6.011100915409103, 6.013100915409104), 2.6962675891912), ((3.1433946661001517, 3.1453946661001515), (1.9868990845908967, 1.9888990845908965), -0.4453250643985931)]
[INFO] [1753420625.454897681] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.8270000219345093, 4.618000030517578, 3.0910000801086426])
[INFO] [1753420625.456351962] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.82700002 4.61800003 3.09100008]
[INFO] [1753420625.459837117] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420625.460633235] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420625.461530861] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420625.462495944] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420625.463661385] [solver_node]: 求解器返回结果: [((2.133921007181486, 2.135921007181486), (4.773742517029061, 4.7757425170290615), -1.3322113866225518), ((2.080201917392625, 2.082201917392625), (4.734079396363275, 4.736079396363276), -1.9031812626688662), ((7.862078992818513, 7.864078992818514), (3.224257482970939, 3.2262574829709387), 1.809381266967241), ((7.915798082607374, 7.917798082607375), (3.263920603636724, 3.2659206036367237), 1.2384113909209267), ((8.100651792248321, 8.10265179224832), (3.800236223064028, 3.802236223064028), 2.09818868184417), ((1.8953482077516792, 1.897348207751679), (4.197763776935973, 4.199763776935973), -1.0434039717456234), ((8.009174821010358, 8.011174821010357), (3.1432966338775996, 3.1452966338775994), 1.125392667824876), ((1.986825178989642, 1.9888251789896418), (4.8547033661224, 4.8567033661224), -2.016199985764917), ((4.197763776935972, 4.199763776935972), (6.102651792248321, 6.104651792248322), -2.6142002985405197), ((5.798236223064026, 5.800236223064027), (1.8953482077516788, 1.8973482077516786), 0.5273923550492733), ((6.852703366122399, 6.8547033661224), (6.011174821010357, 6.013174821010358), 2.6961889946197726), ((3.1432966338775996, 3.1452966338775994), (1.9868251789896425, 1.9888251789896423), -0.4454036589700206)]
[INFO] [1753420625.557521606] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.8270000219345093, 4.618000030517578, 3.0910000801086426])
[INFO] [1753420625.559840135] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.82700002 4.61800003 3.09100008]
[INFO] [1753420625.565587530] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420625.566513540] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420625.568158546] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420625.569383509] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420625.570333776] [solver_node]: 求解器返回结果: [((2.133921007181486, 2.135921007181486), (4.773742517029061, 4.7757425170290615), -1.3322113866225518), ((2.080201917392625, 2.082201917392625), (4.734079396363275, 4.736079396363276), -1.9031812626688662), ((7.862078992818513, 7.864078992818514), (3.224257482970939, 3.2262574829709387), 1.809381266967241), ((7.915798082607374, 7.917798082607375), (3.263920603636724, 3.2659206036367237), 1.2384113909209267), ((8.100651792248321, 8.10265179224832), (3.800236223064028, 3.802236223064028), 2.09818868184417), ((1.8953482077516792, 1.897348207751679), (4.197763776935973, 4.199763776935973), -1.0434039717456234), ((8.009174821010358, 8.011174821010357), (3.1432966338775996, 3.1452966338775994), 1.125392667824876), ((1.986825178989642, 1.9888251789896418), (4.8547033661224, 4.8567033661224), -2.016199985764917), ((4.197763776935972, 4.199763776935972), (6.102651792248321, 6.104651792248322), -2.6142002985405197), ((5.798236223064026, 5.800236223064027), (1.8953482077516788, 1.8973482077516786), 0.5273923550492733), ((6.852703366122399, 6.8547033661224), (6.011174821010357, 6.013174821010358), 2.6961889946197726), ((3.1432966338775996, 3.1452966338775994), (1.9868251789896425, 1.9888251789896423), -0.4454036589700206)]
[INFO] [1753420625.655674652] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.8270000219345093, 4.618000030517578, 3.0910000801086426])
[INFO] [1753420625.658063167] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.82700002 4.61800003 3.09100008]
[INFO] [1753420625.661834026] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420625.662738884] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420625.663470072] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420625.664175084] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420625.664951394] [solver_node]: 求解器返回结果: [((2.133921007181486, 2.135921007181486), (4.773742517029061, 4.7757425170290615), -1.3322113866225518), ((2.080201917392625, 2.082201917392625), (4.734079396363275, 4.736079396363276), -1.9031812626688662), ((7.862078992818513, 7.864078992818514), (3.224257482970939, 3.2262574829709387), 1.809381266967241), ((7.915798082607374, 7.917798082607375), (3.263920603636724, 3.2659206036367237), 1.2384113909209267), ((8.100651792248321, 8.10265179224832), (3.800236223064028, 3.802236223064028), 2.09818868184417), ((1.8953482077516792, 1.897348207751679), (4.197763776935973, 4.199763776935973), -1.0434039717456234), ((8.009174821010358, 8.011174821010357), (3.1432966338775996, 3.1452966338775994), 1.125392667824876), ((1.986825178989642, 1.9888251789896418), (4.8547033661224, 4.8567033661224), -2.016199985764917), ((4.197763776935972, 4.199763776935972), (6.102651792248321, 6.104651792248322), -2.6142002985405197), ((5.798236223064026, 5.800236223064027), (1.8953482077516788, 1.8973482077516786), 0.5273923550492733), ((6.852703366122399, 6.8547033661224), (6.011174821010357, 6.013174821010358), 2.6961889946197726), ((3.1432966338775996, 3.1452966338775994), (1.9868251789896425, 1.9888251789896423), -0.4454036589700206)]
[INFO] [1753420625.757154928] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.8270000219345093, 4.617000102996826, 3.0910000801086426])
[INFO] [1753420625.758757118] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.82700002 4.6170001  3.09100008]
[INFO] [1753420625.762132541] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420625.763120953] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420625.763913167] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420625.764619267] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420625.765410362] [solver_node]: 求解器返回结果: [((2.1341391567365453, 2.136139156736545), (4.773320376129461, 4.775320376129462), -1.3326255175181467), ((2.0804878907137287, 2.0824878907137285), (4.733723160438722, 4.735723160438723), -1.9027783786139523), ((7.861860843263454, 7.8638608432634545), (3.2246796238705384, 3.226679623870538), 1.8089671360716462), ((7.91551210928627, 7.917512109286271), (3.2642768395612776, 3.2662768395612773), 1.2388142749758406), ((8.100651792248321, 8.10265179224832), (3.80110028282011, 3.8031002828201097), 2.09818868184417), ((1.8953482077516792, 1.897348207751679), (4.19689971717989, 4.1988997171798905), -1.0434039717456234), ((8.00924876323899, 8.011248763238989), (3.143198549933902, 3.1451985499339017), 1.1253140473667385), ((1.9867512367610094, 1.9887512367610092), (4.854801450066097, 4.856801450066098), -2.0162786062230547), ((4.196899717179889, 4.19889971717989), (6.102651792248321, 6.104651792248322), -2.6142002985405197), ((5.799100282820109, 5.8011002828201095), (1.8953482077516788, 1.8973482077516786), 0.5273923550492733), ((6.852801450066097, 6.854801450066097), (6.0112487632389895, 6.01324876323899), 2.696110374161635), ((3.143198549933902, 3.1451985499339017), (1.9867512367610098, 1.9887512367610096), -0.44548227942815816)]
[INFO] [1753420625.855631536] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.0800000429153442, 4.616000175476074, 3.0910000801086426])
[INFO] [1753420625.857098553] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.08000004 4.61600018 3.09100008]
[INFO] [1753420625.860633789] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420625.861439284] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420625.862148936] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420625.862892477] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420625.863634578] [solver_node]: 求解器返回结果: [((1.408370574304859, 1.4103705743048587), (4.7728981072607555, 4.774898107260756), -1.3330403179927277), ((8.587629425695141, 8.58962942569514), (3.225101892739245, 3.227101892739245), 1.8085523355970654), ((8.634116928749007, 8.636116928749006), (3.397794599575944, 3.399794599575944), 1.9177576383303878), ((1.3618830712509917, 1.3638830712509915), (4.600205400424056, 4.602205400424056), -1.2238350152594053), ((4.600205400424055, 4.602205400424055), (6.636116928749008, 6.6381169287490085), -2.7946313420543016), ((5.395794599575944, 5.397794599575945), (1.3618830712509922, 1.363883071250992), 0.34696131153549137), ((6.7176682972888555, 6.719668297288856), (6.61626535356272, 6.6182653535627205), 2.826015766801812), ((3.278331702711144, 3.280331702711144), (1.3817346464372804, 1.3837346464372802), -0.315576886787981)]
[INFO] [1753420625.957477998] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.0800000429153442, 4.616000175476074, 3.0910000801086426])
[INFO] [1753420625.960825261] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.08000004 4.61600018 3.09100008]
[INFO] [1753420625.967888693] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420625.972217071] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420625.974059235] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420625.975690641] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420625.977525445] [solver_node]: 求解器返回结果: [((1.408370574304859, 1.4103705743048587), (4.7728981072607555, 4.774898107260756), -1.3330403179927277), ((8.587629425695141, 8.58962942569514), (3.225101892739245, 3.227101892739245), 1.8085523355970654), ((8.634116928749007, 8.636116928749006), (3.397794599575944, 3.399794599575944), 1.9177576383303878), ((1.3618830712509917, 1.3638830712509915), (4.600205400424056, 4.602205400424056), -1.2238350152594053), ((4.600205400424055, 4.602205400424055), (6.636116928749008, 6.6381169287490085), -2.7946313420543016), ((5.395794599575944, 5.397794599575945), (1.3618830712509922, 1.363883071250992), 0.34696131153549137), ((6.7176682972888555, 6.719668297288856), (6.61626535356272, 6.6182653535627205), 2.826015766801812), ((3.278331702711144, 3.280331702711144), (1.3817346464372804, 1.3837346464372802), -0.315576886787981)]
[INFO] [1753420626.055696615] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.0800000429153442, 4.616000175476074, 3.1519999504089355])
[INFO] [1753420626.058389747] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.08000004 4.61600018 3.15199995]
[INFO] [1753420626.061662831] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420626.062500967] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420626.063228508] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420626.063929648] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420626.064672997] [solver_node]: 求解器返回结果: [((1.3995109932483367, 1.4015109932483365), (4.7395113340253126, 4.741511334025313), -1.3088671038005453), ((8.596489006751664, 8.598489006751663), (3.2584886659746872, 3.260488665974687), 1.832725549789248), ((8.631295020833212, 8.633295020833211), (3.387447506408012, 3.3894475064080116), 1.9120815462572287), ((1.3647049791667878, 1.3667049791667876), (4.610552493591987, 4.612552493591988), -1.2295111073325644), ((4.610552493591987, 4.612552493591988), (6.633295020833212, 6.635295020833213), -2.800307434127461), ((5.385447506408012, 5.387447506408012), (1.3647049791667878, 1.3667049791667876), 0.34128521946233215), ((6.659680614508695, 6.661680614508696), (6.61626535356272, 6.6182653535627205), 2.826015766801812), ((3.3363193854913034, 3.338319385491303), (1.3817346464372804, 1.3837346464372802), -0.315576886787981)]
[INFO] [1753420626.157096282] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.0800000429153442, 4.616000175476074, 3.1519999504089355])
[INFO] [1753420626.158624997] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.08000004 4.61600018 3.15199995]
[INFO] [1753420626.161902721] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420626.162778074] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420626.163477358] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420626.164166433] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420626.164914679] [solver_node]: 求解器返回结果: [((1.3995109932483367, 1.4015109932483365), (4.7395113340253126, 4.741511334025313), -1.3088671038005453), ((8.596489006751664, 8.598489006751663), (3.2584886659746872, 3.260488665974687), 1.832725549789248), ((8.631295020833212, 8.633295020833211), (3.387447506408012, 3.3894475064080116), 1.9120815462572287), ((1.3647049791667878, 1.3667049791667876), (4.610552493591987, 4.612552493591988), -1.2295111073325644), ((4.610552493591987, 4.612552493591988), (6.633295020833212, 6.635295020833213), -2.800307434127461), ((5.385447506408012, 5.387447506408012), (1.3647049791667878, 1.3667049791667876), 0.34128521946233215), ((6.659680614508695, 6.661680614508696), (6.61626535356272, 6.6182653535627205), 2.826015766801812), ((3.3363193854913034, 3.338319385491303), (1.3817346464372804, 1.3837346464372802), -0.315576886787981)]
[INFO] [1753420626.255438422] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.0800000429153442, 4.616000175476074, 3.1519999504089355])
[INFO] [1753420626.257022595] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.08000004 4.61600018 3.15199995]
[INFO] [1753420626.260396706] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420626.261219225] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420626.261987215] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420626.262724740] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420626.263477977] [solver_node]: 求解器返回结果: [((1.3995109932483367, 1.4015109932483365), (4.7395113340253126, 4.741511334025313), -1.3088671038005453), ((8.596489006751664, 8.598489006751663), (3.2584886659746872, 3.260488665974687), 1.832725549789248), ((8.631295020833212, 8.633295020833211), (3.387447506408012, 3.3894475064080116), 1.9120815462572287), ((1.3647049791667878, 1.3667049791667876), (4.610552493591987, 4.612552493591988), -1.2295111073325644), ((4.610552493591987, 4.612552493591988), (6.633295020833212, 6.635295020833213), -2.800307434127461), ((5.385447506408012, 5.387447506408012), (1.3647049791667878, 1.3667049791667876), 0.34128521946233215), ((6.659680614508695, 6.661680614508696), (6.61626535356272, 6.6182653535627205), 2.826015766801812), ((3.3363193854913034, 3.338319385491303), (1.3817346464372804, 1.3837346464372802), -0.315576886787981)]
[INFO] [1753420626.355827564] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.0820000171661377, 4.614999771118164, 3.1519999504089355])
[INFO] [1753420626.357882726] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.08200002 4.61499977 3.15199995]
[INFO] [1753420626.361639984] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420626.362551434] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420626.363334176] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420626.364062869] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420626.364854155] [solver_node]: 求解器返回结果: [((1.4015882953668781, 1.403588295366878), (4.739090249886017, 4.7410902498860175), -1.3092463925919517), ((8.594411704633123, 8.596411704633121), (3.258909750113983, 3.2609097501139828), 1.8323462609978414), ((8.62966526209782, 8.631665262097819), (3.3893238326858763, 3.391323832685876), 1.9125971586338226), ((1.3663347379021804, 1.3683347379021802), (4.608676167314123, 4.610676167314124), -1.2289954949559705), ((4.608676167314123, 4.610676167314124), (6.63166526209782, 6.6336652620978205), -2.799791821750867), ((5.387323832685875, 5.389323832685876), (1.3663347379021804, 1.3683347379021802), 0.3418008318389262), ((6.660041929994712, 6.662041929994713), (6.614553083158241, 6.616553083158242), 2.825590446751844), ((3.335958070005287, 3.337958070005287), (1.3834469168417587, 1.3854469168417585), -0.3160022068379493)]
[INFO] [1753420626.454697303] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.0820000171661377, 4.614999771118164, 3.1519999504089355])
[INFO] [1753420626.456233859] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.08200002 4.61499977 3.15199995]
[INFO] [1753420626.459668580] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420626.460516156] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420626.461250672] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420626.462090376] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420626.462886623] [solver_node]: 求解器返回结果: [((1.4015882953668781, 1.403588295366878), (4.739090249886017, 4.7410902498860175), -1.3092463925919517), ((8.594411704633123, 8.596411704633121), (3.258909750113983, 3.2609097501139828), 1.8323462609978414), ((8.62966526209782, 8.631665262097819), (3.3893238326858763, 3.391323832685876), 1.9125971586338226), ((1.3663347379021804, 1.3683347379021802), (4.608676167314123, 4.610676167314124), -1.2289954949559705), ((4.608676167314123, 4.610676167314124), (6.63166526209782, 6.6336652620978205), -2.799791821750867), ((5.387323832685875, 5.389323832685876), (1.3663347379021804, 1.3683347379021802), 0.3418008318389262), ((6.660041929994712, 6.662041929994713), (6.614553083158241, 6.616553083158242), 2.825590446751844), ((3.335958070005287, 3.337958070005287), (1.3834469168417587, 1.3854469168417585), -0.3160022068379493)]
[INFO] [1753420626.556083242] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.0820000171661377, 4.614999771118164, 3.046999931335449])
[INFO] [1753420626.558291048] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.08200002 4.61499977 3.04699993]
[INFO] [1753420626.562210295] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420626.563134545] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420626.563877702] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420626.564622971] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420626.565428562] [solver_node]: 求解器返回结果: [((1.4168417333059904, 1.4188417333059902), (4.796713907593731, 4.798713907593732), -1.3524524704254208), ((1.3849181059092934, 1.3869181059092932), (4.7591410551156, 4.7611410551156), -1.8834716753756933), ((8.57915826669401, 8.58115826669401), (3.2012860924062685, 3.2032860924062683), 1.7891401831643723), ((8.611081894090708, 8.613081894090707), (3.2388589448844, 3.2408589448844), 1.2581209782140994), ((8.634627521696936, 8.636627521696935), (3.4074806353365292, 3.409480635336529), 1.9224936550170724), ((1.3613724783030627, 1.3633724783030625), (4.5905193646634705, 4.592519364663471), -1.2190989985727207), ((8.612553083158241, 8.61455308315824), (3.2361568450253255, 3.2381568450253253), 1.2547941199569472), ((1.3834469168417587, 1.3854469168417585), (4.761843154974674, 4.7638431549746745), -1.8867985336328459), ((4.5905193646634705, 4.592519364663471), (6.636627521696937, 6.638627521696938), -2.7898953253676173), ((5.405480635336528, 5.407480635336529), (1.3613724783030627, 1.3633724783030625), 0.3516973282221758), ((6.759843154974673, 6.761843154974674), (6.614553083158241, 6.616553083158242), 2.825590446751844), ((3.236156845025326, 3.2381568450253257), (1.3834469168417587, 1.3854469168417585), -0.3160022068379493)]
[INFO] [1753420626.655446307] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.0820000171661377, 4.614999771118164, 3.046999931335449])
[INFO] [1753420626.658145103] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.08200002 4.61499977 3.04699993]
[INFO] [1753420626.662452553] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420626.663342274] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420626.664076215] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420626.664795755] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420626.665614978] [solver_node]: 求解器返回结果: [((1.4168417333059904, 1.4188417333059902), (4.796713907593731, 4.798713907593732), -1.3524524704254208), ((1.3849181059092934, 1.3869181059092932), (4.7591410551156, 4.7611410551156), -1.8834716753756933), ((8.57915826669401, 8.58115826669401), (3.2012860924062685, 3.2032860924062683), 1.7891401831643723), ((8.611081894090708, 8.613081894090707), (3.2388589448844, 3.2408589448844), 1.2581209782140994), ((8.634627521696936, 8.636627521696935), (3.4074806353365292, 3.409480635336529), 1.9224936550170724), ((1.3613724783030627, 1.3633724783030625), (4.5905193646634705, 4.592519364663471), -1.2190989985727207), ((8.612553083158241, 8.61455308315824), (3.2361568450253255, 3.2381568450253253), 1.2547941199569472), ((1.3834469168417587, 1.3854469168417585), (4.761843154974674, 4.7638431549746745), -1.8867985336328459), ((4.5905193646634705, 4.592519364663471), (6.636627521696937, 6.638627521696938), -2.7898953253676173), ((5.405480635336528, 5.407480635336529), (1.3613724783030627, 1.3633724783030625), 0.3516973282221758), ((6.759843154974673, 6.761843154974674), (6.614553083158241, 6.616553083158242), 2.825590446751844), ((3.236156845025326, 3.2381568450253257), (1.3834469168417587, 1.3854469168417585), -0.3160022068379493)]
[INFO] [1753420626.755251080] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.0820000171661377, 4.613999843597412, 3.046999931335449])
[INFO] [1753420626.756769459] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.08200002 4.61399984 3.04699993]
[INFO] [1753420626.760409914] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420626.762842591] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420626.764490702] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420626.765306949] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420626.766126460] [solver_node]: 求解器返回结果: [((1.416986446658605, 1.4189864466586048), (4.796289790957762, 4.798289790957763), -1.3529016171586017), ((1.3851105539623734, 1.3871105539623731), (4.7587881622889165, 4.760788162288917), -1.8830339032219747), ((8.579013553341396, 8.581013553341394), (3.201710209042237, 3.203710209042237), 1.7886910364311914), ((8.610889446037627, 8.612889446037626), (3.2392118377110832, 3.241211837711083), 1.258558750367818), ((8.634627521696936, 8.636627521696935), (3.408419356643655, 3.4104193566436547), 1.9224936550170724), ((1.3613724783030627, 1.3633724783030625), (4.589580643356345, 4.5915806433563455), -1.2190989985727207), ((8.612579654103092, 8.61457965410309), (3.2361079724927215, 3.2381079724927213), 1.2547343509859237), ((1.3834203458969072, 1.385420345896907), (4.761892027507279, 4.763892027507279), -1.8868583026038694), ((4.589580643356345, 4.5915806433563455), (6.636627521696937, 6.638627521696938), -2.7898953253676173), ((5.406419356643654, 5.4084193566436545), (1.3613724783030627, 1.3633724783030625), 0.3516973282221758), ((6.759892027507277, 6.761892027507278), (6.614579654103092, 6.616579654103092), 2.8255306777808205), ((3.236107972492722, 3.2381079724927218), (1.3834203458969072, 1.385420345896907), -0.3160619758089728)]
[INFO] [1753420626.857329966] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.9019999504089355, 4.613999843597412, 3.046999931335449])
[INFO] [1753420626.859268869] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.90199995 4.61399984 3.04699993]
[INFO] [1753420626.863117522] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420626.864017483] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420626.864790145] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420626.865542166] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420626.866307308] [solver_node]: 求解器返回结果: [((5.146664456618759, 5.14866445661876), (4.796289790957762, 4.798289790957763), -1.3529016171586017), ((5.020403810634962, 5.022403810634962), (4.7587881622889165, 4.760788162288917), -1.8830339032219747), ((4.8493355433812395, 4.85133554338124), (3.201710209042237, 3.203710209042237), 1.7886910364311914), ((4.975596189365037, 4.977596189365038), (3.2392118377110832, 3.241211837711083), 1.258558750367818)]
[INFO] [1753420626.955617385] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.9019999504089355, 4.613999843597412, 3.046999931335449])
[INFO] [1753420626.959360243] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.90199995 4.61399984 3.04699993]
[INFO] [1753420626.962880950] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420626.963710094] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420626.964423970] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420626.965120598] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420626.965845994] [solver_node]: 求解器返回结果: [((5.146664456618759, 5.14866445661876), (4.796289790957762, 4.798289790957763), -1.3529016171586017), ((5.020403810634962, 5.022403810634962), (4.7587881622889165, 4.760788162288917), -1.8830339032219747), ((4.8493355433812395, 4.85133554338124), (3.201710209042237, 3.203710209042237), 1.7886910364311914), ((4.975596189365037, 4.977596189365038), (3.2392118377110832, 3.241211837711083), 1.258558750367818)]
[INFO] [1753420627.061754594] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.9019999504089355, 4.61299991607666, 3.046999931335449])
[INFO] [1753420627.064335243] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.90199995 4.61299992 3.04699993]
[INFO] [1753420627.067544070] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420627.068344060] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420627.069060945] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420627.069775717] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420627.070490521] [solver_node]: 求解器返回结果: [((5.147180356307098, 5.149180356307099), (4.795865534657594, 4.7978655346575945), -1.3533515979276647), ((5.021110698018312, 5.0231106980183124), (4.758435222085399, 4.7604352220854), -1.882595299773783), ((4.8488196436929005, 4.850819643692901), (3.2021344653424055, 3.2041344653424053), 1.7882410556621278), ((4.974889301981687, 4.9768893019816876), (3.2395647779146, 3.2415647779145997), 1.2589973538160095)]
[INFO] [1753420627.156010796] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.9019999504089355, 4.61299991607666, 3.046999931335449])
[INFO] [1753420627.157445332] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.90199995 4.61299992 3.04699993]
[INFO] [1753420627.160793843] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420627.161647819] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420627.163787367] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420627.165299186] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420627.166068040] [solver_node]: 求解器返回结果: [((5.147180356307098, 5.149180356307099), (4.795865534657594, 4.7978655346575945), -1.3533515979276647), ((5.021110698018312, 5.0231106980183124), (4.758435222085399, 4.7604352220854), -1.882595299773783), ((4.8488196436929005, 4.850819643692901), (3.2021344653424055, 3.2041344653424053), 1.7882410556621278), ((4.974889301981687, 4.9768893019816876), (3.2395647779146, 3.2415647779145997), 1.2589973538160095)]
[INFO] [1753420627.256809326] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.9019999504089355, 4.61299991607666, 3.046999931335449])
[INFO] [1753420627.258371418] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.90199995 4.61299992 3.04699993]
[INFO] [1753420627.261571925] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420627.262372427] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420627.263159522] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420627.263878614] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420627.264600906] [solver_node]: 求解器返回结果: [((5.147180356307098, 5.149180356307099), (4.795865534657594, 4.7978655346575945), -1.3533515979276647), ((5.021110698018312, 5.0231106980183124), (4.758435222085399, 4.7604352220854), -1.882595299773783), ((4.8488196436929005, 4.850819643692901), (3.2021344653424055, 3.2041344653424053), 1.7882410556621278), ((4.974889301981687, 4.9768893019816876), (3.2395647779146, 3.2415647779145997), 1.2589973538160095)]
[INFO] [1753420627.356533362] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.942999839782715, 4.61299991607666, 3.046999931335449])
[INFO] [1753420627.358003356] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.94299984 4.61299992 3.04699993]
[INFO] [1753420627.361168789] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420627.361986540] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420627.362746690] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420627.363475830] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420627.364241868] [solver_node]: 求解器返回结果: [((5.187214808616716, 5.1892148086167165), (4.795865534657594, 4.7978655346575945), -1.3533515979276647), ((5.060133659239424, 5.062133659239425), (4.758435222085399, 4.7604352220854), -1.882595299773783), ((4.808785191383282, 4.810785191383283), (3.2021344653424055, 3.2041344653424053), 1.7882410556621278), ((4.935866340760575, 4.937866340760576), (3.2395647779146, 3.2415647779145997), 1.2589973538160095)]
[INFO] [1753420627.456377754] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.942999839782715, 4.61299991607666, 3.046999931335449])
[INFO] [1753420627.457941862] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.94299984 4.61299992 3.04699993]
[INFO] [1753420627.461541484] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420627.462513287] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420627.463295165] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420627.464038994] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420627.464789447] [solver_node]: 求解器返回结果: [((5.187214808616716, 5.1892148086167165), (4.795865534657594, 4.7978655346575945), -1.3533515979276647), ((5.060133659239424, 5.062133659239425), (4.758435222085399, 4.7604352220854), -1.882595299773783), ((4.808785191383282, 4.810785191383283), (3.2021344653424055, 3.2041344653424053), 1.7882410556621278), ((4.935866340760575, 4.937866340760576), (3.2395647779146, 3.2415647779145997), 1.2589973538160095)]
[INFO] [1753420627.556955446] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.942999839782715, 4.61299991607666, 3.046999931335449])
[INFO] [1753420627.559002128] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.94299984 4.61299992 3.04699993]
[INFO] [1753420627.562654391] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420627.563546192] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420627.564501387] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420627.565243936] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420627.565989973] [solver_node]: 求解器返回结果: [((5.187214808616716, 5.1892148086167165), (4.795865534657594, 4.7978655346575945), -1.3533515979276647), ((5.060133659239424, 5.062133659239425), (4.758435222085399, 4.7604352220854), -1.882595299773783), ((4.808785191383282, 4.810785191383283), (3.2021344653424055, 3.2041344653424053), 1.7882410556621278), ((4.935866340760575, 4.937866340760576), (3.2395647779146, 3.2415647779145997), 1.2589973538160095)]
[INFO] [1753420627.657948126] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.942999839782715, 4.61299991607666, 2.9619998931884766])
[INFO] [1753420627.659571340] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.94299984 4.61299992 2.96199989]
[INFO] [1753420627.663047854] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420627.664022121] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420627.664853057] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420627.665663288] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420627.666449582] [solver_node]: 求解器返回结果: [((5.230960947601481, 5.232960947601482), (4.842946700372875, 4.8449467003728754), -1.3952021765316216), ((5.122232035860202, 5.124232035860203), (4.810189158664078, 4.812189158664078), -1.8417218392965822), ((4.765039052398517, 4.767039052398518), (3.1550532996271246, 3.1570532996271243), 1.7463904770581715), ((4.873767964139796, 4.875767964139797), (3.1878108413359216, 3.1898108413359214), 1.299870814293211)]
[INFO] [1753420627.755782572] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.942999839782715, 4.61299991607666, 2.9619998931884766])
[INFO] [1753420627.757351257] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.94299984 4.61299992 2.96199989]
[INFO] [1753420627.760794362] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420627.761669427] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420627.762432104] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420627.763246047] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420627.764018325] [solver_node]: 求解器返回结果: [((5.230960947601481, 5.232960947601482), (4.842946700372875, 4.8449467003728754), -1.3952021765316216), ((5.122232035860202, 5.124232035860203), (4.810189158664078, 4.812189158664078), -1.8417218392965822), ((4.765039052398517, 4.767039052398518), (3.1550532996271246, 3.1570532996271243), 1.7463904770581715), ((4.873767964139796, 4.875767964139797), (3.1878108413359216, 3.1898108413359214), 1.299870814293211)]
[INFO] [1753420627.855101285] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.942999839782715, 4.61299991607666, 2.9619998931884766])
[INFO] [1753420627.856634288] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.94299984 4.61299992 2.96199989]
[INFO] [1753420627.860151732] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420627.861064686] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420627.861845156] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420627.862640730] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420627.863776730] [solver_node]: 求解器返回结果: [((5.230960947601481, 5.232960947601482), (4.842946700372875, 4.8449467003728754), -1.3952021765316216), ((5.122232035860202, 5.124232035860203), (4.810189158664078, 4.812189158664078), -1.8417218392965822), ((4.765039052398517, 4.767039052398518), (3.1550532996271246, 3.1570532996271243), 1.7463904770581715), ((4.873767964139796, 4.875767964139797), (3.1878108413359216, 3.1898108413359214), 1.299870814293211)]
[INFO] [1753420627.957238893] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9619998931884766])
[INFO] [1753420627.959666962] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.96199989]
[INFO] [1753420627.963044081] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420627.963905034] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420627.964776290] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420627.965638491] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420627.967586066] [solver_node]: 求解器返回结果: [((5.21914585174911, 5.22114585174911), (4.842946700372875, 4.8449467003728754), -1.3952021765316216), ((5.1106701427938415, 5.112670142793842), (4.810189158664078, 4.812189158664078), -1.8417218392965822), ((4.776854148250888, 4.778854148250889), (3.1550532996271246, 3.1570532996271243), 1.7463904770581715), ((4.885329857206157, 4.887329857206158), (3.1878108413359216, 3.1898108413359214), 1.299870814293211)]
[INFO] [1753420628.055984118] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9619998931884766])
[INFO] [1753420628.057620452] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.96199989]
[INFO] [1753420628.064578569] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420628.065570405] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420628.066333787] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420628.067102032] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420628.067867686] [solver_node]: 求解器返回结果: [((5.21914585174911, 5.22114585174911), (4.842946700372875, 4.8449467003728754), -1.3952021765316216), ((5.1106701427938415, 5.112670142793842), (4.810189158664078, 4.812189158664078), -1.8417218392965822), ((4.776854148250888, 4.778854148250889), (3.1550532996271246, 3.1570532996271243), 1.7463904770581715), ((4.885329857206157, 4.887329857206158), (3.1878108413359216, 3.1898108413359214), 1.299870814293211)]
[INFO] [1753420628.155483444] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420628.157094498] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420628.160654727] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420628.161561312] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420628.162359863] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420628.163190606] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420628.164170218] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420628.257004524] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420628.258467029] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420628.262440102] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420628.263312414] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420628.264005586] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420628.264681797] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420628.265418362] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420628.355808727] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420628.357832080] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420628.361154254] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420628.361978885] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420628.362742907] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420628.363469583] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420628.364214597] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420628.458243048] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420628.459766323] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420628.462972590] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420628.463778661] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420628.464499705] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420628.465209645] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420628.465939074] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420628.555534504] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420628.557254489] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420628.560447059] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420628.561258218] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420628.561960158] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420628.562650801] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420628.563632077] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420628.654815744] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420628.656297866] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420628.659817358] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420628.660659782] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420628.661347513] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420628.662035341] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420628.662792482] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420628.755646372] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420628.757494809] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420628.763498659] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420628.764351195] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420628.765057551] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420628.765744322] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420628.766470455] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420628.855053792] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420628.856489033] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420628.859597505] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420628.860546428] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420628.861422324] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420628.862156201] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420628.862913215] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420628.955795778] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420628.957371726] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420628.960779983] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420628.962051571] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420628.962917003] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420628.964399861] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420628.965828510] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420629.055638122] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420629.057258936] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420629.060558805] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420629.061402573] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420629.062150370] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420629.062906008] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420629.063655277] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420629.155879454] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.943000078201294])
[INFO] [1753420629.157611951] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94300008]
[INFO] [1753420629.164168073] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420629.165054722] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420629.165804119] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420629.166528108] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420629.167311490] [solver_node]: 求解器返回结果: [((5.2287214302166936, 5.230721430216694), (4.853493282136937, 4.855493282136938), -1.4057664001626797), ((5.12499854642345, 5.126998546423451), (4.822014471471633, 4.824014471471633), -1.831378800253697), ((4.767278569783304, 4.769278569783305), (3.1445067178630617, 3.1465067178630615), 1.7358262534271127), ((4.8710014535765485, 4.873001453576549), (3.175985528528367, 3.177985528528367), 1.3102138533360954)]
[INFO] [1753420629.255525922] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.943000078201294])
[INFO] [1753420629.257190545] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94300008]
[INFO] [1753420629.260665427] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420629.261507307] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420629.262234463] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420629.262962964] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420629.263685448] [solver_node]: 求解器返回结果: [((5.2287214302166936, 5.230721430216694), (4.853493282136937, 4.855493282136938), -1.4057664001626797), ((5.12499854642345, 5.126998546423451), (4.822014471471633, 4.824014471471633), -1.831378800253697), ((4.767278569783304, 4.769278569783305), (3.1445067178630617, 3.1465067178630615), 1.7358262534271127), ((4.8710014535765485, 4.873001453576549), (3.175985528528367, 3.177985528528367), 1.3102138533360954)]
[INFO] [1753420629.356234755] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.943000078201294])
[INFO] [1753420629.361571226] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94300008]
[INFO] [1753420629.365273987] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420629.366125531] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420629.366905105] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420629.367627237] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420629.368354458] [solver_node]: 求解器返回结果: [((5.2287214302166936, 5.230721430216694), (4.853493282136937, 4.855493282136938), -1.4057664001626797), ((5.12499854642345, 5.126998546423451), (4.822014471471633, 4.824014471471633), -1.831378800253697), ((4.767278569783304, 4.769278569783305), (3.1445067178630617, 3.1465067178630615), 1.7358262534271127), ((4.8710014535765485, 4.873001453576549), (3.175985528528367, 3.177985528528367), 1.3102138533360954)]
[INFO] [1753420629.455228276] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.943000078201294])
[INFO] [1753420629.456809472] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94300008]
[INFO] [1753420629.460157663] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420629.461013783] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420629.461746828] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420629.462478305] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420629.463284600] [solver_node]: 求解器返回结果: [((5.2287214302166936, 5.230721430216694), (4.853493282136937, 4.855493282136938), -1.4057664001626797), ((5.12499854642345, 5.126998546423451), (4.822014471471633, 4.824014471471633), -1.831378800253697), ((4.767278569783304, 4.769278569783305), (3.1445067178630617, 3.1465067178630615), 1.7358262534271127), ((4.8710014535765485, 4.873001453576549), (3.175985528528367, 3.177985528528367), 1.3102138533360954)]
[INFO] [1753420629.555264834] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.943000078201294])
[INFO] [1753420629.556724875] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94300008]
[INFO] [1753420629.559912229] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420629.560716412] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420629.561436753] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420629.562179718] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420629.562965916] [solver_node]: 求解器返回结果: [((5.2287214302166936, 5.230721430216694), (4.853493282136937, 4.855493282136938), -1.4057664001626797), ((5.12499854642345, 5.126998546423451), (4.822014471471633, 4.824014471471633), -1.831378800253697), ((4.767278569783304, 4.769278569783305), (3.1445067178630617, 3.1465067178630615), 1.7358262534271127), ((4.8710014535765485, 4.873001453576549), (3.175985528528367, 3.177985528528367), 1.3102138533360954)]
[INFO] [1753420629.656612885] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947999954223633])
[INFO] [1753420629.661875786] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94799995]
[INFO] [1753420629.667935318] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420629.668862960] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420629.669600069] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420629.670323769] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420629.671087695] [solver_node]: 求解器返回结果: [((5.226210627014707, 5.2282106270147075), (4.850717955739736, 4.852717955739736), -1.4029332257226894), ((5.121208230049898, 5.123208230049898), (4.818892523370086, 4.820892523370087), -1.8341536697119842), ((4.769789372985292, 4.7717893729852925), (3.147282044260264, 3.149282044260264), 1.738659427867104), ((4.874791769950101, 4.876791769950102), (3.1791074766299134, 3.1811074766299132), 1.307438983877809)]
[INFO] [1753420629.755203803] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947999954223633])
[INFO] [1753420629.756767847] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94799995]
[INFO] [1753420629.763950322] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420629.765172917] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420629.765961003] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420629.768301165] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420629.769848569] [solver_node]: 求解器返回结果: [((5.226210627014707, 5.2282106270147075), (4.850717955739736, 4.852717955739736), -1.4029332257226894), ((5.121208230049898, 5.123208230049898), (4.818892523370086, 4.820892523370087), -1.8341536697119842), ((4.769789372985292, 4.7717893729852925), (3.147282044260264, 3.149282044260264), 1.738659427867104), ((4.874791769950101, 4.876791769950102), (3.1791074766299134, 3.1811074766299132), 1.307438983877809)]
[INFO] [1753420629.860095922] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947999954223633])
[INFO] [1753420629.861753057] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94799995]
[INFO] [1753420629.867296478] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420629.868178167] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420629.868978094] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420629.869712675] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420629.870460344] [solver_node]: 求解器返回结果: [((5.226210627014707, 5.2282106270147075), (4.850717955739736, 4.852717955739736), -1.4029332257226894), ((5.121208230049898, 5.123208230049898), (4.818892523370086, 4.820892523370087), -1.8341536697119842), ((4.769789372985292, 4.7717893729852925), (3.147282044260264, 3.149282044260264), 1.738659427867104), ((4.874791769950101, 4.876791769950102), (3.1791074766299134, 3.1811074766299132), 1.307438983877809)]
[INFO] [1753420629.957203502] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947999954223633])
[INFO] [1753420629.959846905] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94799995]
[INFO] [1753420629.966299311] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420629.967273707] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420629.967971039] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420629.968648018] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420629.969351782] [solver_node]: 求解器返回结果: [((5.226210627014707, 5.2282106270147075), (4.850717955739736, 4.852717955739736), -1.4029332257226894), ((5.121208230049898, 5.123208230049898), (4.818892523370086, 4.820892523370087), -1.8341536697119842), ((4.769789372985292, 4.7717893729852925), (3.147282044260264, 3.149282044260264), 1.738659427867104), ((4.874791769950101, 4.876791769950102), (3.1791074766299134, 3.1811074766299132), 1.307438983877809)]
[INFO] [1753420630.058730823] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947999954223633])
[INFO] [1753420630.060688638] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94799995]
[INFO] [1753420630.065293536] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420630.066205946] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420630.067820072] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420630.068676896] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420630.069415893] [solver_node]: 求解器返回结果: [((5.226210627014707, 5.2282106270147075), (4.850717955739736, 4.852717955739736), -1.4029332257226894), ((5.121208230049898, 5.123208230049898), (4.818892523370086, 4.820892523370087), -1.8341536697119842), ((4.769789372985292, 4.7717893729852925), (3.147282044260264, 3.149282044260264), 1.738659427867104), ((4.874791769950101, 4.876791769950102), (3.1791074766299134, 3.1811074766299132), 1.307438983877809)]
[INFO] [1753420630.157050213] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.953000068664551])
[INFO] [1753420630.158849592] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95300007]
[INFO] [1753420630.165437651] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420630.166361805] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420630.167176996] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420630.168015547] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420630.168729904] [solver_node]: 求解器返回结果: [((5.2236930194139894, 5.22569301941399), (4.847942390923417, 4.849942390923418), -1.400138752955841), ((5.117432063958042, 5.119432063958043), (4.815777699565078, 4.817777699565078), -1.8368899057894632), ((4.772306980586009, 4.77430698058601), (3.150057609076583, 3.1520576090765826), 1.7414539006339522), ((4.878567936041957, 4.880567936041958), (3.1822223004349213, 3.184222300434921), 1.3047027478003295)]
[INFO] [1753420630.254991641] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.953000068664551])
[INFO] [1753420630.257278586] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95300007]
[INFO] [1753420630.265947791] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420630.266925195] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420630.267698848] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420630.268622747] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420630.269401617] [solver_node]: 求解器返回结果: [((5.2236930194139894, 5.22569301941399), (4.847942390923417, 4.849942390923418), -1.400138752955841), ((5.117432063958042, 5.119432063958043), (4.815777699565078, 4.817777699565078), -1.8368899057894632), ((4.772306980586009, 4.77430698058601), (3.150057609076583, 3.1520576090765826), 1.7414539006339522), ((4.878567936041957, 4.880567936041958), (3.1822223004349213, 3.184222300434921), 1.3047027478003295)]
[INFO] [1753420630.356587444] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.953000068664551])
[INFO] [1753420630.358647150] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95300007]
[INFO] [1753420630.363825121] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420630.364764667] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420630.365528049] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420630.366284710] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420630.367081053] [solver_node]: 求解器返回结果: [((5.2236930194139894, 5.22569301941399), (4.847942390923417, 4.849942390923418), -1.400138752955841), ((5.117432063958042, 5.119432063958043), (4.815777699565078, 4.817777699565078), -1.8368899057894632), ((4.772306980586009, 4.77430698058601), (3.150057609076583, 3.1520576090765826), 1.7414539006339522), ((4.878567936041957, 4.880567936041958), (3.1822223004349213, 3.184222300434921), 1.3047027478003295)]
[INFO] [1753420630.456466143] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.953000068664551])
[INFO] [1753420630.458294258] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95300007]
[INFO] [1753420630.461929241] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420630.462876340] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420630.463624009] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420630.464350462] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420630.465112083] [solver_node]: 求解器返回结果: [((5.2236930194139894, 5.22569301941399), (4.847942390923417, 4.849942390923418), -1.400138752955841), ((5.117432063958042, 5.119432063958043), (4.815777699565078, 4.817777699565078), -1.8368899057894632), ((4.772306980586009, 4.77430698058601), (3.150057609076583, 3.1520576090765826), 1.7414539006339522), ((4.878567936041957, 4.880567936041958), (3.1822223004349213, 3.184222300434921), 1.3047027478003295)]
[INFO] [1753420630.557447656] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.953000068664551])
[INFO] [1753420630.559053462] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95300007]
[INFO] [1753420630.562842017] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420630.563862462] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420630.564669493] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420630.565457995] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420630.566242625] [solver_node]: 求解器返回结果: [((5.2236930194139894, 5.22569301941399), (4.847942390923417, 4.849942390923418), -1.400138752955841), ((5.117432063958042, 5.119432063958043), (4.815777699565078, 4.817777699565078), -1.8368899057894632), ((4.772306980586009, 4.77430698058601), (3.150057609076583, 3.1520576090765826), 1.7414539006339522), ((4.878567936041957, 4.880567936041958), (3.1822223004349213, 3.184222300434921), 1.3047027478003295)]
[INFO] [1753420630.655983437] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.953000068664551])
[INFO] [1753420630.660427499] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95300007]
[INFO] [1753420630.664063249] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420630.664924618] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420630.665654302] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420630.666369299] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420630.667110984] [solver_node]: 求解器返回结果: [((5.2236930194139894, 5.22569301941399), (4.847942390923417, 4.849942390923418), -1.400138752955841), ((5.117432063958042, 5.119432063958043), (4.815777699565078, 4.817777699565078), -1.8368899057894632), ((4.772306980586009, 4.77430698058601), (3.150057609076583, 3.1520576090765826), 1.7414539006339522), ((4.878567936041957, 4.880567936041958), (3.1822223004349213, 3.184222300434921), 1.3047027478003295)]
[INFO] [1753420630.759609473] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420630.761300113] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95600009]
[INFO] [1753420630.764858742] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420630.765754991] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420630.766496164] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420630.767229753] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420630.768036336] [solver_node]: 求解器返回结果: [((5.223164546229625, 5.2251645462296255), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.116137423300761, 5.1181374233007615), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.772835453770374, 4.7748354537703745), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.879862576699239, 4.881862576699239), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420630.856385972] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420630.858124165] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95600009]
[INFO] [1753420630.863340729] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420630.864584444] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420630.865393107] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420630.866157097] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420630.866940703] [solver_node]: 求解器返回结果: [((5.223164546229625, 5.2251645462296255), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.116137423300761, 5.1181374233007615), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.772835453770374, 4.7748354537703745), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.879862576699239, 4.881862576699239), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420630.955635885] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420630.957224218] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95600009]
[INFO] [1753420630.960694652] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420630.961614454] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420630.962450894] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420630.963276165] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420630.964069819] [solver_node]: 求解器返回结果: [((5.223164546229625, 5.2251645462296255), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.116137423300761, 5.1181374233007615), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.772835453770374, 4.7748354537703745), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.879862576699239, 4.881862576699239), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420631.057655156] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420631.060186236] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95600009]
[INFO] [1753420631.063763457] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420631.064649370] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420631.065419184] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420631.066162853] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420631.066930011] [solver_node]: 求解器返回结果: [((5.223164546229625, 5.2251645462296255), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.116137423300761, 5.1181374233007615), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.772835453770374, 4.7748354537703745), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.879862576699239, 4.881862576699239), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420631.156555140] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420631.158156497] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95600009]
[INFO] [1753420631.161772631] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420631.163358180] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420631.166472125] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420631.170315113] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420631.171498411] [solver_node]: 求解器返回结果: [((5.223164546229625, 5.2251645462296255), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.116137423300761, 5.1181374233007615), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.772835453770374, 4.7748354537703745), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.879862576699239, 4.881862576699239), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420631.257605168] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.953000068664551])
[INFO] [1753420631.259422116] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95300007]
[INFO] [1753420631.264029926] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420631.265315562] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420631.266247973] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420631.267100637] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420631.267909812] [solver_node]: 求解器返回结果: [((5.224678421915342, 5.226678421915342), (4.847942390923417, 4.849942390923418), -1.400138752955841), ((5.118396798569186, 5.120396798569186), (4.815777699565078, 4.817777699565078), -1.8368899057894632), ((4.771321578084658, 4.7733215780846585), (3.150057609076583, 3.1520576090765826), 1.7414539006339522), ((4.877603201430813, 4.879603201430814), (3.1822223004349213, 3.184222300434921), 1.3047027478003295)]
[INFO] [1753420631.355629767] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.953000068664551])
[INFO] [1753420631.357160882] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95300007]
[INFO] [1753420631.360411694] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420631.361251814] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420631.361994907] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420631.362757009] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420631.363523750] [solver_node]: 求解器返回结果: [((5.224678421915342, 5.226678421915342), (4.847942390923417, 4.849942390923418), -1.400138752955841), ((5.118396798569186, 5.120396798569186), (4.815777699565078, 4.817777699565078), -1.8368899057894632), ((4.771321578084658, 4.7733215780846585), (3.150057609076583, 3.1520576090765826), 1.7414539006339522), ((4.877603201430813, 4.879603201430814), (3.1822223004349213, 3.184222300434921), 1.3047027478003295)]
[INFO] [1753420631.455990656] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.953000068664551])
[INFO] [1753420631.457529899] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95300007]
[INFO] [1753420631.461538077] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420631.463025095] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420631.464251786] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420631.465103330] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420631.466777521] [solver_node]: 求解器返回结果: [((5.224678421915342, 5.226678421915342), (4.847942390923417, 4.849942390923418), -1.400138752955841), ((5.118396798569186, 5.120396798569186), (4.815777699565078, 4.817777699565078), -1.8368899057894632), ((4.771321578084658, 4.7733215780846585), (3.150057609076583, 3.1520576090765826), 1.7414539006339522), ((4.877603201430813, 4.879603201430814), (3.1822223004349213, 3.184222300434921), 1.3047027478003295)]
[INFO] [1753420631.555301435] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.953000068664551])
[INFO] [1753420631.556933641] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95300007]
[INFO] [1753420631.564290713] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420631.568608468] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420631.569552046] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420631.570320452] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420631.571102138] [solver_node]: 求解器返回结果: [((5.224678421915342, 5.226678421915342), (4.847942390923417, 4.849942390923418), -1.400138752955841), ((5.118396798569186, 5.120396798569186), (4.815777699565078, 4.817777699565078), -1.8368899057894632), ((4.771321578084658, 4.7733215780846585), (3.150057609076583, 3.1520576090765826), 1.7414539006339522), ((4.877603201430813, 4.879603201430814), (3.1822223004349213, 3.184222300434921), 1.3047027478003295)]
[INFO] [1753420631.657345187] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.953000068664551])
[INFO] [1753420631.659209912] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95300007]
[INFO] [1753420631.664973659] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420631.666807407] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420631.667636999] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420631.668404796] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420631.669146193] [solver_node]: 求解器返回结果: [((5.224678421915342, 5.226678421915342), (4.847942390923417, 4.849942390923418), -1.400138752955841), ((5.118396798569186, 5.120396798569186), (4.815777699565078, 4.817777699565078), -1.8368899057894632), ((4.771321578084658, 4.7733215780846585), (3.150057609076583, 3.1520576090765826), 1.7414539006339522), ((4.877603201430813, 4.879603201430814), (3.1822223004349213, 3.184222300434921), 1.3047027478003295)]
[INFO] [1753420631.755072370] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420631.756776610] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95600009]
[INFO] [1753420631.763123862] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420631.765212401] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420631.766822462] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420631.767654038] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420631.768432332] [solver_node]: 求解器返回结果: [((5.223164546229625, 5.2251645462296255), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.116137423300761, 5.1181374233007615), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.772835453770374, 4.7748354537703745), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.879862576699239, 4.881862576699239), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420631.856001947] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420631.858132983] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95600009]
[INFO] [1753420631.861836704] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420631.862825244] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420631.863579121] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420631.864323334] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420631.865090364] [solver_node]: 求解器返回结果: [((5.223164546229625, 5.2251645462296255), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.116137423300761, 5.1181374233007615), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.772835453770374, 4.7748354537703745), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.879862576699239, 4.881862576699239), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420631.959047552] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420631.960584875] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95600009]
[INFO] [1753420631.964701600] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420631.965570680] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420631.966285388] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420631.967074083] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420631.967786135] [solver_node]: 求解器返回结果: [((5.223164546229625, 5.2251645462296255), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.116137423300761, 5.1181374233007615), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.772835453770374, 4.7748354537703745), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.879862576699239, 4.881862576699239), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420632.055320293] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420632.057056246] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95600009]
[INFO] [1753420632.060732798] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420632.061661145] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420632.062435983] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420632.063255270] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420632.064076701] [solver_node]: 求解器返回结果: [((5.223164546229625, 5.2251645462296255), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.116137423300761, 5.1181374233007615), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.772835453770374, 4.7748354537703745), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.879862576699239, 4.881862576699239), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420632.156112587] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420632.158446477] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95600009]
[INFO] [1753420632.162384348] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420632.163504924] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420632.164308755] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420632.165115114] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420632.165895232] [solver_node]: 求解器返回结果: [((5.223164546229625, 5.2251645462296255), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.116137423300761, 5.1181374233007615), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.772835453770374, 4.7748354537703745), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.879862576699239, 4.881862576699239), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420632.255326020] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420632.257003123] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95600009]
[INFO] [1753420632.261143625] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420632.262070499] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420632.262868314] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420632.263589998] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420632.264328867] [solver_node]: 求解器返回结果: [((5.223164546229625, 5.2251645462296255), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.116137423300761, 5.1181374233007615), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.772835453770374, 4.7748354537703745), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.879862576699239, 4.881862576699239), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420632.356155115] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420632.357738424] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95600009]
[INFO] [1753420632.361282940] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420632.362166773] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420632.362952427] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420632.363697888] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420632.364471606] [solver_node]: 求解器返回结果: [((5.223164546229625, 5.2251645462296255), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.116137423300761, 5.1181374233007615), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.772835453770374, 4.7748354537703745), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.879862576699239, 4.881862576699239), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420632.456829357] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420632.458470044] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95600009]
[INFO] [1753420632.461703767] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420632.462542543] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420632.463320997] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420632.464189822] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420632.464937683] [solver_node]: 求解器返回结果: [((5.223164546229625, 5.2251645462296255), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.116137423300761, 5.1181374233007615), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.772835453770374, 4.7748354537703745), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.879862576699239, 4.881862576699239), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420632.556899999] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420632.558471531] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95600009]
[INFO] [1753420632.561740200] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420632.562554719] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420632.563284371] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420632.563985447] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420632.564724700] [solver_node]: 求解器返回结果: [((5.223164546229625, 5.2251645462296255), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.116137423300761, 5.1181374233007615), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.772835453770374, 4.7748354537703745), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.879862576699239, 4.881862576699239), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420632.655082842] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420632.656610310] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95600009]
[INFO] [1753420632.659872706] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420632.660856030] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420632.662240357] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420632.663096989] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420632.664213981] [solver_node]: 求解器返回结果: [((5.223164546229625, 5.2251645462296255), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.116137423300761, 5.1181374233007615), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.772835453770374, 4.7748354537703745), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.879862576699239, 4.881862576699239), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420632.756774042] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9619998931884766])
[INFO] [1753420632.758219811] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.96199989]
[INFO] [1753420632.761530176] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420632.762379224] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420632.763173391] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420632.763915716] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420632.764668185] [solver_node]: 求解器返回结果: [((5.220130403944716, 5.222130403944717), (4.842946700372875, 4.8449467003728754), -1.3952021765316216), ((5.111633595595755, 5.113633595595756), (4.810189158664078, 4.812189158664078), -1.8417218392965822), ((4.775869596055283, 4.777869596055283), (3.1550532996271246, 3.1570532996271243), 1.7463904770581715), ((4.8843664044042425, 4.886366404404243), (3.1878108413359216, 3.1898108413359214), 1.299870814293211)]
[INFO] [1753420632.854990039] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9619998931884766])
[INFO] [1753420632.856465824] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.96199989]
[INFO] [1753420632.859889313] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420632.860766906] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420632.861529264] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420632.862394344] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420632.863374468] [solver_node]: 求解器返回结果: [((5.220130403944716, 5.222130403944717), (4.842946700372875, 4.8449467003728754), -1.3952021765316216), ((5.111633595595755, 5.113633595595756), (4.810189158664078, 4.812189158664078), -1.8417218392965822), ((4.775869596055283, 4.777869596055283), (3.1550532996271246, 3.1570532996271243), 1.7463904770581715), ((4.8843664044042425, 4.886366404404243), (3.1878108413359216, 3.1898108413359214), 1.299870814293211)]
[INFO] [1753420632.955227949] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9619998931884766])
[INFO] [1753420632.956787929] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.96199989]
[INFO] [1753420632.960092918] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420632.960975023] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420632.961736229] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420632.962484602] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420632.963252624] [solver_node]: 求解器返回结果: [((5.220130403944716, 5.222130403944717), (4.842946700372875, 4.8449467003728754), -1.3952021765316216), ((5.111633595595755, 5.113633595595756), (4.810189158664078, 4.812189158664078), -1.8417218392965822), ((4.775869596055283, 4.777869596055283), (3.1550532996271246, 3.1570532996271243), 1.7463904770581715), ((4.8843664044042425, 4.886366404404243), (3.1878108413359216, 3.1898108413359214), 1.299870814293211)]
[INFO] [1753420633.057648577] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9619998931884766])
[INFO] [1753420633.059248174] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.96199989]
[INFO] [1753420633.063033273] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420633.063959348] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420633.064732041] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420633.065478815] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420633.067094988] [solver_node]: 求解器返回结果: [((5.220130403944716, 5.222130403944717), (4.842946700372875, 4.8449467003728754), -1.3952021765316216), ((5.111633595595755, 5.113633595595756), (4.810189158664078, 4.812189158664078), -1.8417218392965822), ((4.775869596055283, 4.777869596055283), (3.1550532996271246, 3.1570532996271243), 1.7463904770581715), ((4.8843664044042425, 4.886366404404243), (3.1878108413359216, 3.1898108413359214), 1.299870814293211)]
[INFO] [1753420633.156633556] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9619998931884766])
[INFO] [1753420633.158328420] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.96199989]
[INFO] [1753420633.161724900] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420633.162614878] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420633.163387699] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420633.164118152] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420633.165909883] [solver_node]: 求解器返回结果: [((5.220130403944716, 5.222130403944717), (4.842946700372875, 4.8449467003728754), -1.3952021765316216), ((5.111633595595755, 5.113633595595756), (4.810189158664078, 4.812189158664078), -1.8417218392965822), ((4.775869596055283, 4.777869596055283), (3.1550532996271246, 3.1570532996271243), 1.7463904770581715), ((4.8843664044042425, 4.886366404404243), (3.1878108413359216, 3.1898108413359214), 1.299870814293211)]
[INFO] [1753420633.257426683] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420633.259813086] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95499992]
[INFO] [1753420633.265152725] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420633.267008778] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420633.268467251] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420633.269929405] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420633.271340389] [solver_node]: 求解器返回结果: [((5.223669499320439, 5.22566949932044), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.116890115247132, 5.118890115247133), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.772330500679559, 4.77433050067956), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.879109884752866, 4.881109884752867), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420633.355238125] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420633.358266370] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95499992]
[INFO] [1753420633.361633986] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420633.362467321] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420633.363224431] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420633.363932323] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420633.364649751] [solver_node]: 求解器返回结果: [((5.223669499320439, 5.22566949932044), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.116890115247132, 5.118890115247133), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.772330500679559, 4.77433050067956), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.879109884752866, 4.881109884752867), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420633.456066036] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420633.457648353] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95499992]
[INFO] [1753420633.461363818] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420633.462248803] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420633.463024697] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420633.463761262] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420633.464515043] [solver_node]: 求解器返回结果: [((5.223669499320439, 5.22566949932044), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.116890115247132, 5.118890115247133), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.772330500679559, 4.77433050067956), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.879109884752866, 4.881109884752867), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420633.555094857] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420633.556824602] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.95499992]
[INFO] [1753420633.561056274] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420633.562235123] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420633.563145133] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420633.563936067] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420633.566454506] [solver_node]: 求解器返回结果: [((5.223669499320439, 5.22566949932044), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.116890115247132, 5.118890115247133), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.772330500679559, 4.77433050067956), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.879109884752866, 4.881109884752867), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420633.656468704] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420633.657886152] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95499992]
[INFO] [1753420633.660989184] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420633.661796279] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420633.662510027] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420633.663245472] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420633.663976500] [solver_node]: 求解器返回结果: [((5.22268428543129, 5.224684285431291), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.115925666204313, 5.1179256662043136), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.773315714568708, 4.775315714568709), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.880074333795686, 4.8820743337956864), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420633.755936193] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9489998817443848])
[INFO] [1753420633.757403850] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94899988]
[INFO] [1753420633.760602949] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420633.762397240] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420633.763916995] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420633.764717657] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420633.765849337] [solver_node]: 求解器返回结果: [((5.225707675946761, 5.227707675946761), (4.850162900210999, 4.852162900211), -1.402371325765606), ((5.1204519351863675, 5.122451935186368), (4.818269040599788, 4.820269040599789), -1.8347039177605646), ((4.770292324053238, 4.772292324053239), (3.147837099789001, 3.149837099789001), 1.7392213278241873), ((4.875548064813632, 4.877548064813633), (3.1797309594002114, 3.1817309594002112), 1.3068887358292283)]
[INFO] [1753420633.855064568] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9489998817443848])
[INFO] [1753420633.856609412] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94899988]
[INFO] [1753420633.860123335] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420633.861125764] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420633.861937691] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420633.862792371] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420633.863606122] [solver_node]: 求解器返回结果: [((5.225707675946761, 5.227707675946761), (4.850162900210999, 4.852162900211), -1.402371325765606), ((5.1204519351863675, 5.122451935186368), (4.818269040599788, 4.820269040599789), -1.8347039177605646), ((4.770292324053238, 4.772292324053239), (3.147837099789001, 3.149837099789001), 1.7392213278241873), ((4.875548064813632, 4.877548064813633), (3.1797309594002114, 3.1817309594002112), 1.3068887358292283)]
[INFO] [1753420633.955610359] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9489998817443848])
[INFO] [1753420633.957251590] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94899988]
[INFO] [1753420633.960751785] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420633.961588033] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420633.962332118] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420633.963134157] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420633.963892258] [solver_node]: 求解器返回结果: [((5.225707675946761, 5.227707675946761), (4.850162900210999, 4.852162900211), -1.402371325765606), ((5.1204519351863675, 5.122451935186368), (4.818269040599788, 4.820269040599789), -1.8347039177605646), ((4.770292324053238, 4.772292324053239), (3.147837099789001, 3.149837099789001), 1.7392213278241873), ((4.875548064813632, 4.877548064813633), (3.1797309594002114, 3.1817309594002112), 1.3068887358292283)]
[INFO] [1753420634.055640553] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9489998817443848])
[INFO] [1753420634.063441542] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94899988]
[INFO] [1753420634.070025600] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420634.071150720] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420634.072543688] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420634.073281276] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420634.074109140] [solver_node]: 求解器返回结果: [((5.225707675946761, 5.227707675946761), (4.850162900210999, 4.852162900211), -1.402371325765606), ((5.1204519351863675, 5.122451935186368), (4.818269040599788, 4.820269040599789), -1.8347039177605646), ((4.770292324053238, 4.772292324053239), (3.147837099789001, 3.149837099789001), 1.7392213278241873), ((4.875548064813632, 4.877548064813633), (3.1797309594002114, 3.1817309594002112), 1.3068887358292283)]
[INFO] [1753420634.157812023] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9489998817443848])
[INFO] [1753420634.159823952] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94899988]
[INFO] [1753420634.163234833] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420634.165056292] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420634.165858139] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420634.169199706] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420634.174514416] [solver_node]: 求解器返回结果: [((5.225707675946761, 5.227707675946761), (4.850162900210999, 4.852162900211), -1.402371325765606), ((5.1204519351863675, 5.122451935186368), (4.818269040599788, 4.820269040599789), -1.8347039177605646), ((4.770292324053238, 4.772292324053239), (3.147837099789001, 3.149837099789001), 1.7392213278241873), ((4.875548064813632, 4.877548064813633), (3.1797309594002114, 3.1817309594002112), 1.3068887358292283)]
[INFO] [1753420634.256372319] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9489998817443848])
[INFO] [1753420634.257914059] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94899988]
[INFO] [1753420634.261106309] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420634.261923004] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420634.262630416] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420634.263376581] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420634.264076889] [solver_node]: 求解器返回结果: [((5.225707675946761, 5.227707675946761), (4.850162900210999, 4.852162900211), -1.402371325765606), ((5.1204519351863675, 5.122451935186368), (4.818269040599788, 4.820269040599789), -1.8347039177605646), ((4.770292324053238, 4.772292324053239), (3.147837099789001, 3.149837099789001), 1.7392213278241873), ((4.875548064813632, 4.877548064813633), (3.1797309594002114, 3.1817309594002112), 1.3068887358292283)]
[INFO] [1753420634.356269997] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420634.357765783] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420634.360974226] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420634.361830154] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420634.362578591] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420634.363339797] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420634.364106027] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420634.459747328] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.932000160217285, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420634.461397167] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93200016 4.61299992 2.954     ]
[INFO] [1753420634.464696140] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420634.465613318] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420634.466389436] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420634.467165970] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420634.467942600] [solver_node]: 求解器返回结果: [((5.22417408536233, 5.226174085362331), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.117643179566413, 5.119643179566413), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.7718259146376685, 4.773825914637669), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.878356820433586, 4.880356820433587), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420634.557144071] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420634.558624177] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420634.561938383] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420634.562809799] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420634.563590078] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420634.564322354] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420634.565706842] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420634.656269727] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420634.657721256] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420634.660997445] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420634.661837053] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420634.662556433] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420634.663281350] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420634.664001658] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420634.755629310] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420634.757554356] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420634.761681481] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420634.762798185] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420634.765844095] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420634.766718232] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420634.767509966] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420634.855457993] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947999954223633])
[INFO] [1753420634.856898674] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94799995]
[INFO] [1753420634.861513685] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420634.862869915] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420634.863875544] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420634.864761041] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420634.865848080] [solver_node]: 求解器返回结果: [((5.226210627014707, 5.2282106270147075), (4.850717955739736, 4.852717955739736), -1.4029332257226894), ((5.121208230049898, 5.123208230049898), (4.818892523370086, 4.820892523370087), -1.8341536697119842), ((4.769789372985292, 4.7717893729852925), (3.147282044260264, 3.149282044260264), 1.738659427867104), ((4.874791769950101, 4.876791769950102), (3.1791074766299134, 3.1811074766299132), 1.307438983877809)]
[INFO] [1753420634.955396472] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947999954223633])
[INFO] [1753420634.956903715] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94799995]
[INFO] [1753420634.960301763] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420634.961134523] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420634.961883312] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420634.962595812] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420634.963342105] [solver_node]: 求解器返回结果: [((5.226210627014707, 5.2282106270147075), (4.850717955739736, 4.852717955739736), -1.4029332257226894), ((5.121208230049898, 5.123208230049898), (4.818892523370086, 4.820892523370087), -1.8341536697119842), ((4.769789372985292, 4.7717893729852925), (3.147282044260264, 3.149282044260264), 1.738659427867104), ((4.874791769950101, 4.876791769950102), (3.1791074766299134, 3.1811074766299132), 1.307438983877809)]
[INFO] [1753420635.054983422] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947999954223633])
[INFO] [1753420635.056454055] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94799995]
[INFO] [1753420635.059712452] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420635.060562012] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420635.061298641] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420635.062031878] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420635.062814012] [solver_node]: 求解器返回结果: [((5.226210627014707, 5.2282106270147075), (4.850717955739736, 4.852717955739736), -1.4029332257226894), ((5.121208230049898, 5.123208230049898), (4.818892523370086, 4.820892523370087), -1.8341536697119842), ((4.769789372985292, 4.7717893729852925), (3.147282044260264, 3.149282044260264), 1.738659427867104), ((4.874791769950101, 4.876791769950102), (3.1791074766299134, 3.1811074766299132), 1.307438983877809)]
[INFO] [1753420635.155757125] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947999954223633])
[INFO] [1753420635.157999205] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94799995]
[INFO] [1753420635.161805713] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420635.162639368] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420635.163405182] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420635.164108658] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420635.164855975] [solver_node]: 求解器返回结果: [((5.226210627014707, 5.2282106270147075), (4.850717955739736, 4.852717955739736), -1.4029332257226894), ((5.121208230049898, 5.123208230049898), (4.818892523370086, 4.820892523370087), -1.8341536697119842), ((4.769789372985292, 4.7717893729852925), (3.147282044260264, 3.149282044260264), 1.738659427867104), ((4.874791769950101, 4.876791769950102), (3.1791074766299134, 3.1811074766299132), 1.307438983877809)]
[INFO] [1753420635.255231688] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947999954223633])
[INFO] [1753420635.258878447] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94799995]
[INFO] [1753420635.262131307] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420635.263114951] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420635.263858076] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420635.264594161] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420635.265336454] [solver_node]: 求解器返回结果: [((5.226210627014707, 5.2282106270147075), (4.850717955739736, 4.852717955739736), -1.4029332257226894), ((5.121208230049898, 5.123208230049898), (4.818892523370086, 4.820892523370087), -1.8341536697119842), ((4.769789372985292, 4.7717893729852925), (3.147282044260264, 3.149282044260264), 1.738659427867104), ((4.874791769950101, 4.876791769950102), (3.1791074766299134, 3.1811074766299132), 1.307438983877809)]
[INFO] [1753420635.355264154] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9590001106262207])
[INFO] [1753420635.356733860] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95900011]
[INFO] [1753420635.360029121] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420635.363167322] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420635.365755779] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420635.367863647] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420635.369410251] [solver_node]: 求解器返回结果: [((5.220663639337365, 5.222663639337366), (4.84461179602823, 4.846611796028231), -1.396834653914869), ((5.112919109285102, 5.114919109285102), (4.812049382672449, 4.81404938267245), -1.8401242155470188), ((4.775336360662633, 4.777336360662634), (3.1533882039717693, 3.155388203971769), 1.7447579996749236), ((4.883080890714897, 4.885080890714898), (3.18595061732755, 3.18795061732755), 1.3014684380427743)]
[INFO] [1753420635.455765754] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9590001106262207])
[INFO] [1753420635.457233219] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95900011]
[INFO] [1753420635.460378652] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420635.461179987] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420635.461888487] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420635.462578395] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420635.463297583] [solver_node]: 求解器返回结果: [((5.220663639337365, 5.222663639337366), (4.84461179602823, 4.846611796028231), -1.396834653914869), ((5.112919109285102, 5.114919109285102), (4.812049382672449, 4.81404938267245), -1.8401242155470188), ((4.775336360662633, 4.777336360662634), (3.1533882039717693, 3.155388203971769), 1.7447579996749236), ((4.883080890714897, 4.885080890714898), (3.18595061732755, 3.18795061732755), 1.3014684380427743)]
[INFO] [1753420635.555355135] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9590001106262207])
[INFO] [1753420635.556868138] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95900011]
[INFO] [1753420635.561274951] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420635.562179265] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420635.562938262] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420635.563654699] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420635.564405632] [solver_node]: 求解器返回结果: [((5.220663639337365, 5.222663639337366), (4.84461179602823, 4.846611796028231), -1.396834653914869), ((5.112919109285102, 5.114919109285102), (4.812049382672449, 4.81404938267245), -1.8401242155470188), ((4.775336360662633, 4.777336360662634), (3.1533882039717693, 3.155388203971769), 1.7447579996749236), ((4.883080890714897, 4.885080890714898), (3.18595061732755, 3.18795061732755), 1.3014684380427743)]
[INFO] [1753420635.656370126] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9590001106262207])
[INFO] [1753420635.657867896] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95900011]
[INFO] [1753420635.661172886] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420635.662021966] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420635.663351603] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420635.664115529] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420635.664829885] [solver_node]: 求解器返回结果: [((5.220663639337365, 5.222663639337366), (4.84461179602823, 4.846611796028231), -1.396834653914869), ((5.112919109285102, 5.114919109285102), (4.812049382672449, 4.81404938267245), -1.8401242155470188), ((4.775336360662633, 4.777336360662634), (3.1533882039717693, 3.155388203971769), 1.7447579996749236), ((4.883080890714897, 4.885080890714898), (3.18595061732755, 3.18795061732755), 1.3014684380427743)]
[INFO] [1753420635.754757169] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9590001106262207])
[INFO] [1753420635.756222587] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95900011]
[INFO] [1753420635.759564858] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420635.760362224] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420635.761055972] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420635.761740055] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420635.762435499] [solver_node]: 求解器返回结果: [((5.220663639337365, 5.222663639337366), (4.84461179602823, 4.846611796028231), -1.396834653914869), ((5.112919109285102, 5.114919109285102), (4.812049382672449, 4.81404938267245), -1.8401242155470188), ((4.775336360662633, 4.777336360662634), (3.1533882039717693, 3.155388203971769), 1.7447579996749236), ((4.883080890714897, 4.885080890714898), (3.18595061732755, 3.18795061732755), 1.3014684380427743)]
[INFO] [1753420635.858066785] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.953000068664551])
[INFO] [1753420635.861142008] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95300007]
[INFO] [1753420635.865841437] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420635.866809016] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420635.867582318] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420635.868339396] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420635.869108601] [solver_node]: 求解器返回结果: [((5.2236930194139894, 5.22569301941399), (4.847942390923417, 4.849942390923418), -1.400138752955841), ((5.117432063958042, 5.119432063958043), (4.815777699565078, 4.817777699565078), -1.8368899057894632), ((4.772306980586009, 4.77430698058601), (3.150057609076583, 3.1520576090765826), 1.7414539006339522), ((4.878567936041957, 4.880567936041958), (3.1822223004349213, 3.184222300434921), 1.3047027478003295)]
[INFO] [1753420635.956608073] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.953000068664551])
[INFO] [1753420635.958158901] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95300007]
[INFO] [1753420635.962103396] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420635.962978813] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420635.963711250] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420635.964421670] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420635.965241469] [solver_node]: 求解器返回结果: [((5.2236930194139894, 5.22569301941399), (4.847942390923417, 4.849942390923418), -1.400138752955841), ((5.117432063958042, 5.119432063958043), (4.815777699565078, 4.817777699565078), -1.8368899057894632), ((4.772306980586009, 4.77430698058601), (3.150057609076583, 3.1520576090765826), 1.7414539006339522), ((4.878567936041957, 4.880567936041958), (3.1822223004349213, 3.184222300434921), 1.3047027478003295)]
[INFO] [1753420636.055404984] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.953000068664551])
[INFO] [1753420636.056930340] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95300007]
[INFO] [1753420636.060976054] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420636.061834254] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420636.062577252] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420636.063314520] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420636.064180401] [solver_node]: 求解器返回结果: [((5.2236930194139894, 5.22569301941399), (4.847942390923417, 4.849942390923418), -1.400138752955841), ((5.117432063958042, 5.119432063958043), (4.815777699565078, 4.817777699565078), -1.8368899057894632), ((4.772306980586009, 4.77430698058601), (3.150057609076583, 3.1520576090765826), 1.7414539006339522), ((4.878567936041957, 4.880567936041958), (3.1822223004349213, 3.184222300434921), 1.3047027478003295)]
[INFO] [1753420636.154780601] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.953000068664551])
[INFO] [1753420636.156332773] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95300007]
[INFO] [1753420636.159816871] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420636.162067879] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420636.162970689] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420636.163767735] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420636.164526253] [solver_node]: 求解器返回结果: [((5.2236930194139894, 5.22569301941399), (4.847942390923417, 4.849942390923418), -1.400138752955841), ((5.117432063958042, 5.119432063958043), (4.815777699565078, 4.817777699565078), -1.8368899057894632), ((4.772306980586009, 4.77430698058601), (3.150057609076583, 3.1520576090765826), 1.7414539006339522), ((4.878567936041957, 4.880567936041958), (3.1822223004349213, 3.184222300434921), 1.3047027478003295)]
[INFO] [1753420636.255641539] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.953000068664551])
[INFO] [1753420636.257837025] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95300007]
[INFO] [1753420636.261398278] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420636.262300864] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420636.263179865] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420636.263947663] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420636.264733541] [solver_node]: 求解器返回结果: [((5.2236930194139894, 5.22569301941399), (4.847942390923417, 4.849942390923418), -1.400138752955841), ((5.117432063958042, 5.119432063958043), (4.815777699565078, 4.817777699565078), -1.8368899057894632), ((4.772306980586009, 4.77430698058601), (3.150057609076583, 3.1520576090765826), 1.7414539006339522), ((4.878567936041957, 4.880567936041958), (3.1822223004349213, 3.184222300434921), 1.3047027478003295)]
[INFO] [1753420636.355577972] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9590001106262207])
[INFO] [1753420636.357414152] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95900011]
[INFO] [1753420636.361386520] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420636.362286482] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420636.363086728] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420636.363851038] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420636.364627668] [solver_node]: 求解器返回结果: [((5.220663639337365, 5.222663639337366), (4.84461179602823, 4.846611796028231), -1.396834653914869), ((5.112919109285102, 5.114919109285102), (4.812049382672449, 4.81404938267245), -1.8401242155470188), ((4.775336360662633, 4.777336360662634), (3.1533882039717693, 3.155388203971769), 1.7447579996749236), ((4.883080890714897, 4.885080890714898), (3.18595061732755, 3.18795061732755), 1.3014684380427743)]
[INFO] [1753420636.456279193] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9590001106262207])
[INFO] [1753420636.457783460] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95900011]
[INFO] [1753420636.461246502] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420636.462117055] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420636.462895413] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420636.463644650] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420636.464412064] [solver_node]: 求解器返回结果: [((5.220663639337365, 5.222663639337366), (4.84461179602823, 4.846611796028231), -1.396834653914869), ((5.112919109285102, 5.114919109285102), (4.812049382672449, 4.81404938267245), -1.8401242155470188), ((4.775336360662633, 4.777336360662634), (3.1533882039717693, 3.155388203971769), 1.7447579996749236), ((4.883080890714897, 4.885080890714898), (3.18595061732755, 3.18795061732755), 1.3014684380427743)]
[INFO] [1753420636.556797402] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9590001106262207])
[INFO] [1753420636.560797196] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95900011]
[INFO] [1753420636.564217197] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420636.565982527] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420636.567149280] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420636.568213214] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420636.569964687] [solver_node]: 求解器返回结果: [((5.220663639337365, 5.222663639337366), (4.84461179602823, 4.846611796028231), -1.396834653914869), ((5.112919109285102, 5.114919109285102), (4.812049382672449, 4.81404938267245), -1.8401242155470188), ((4.775336360662633, 4.777336360662634), (3.1533882039717693, 3.155388203971769), 1.7447579996749236), ((4.883080890714897, 4.885080890714898), (3.18595061732755, 3.18795061732755), 1.3014684380427743)]
[INFO] [1753420636.654961720] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9590001106262207])
[INFO] [1753420636.656456291] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95900011]
[INFO] [1753420636.660039880] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420636.660901633] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420636.661692791] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420636.662460781] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420636.663241795] [solver_node]: 求解器返回结果: [((5.220663639337365, 5.222663639337366), (4.84461179602823, 4.846611796028231), -1.396834653914869), ((5.112919109285102, 5.114919109285102), (4.812049382672449, 4.81404938267245), -1.8401242155470188), ((4.775336360662633, 4.777336360662634), (3.1533882039717693, 3.155388203971769), 1.7447579996749236), ((4.883080890714897, 4.885080890714898), (3.18595061732755, 3.18795061732755), 1.3014684380427743)]
[INFO] [1753420636.756270064] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9590001106262207])
[INFO] [1753420636.758974396] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95900011]
[INFO] [1753420636.763335192] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420636.764461656] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420636.765700731] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420636.766454736] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420636.767285608] [solver_node]: 求解器返回结果: [((5.220663639337365, 5.222663639337366), (4.84461179602823, 4.846611796028231), -1.396834653914869), ((5.112919109285102, 5.114919109285102), (4.812049382672449, 4.81404938267245), -1.8401242155470188), ((4.775336360662633, 4.777336360662634), (3.1533882039717693, 3.155388203971769), 1.7447579996749236), ((4.883080890714897, 4.885080890714898), (3.18595061732755, 3.18795061732755), 1.3014684380427743)]
[INFO] [1753420636.855808245] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420636.860243730] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420636.863724821] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420636.864570445] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420636.865284449] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420636.865995925] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420636.866773291] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420636.955367834] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420636.958519796] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420636.962334624] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420636.963245913] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420636.963971278] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420636.964659426] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420636.965389366] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420637.054964225] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420637.056569647] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420637.062085643] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420637.064477039] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420637.066911860] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420637.067687498] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420637.068427007] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420637.158441047] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420637.160224553] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420637.165036338] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420637.166197330] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420637.172128315] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420637.174545439] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420637.175772322] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420637.259227136] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420637.263138703] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420637.272120877] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420637.273584439] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420637.275440779] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420637.277190237] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420637.277963955] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420637.355574187] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420637.357149848] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420637.360533719] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420637.361599158] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420637.362333387] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420637.363181475] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420637.363924152] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420637.456902595] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420637.458547954] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420637.463940363] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420637.465703965] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420637.466924831] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420637.467630803] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420637.468461803] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420637.555283208] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420637.557731790] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420637.561451063] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420637.562245422] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420637.562989539] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420637.563685718] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420637.564393066] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420637.660512047] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420637.662173470] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420637.666785249] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420637.667673690] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420637.668463345] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420637.669261415] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420637.670047390] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420637.756289930] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420637.757811061] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420637.765451822] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420637.768776332] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420637.770839495] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420637.771651902] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420637.772408819] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420637.856886670] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420637.858405945] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420637.862082401] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420637.863006812] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420637.863996504] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420637.865968336] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420637.867177298] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420637.956445172] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420637.958113476] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420637.961351231] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420637.962160310] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420637.962953037] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420637.963664993] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420637.964378837] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420638.056258626] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420638.060250483] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420638.064490156] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420638.065331875] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420638.066064184] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420638.066775532] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420638.067501537] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420638.157355317] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420638.160582544] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420638.166524601] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420638.168284523] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420638.169695891] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420638.170532170] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420638.171380514] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420638.256487632] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420638.257927833] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420638.261018352] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420638.261887945] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420638.262586141] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420638.263294961] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420638.263978084] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420638.356801164] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420638.358267318] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420638.361347565] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420638.362121955] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420638.362861592] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420638.363544011] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420638.364383075] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420638.455847140] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420638.457422033] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420638.460672461] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420638.461490436] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420638.462223225] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420638.463006127] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420638.463746276] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420638.555041217] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420638.557825904] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95600009]
[INFO] [1753420638.562593143] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420638.564992059] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420638.566896721] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420638.568580897] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420638.569373527] [solver_node]: 求解器返回结果: [((5.221193837479552, 5.223193837479553), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.114208350681837, 5.116208350681838), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.774806162520447, 4.776806162520447), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.881791649318162, 4.883791649318162), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420638.655103862] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420638.656614369] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95600009]
[INFO] [1753420638.659900126] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420638.664346012] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420638.666037964] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420638.666950534] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420638.667733020] [solver_node]: 求解器返回结果: [((5.221193837479552, 5.223193837479553), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.114208350681837, 5.116208350681838), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.774806162520447, 4.776806162520447), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.881791649318162, 4.883791649318162), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420638.754943013] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420638.756472401] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95600009]
[INFO] [1753420638.763149966] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420638.765685750] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420638.768177533] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420638.769174233] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420638.770354970] [solver_node]: 求解器返回结果: [((5.221193837479552, 5.223193837479553), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.114208350681837, 5.116208350681838), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.774806162520447, 4.776806162520447), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.881791649318162, 4.883791649318162), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420638.856137755] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420638.858318840] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95600009]
[INFO] [1753420638.862028866] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420638.863111904] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420638.863918903] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420638.864842929] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420638.865674665] [solver_node]: 求解器返回结果: [((5.221193837479552, 5.223193837479553), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.114208350681837, 5.116208350681838), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.774806162520447, 4.776806162520447), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.881791649318162, 4.883791649318162), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420638.954846409] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420638.956388597] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95600009]
[INFO] [1753420638.960337253] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420638.961515335] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420638.962401856] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420638.963257688] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420638.965492375] [solver_node]: 求解器返回结果: [((5.221193837479552, 5.223193837479553), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.114208350681837, 5.116208350681838), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.774806162520447, 4.776806162520447), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.881791649318162, 4.883791649318162), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420639.055151302] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420639.057444679] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95600009]
[INFO] [1753420639.062472150] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420639.063805979] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420639.064860601] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420639.065779667] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420639.066620843] [solver_node]: 求解器返回结果: [((5.221193837479552, 5.223193837479553), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.114208350681837, 5.116208350681838), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.774806162520447, 4.776806162520447), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.881791649318162, 4.883791649318162), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420639.154897331] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420639.156391485] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95600009]
[INFO] [1753420639.159773181] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420639.161749461] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420639.164040630] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420639.165842601] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420639.168061128] [solver_node]: 求解器返回结果: [((5.221193837479552, 5.223193837479553), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.114208350681837, 5.116208350681838), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.774806162520447, 4.776806162520447), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.881791649318162, 4.883791649318162), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420639.254873862] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420639.257093093] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420639.262884010] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420639.265100104] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420639.266834394] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420639.267658321] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420639.268583147] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420639.355513229] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420639.357598824] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420639.362242444] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420639.363232872] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420639.364153762] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420639.364915671] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420639.365670317] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420639.454947089] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420639.456503165] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420639.460006016] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420639.460913178] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420639.461727217] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420639.462634347] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420639.464310522] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420639.555340240] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420639.557340361] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420639.562873062] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420639.563868834] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420639.564645016] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420639.565384717] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420639.566117666] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420639.657008820] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420639.658989708] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420639.662430445] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420639.663325799] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420639.664077404] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420639.664793840] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420639.665519717] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420639.756651838] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420639.758769562] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420639.763716294] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420639.764638784] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420639.765417270] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420639.766168556] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420639.766962786] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420639.855392750] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420639.857011260] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420639.860433085] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420639.861306998] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420639.862078572] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420639.862908451] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420639.863707770] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420639.956180281] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420639.959025129] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420639.964713739] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420639.965784809] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420639.966601184] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420639.968160684] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420639.968979556] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420640.055549819] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420640.057067846] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420640.060293474] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420640.061120793] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420640.061839214] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420640.062545730] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420640.063342136] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420640.155389260] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420640.156876566] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420640.160120786] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420640.160966250] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420640.161681406] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420640.162387634] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420640.163162888] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420640.255724042] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420640.257783300] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420640.263361475] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420640.264206555] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420640.264913903] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420640.265588258] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420640.266306454] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420640.355640700] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420640.357206377] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420640.360578024] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420640.361361791] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420640.362070419] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420640.362831816] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420640.363548349] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420640.457488902] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420640.459165077] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420640.462647032] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420640.463541393] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420640.464252902] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420640.464958106] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420640.465663502] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420640.557382487] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420640.562407558] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420640.565773286] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420640.566591101] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420640.567849856] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420640.568570261] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420640.569300842] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420640.655335154] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420640.657004482] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420640.660412738] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420640.661266330] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420640.661984367] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420640.662845447] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420640.663564188] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420640.756977398] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420640.758622372] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420640.762153737] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420640.764501707] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420640.765438886] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420640.766348928] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420640.767162103] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420640.856993419] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420640.859892413] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420640.863243292] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420640.864081652] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420640.864816457] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420640.865511197] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420640.866238609] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420640.956147176] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420640.957643922] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420640.963034923] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420640.963887107] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420640.964589943] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420640.965289291] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420640.966036096] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420641.055359815] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420641.057486339] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420641.061732668] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420641.063080226] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420641.065010457] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420641.068450842] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420641.070497172] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420641.154896655] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420641.156907656] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420641.160242887] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420641.161078750] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420641.161800819] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420641.162514439] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420641.163261980] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420641.256562260] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420641.258252772] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420641.263204304] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420641.264989283] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420641.266301544] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420641.267062750] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420641.267782258] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420641.356016506] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420641.359261558] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420641.362639958] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420641.365756206] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420641.366574053] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420641.367412029] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420641.368151826] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420641.456480733] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420641.457923910] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420641.461118560] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420641.461934871] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420641.462647660] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420641.463405185] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420641.464146198] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420641.556975712] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420641.558562573] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420641.561916652] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420641.562824486] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420641.563537242] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420641.564218926] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420641.564920866] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420641.655331879] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420641.656874675] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420641.660865988] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420641.662126920] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420641.662957375] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420641.663701781] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420641.664791475] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420641.755624581] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420641.757106287] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420641.761267525] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420641.762177791] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420641.763287998] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420641.764069012] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420641.764861547] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420641.856396336] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420641.857849722] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420641.861257274] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420641.862091826] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420641.862873320] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420641.863590972] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420641.864385107] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420641.955982682] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420641.958887917] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420641.965684205] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420641.967553922] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420641.968360185] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420641.969089550] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420641.969823203] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420642.057246228] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947999954223633])
[INFO] [1753420642.058792288] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94799995]
[INFO] [1753420642.063443588] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420642.064240154] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420642.064940846] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420642.065622850] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420642.066343446] [solver_node]: 求解器返回结果: [((5.226210627014707, 5.2282106270147075), (4.850717955739736, 4.852717955739736), -1.4029332257226894), ((5.121208230049898, 5.123208230049898), (4.818892523370086, 4.820892523370087), -1.8341536697119842), ((4.769789372985292, 4.7717893729852925), (3.147282044260264, 3.149282044260264), 1.738659427867104), ((4.874791769950101, 4.876791769950102), (3.1791074766299134, 3.1811074766299132), 1.307438983877809)]
[INFO] [1753420642.155447639] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947999954223633])
[INFO] [1753420642.156985507] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94799995]
[INFO] [1753420642.160235775] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420642.161047638] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420642.161754474] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420642.162449502] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420642.163214227] [solver_node]: 求解器返回结果: [((5.226210627014707, 5.2282106270147075), (4.850717955739736, 4.852717955739736), -1.4029332257226894), ((5.121208230049898, 5.123208230049898), (4.818892523370086, 4.820892523370087), -1.8341536697119842), ((4.769789372985292, 4.7717893729852925), (3.147282044260264, 3.149282044260264), 1.738659427867104), ((4.874791769950101, 4.876791769950102), (3.1791074766299134, 3.1811074766299132), 1.307438983877809)]
[INFO] [1753420642.257095484] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947999954223633])
[INFO] [1753420642.259458783] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94799995]
[INFO] [1753420642.265381895] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420642.267138777] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420642.267928527] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420642.269519965] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420642.270271250] [solver_node]: 求解器返回结果: [((5.226210627014707, 5.2282106270147075), (4.850717955739736, 4.852717955739736), -1.4029332257226894), ((5.121208230049898, 5.123208230049898), (4.818892523370086, 4.820892523370087), -1.8341536697119842), ((4.769789372985292, 4.7717893729852925), (3.147282044260264, 3.149282044260264), 1.738659427867104), ((4.874791769950101, 4.876791769950102), (3.1791074766299134, 3.1811074766299132), 1.307438983877809)]
[INFO] [1753420642.355457860] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947999954223633])
[INFO] [1753420642.357081810] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94799995]
[INFO] [1753420642.360533044] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420642.361522448] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420642.362319494] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420642.363118813] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420642.363898163] [solver_node]: 求解器返回结果: [((5.226210627014707, 5.2282106270147075), (4.850717955739736, 4.852717955739736), -1.4029332257226894), ((5.121208230049898, 5.123208230049898), (4.818892523370086, 4.820892523370087), -1.8341536697119842), ((4.769789372985292, 4.7717893729852925), (3.147282044260264, 3.149282044260264), 1.738659427867104), ((4.874791769950101, 4.876791769950102), (3.1791074766299134, 3.1811074766299132), 1.307438983877809)]
[INFO] [1753420642.455748610] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947999954223633])
[INFO] [1753420642.458000642] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94799995]
[INFO] [1753420642.462914894] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420642.463761126] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420642.464508411] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420642.465223247] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420642.466153801] [solver_node]: 求解器返回结果: [((5.226210627014707, 5.2282106270147075), (4.850717955739736, 4.852717955739736), -1.4029332257226894), ((5.121208230049898, 5.123208230049898), (4.818892523370086, 4.820892523370087), -1.8341536697119842), ((4.769789372985292, 4.7717893729852925), (3.147282044260264, 3.149282044260264), 1.738659427867104), ((4.874791769950101, 4.876791769950102), (3.1791074766299134, 3.1811074766299132), 1.307438983877809)]
[INFO] [1753420642.556042209] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420642.557569804] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420642.560748774] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420642.561554237] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420642.562260273] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420642.563016295] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420642.563728635] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420642.655046235] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420642.656631656] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420642.660355601] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420642.661482641] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420642.662418252] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420642.663359527] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420642.664260192] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420642.755478397] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420642.757167853] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420642.760947672] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420642.761842098] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420642.762628232] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420642.763442335] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420642.764220693] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420642.857422954] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420642.859016952] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420642.862471802] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420642.863599130] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420642.864436754] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420642.865217160] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420642.866015038] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420642.956250367] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420642.957801035] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420642.961100617] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420642.961952961] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420642.962760728] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420642.963664530] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420642.964458344] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420643.055843370] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420643.057407575] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420643.060654835] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420643.061489163] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420643.062209983] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420643.062968341] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420643.064239065] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420643.155758527] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420643.157303051] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420643.160591560] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420643.161455617] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420643.162176053] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420643.162916650] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420643.163685152] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420643.256934839] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420643.258461315] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420643.264804567] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420643.265830132] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420643.266607594] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420643.267394304] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420643.268173462] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420643.355038264] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420643.356670855] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420643.363079709] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420643.364127258] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420643.364936465] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420643.365720712] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420643.366493309] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420643.455886183] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420643.457561655] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420643.460740337] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420643.461562856] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420643.462317118] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420643.463111156] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420643.463880010] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420643.557124833] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420643.558641452] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420643.561909929] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420643.562770786] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420643.563502262] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420643.564191850] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420643.564911358] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420643.654885241] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420643.656510087] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420643.659753155] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420643.660781728] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420643.662276042] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420643.663262374] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420643.664128159] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420643.760664948] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420643.762097404] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420643.765248086] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420643.766042412] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420643.766787745] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420643.767501686] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420643.768225802] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420643.855860770] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420643.857515153] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420643.862452957] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420643.863725889] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420643.864469462] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420643.865178507] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420643.865892127] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420643.955313705] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420643.957273441] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420643.960537342] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420643.961509593] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420643.962241006] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420643.962982819] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420643.963709784] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420644.056079190] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420644.057557536] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420644.063121502] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420644.064212029] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420644.064982099] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420644.065720584] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420644.066466205] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420644.156282932] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420644.157864545] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420644.162533637] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420644.163698790] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420644.164489437] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420644.165550587] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420644.166485301] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420644.255358545] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420644.256798042] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420644.260405856] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420644.261261561] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420644.261959468] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420644.262640768] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420644.263397077] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420644.355565070] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420644.357175388] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420644.362110504] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420644.363044803] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420644.363776056] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420644.364480044] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420644.365197952] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420644.456120054] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420644.457761220] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420644.461313993] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420644.462215075] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420644.463028506] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420644.463719694] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420644.464462083] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420644.555049903] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420644.556526425] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420644.561455909] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420644.562337278] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420644.563135413] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420644.563820840] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420644.564547389] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420644.655123785] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420644.656641940] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420644.660315228] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420644.661144916] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420644.661891657] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420644.662608157] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420644.663659323] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420644.756034490] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420644.758153846] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420644.762396047] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420644.763323337] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420644.764004156] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420644.764674703] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420644.765385476] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420644.855819819] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420644.857450074] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420644.861795477] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420644.862626445] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420644.863360098] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420644.864050037] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420644.864765161] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420644.955661311] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420644.957244812] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420644.961085433] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420644.961964786] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420644.962764648] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420644.963532382] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420644.964295828] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420645.057671152] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420645.060215256] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420645.063672858] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420645.064515346] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420645.065237062] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420645.065952571] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420645.066705040] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420645.154915930] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420645.156472038] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420645.162201512] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420645.163181412] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420645.163910329] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420645.164605037] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420645.165321441] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420645.255314717] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420645.257033870] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420645.260879707] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420645.261725907] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420645.262473448] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420645.263326593] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420645.264090358] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420645.355043086] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420645.356548152] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420645.360772144] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420645.361639273] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420645.362366974] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420645.363081202] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420645.363786566] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420645.455343534] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420645.458506632] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420645.461771717] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420645.462606269] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420645.463360146] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420645.464077862] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420645.464805435] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420645.556187295] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420645.558297115] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420645.563295784] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420645.564193762] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420645.564963160] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420645.565656492] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420645.566372992] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420645.660228682] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420645.661724180] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420645.664972912] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420645.665829513] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420645.666597759] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420645.667377365] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420645.668146379] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420645.756065132] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420645.757672409] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420645.761077114] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420645.761932690] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420645.762930831] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420645.763761830] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420645.764550557] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420645.855760251] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420645.857352296] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420645.860715592] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420645.861583681] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420645.862764386] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420645.863581465] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420645.864362127] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420645.959648642] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420645.961299601] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420645.967472256] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420645.968588736] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420645.969300500] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420645.970521943] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420645.971306829] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420646.056823818] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9560000896453857])
[INFO] [1753420646.058887397] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95600009]
[INFO] [1753420646.064175035] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420646.065059316] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420646.065812202] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420646.067929350] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420646.068724732] [solver_node]: 求解器返回结果: [((5.222179426742401, 5.224179426742402), (4.846277078287307, 4.848277078287308), -1.3984801263313331), ((5.115173116916521, 5.117173116916522), (4.813912269990957, 4.815912269990958), -1.8385136250166454), ((4.773820573257598, 4.775820573257598), (3.1517229217126936, 3.1537229217126934), 1.74311252725846), ((4.880826883083479, 4.88282688308348), (3.184087730009043, 3.1860877300090427), 1.3030790285731473)]
[INFO] [1753420646.156651134] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9489998817443848])
[INFO] [1753420646.158680856] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94899988]
[INFO] [1753420646.163526338] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420646.165018956] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420646.166284304] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420646.167043493] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420646.167825788] [solver_node]: 求解器返回结果: [((5.225707675946761, 5.227707675946761), (4.850162900210999, 4.852162900211), -1.402371325765606), ((5.1204519351863675, 5.122451935186368), (4.818269040599788, 4.820269040599789), -1.8347039177605646), ((4.770292324053238, 4.772292324053239), (3.147837099789001, 3.149837099789001), 1.7392213278241873), ((4.875548064813632, 4.877548064813633), (3.1797309594002114, 3.1817309594002112), 1.3068887358292283)]
[INFO] [1753420646.256517331] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9489998817443848])
[INFO] [1753420646.258004062] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94899988]
[INFO] [1753420646.261172184] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420646.262114162] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420646.262858984] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420646.263564028] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420646.264293200] [solver_node]: 求解器返回结果: [((5.225707675946761, 5.227707675946761), (4.850162900210999, 4.852162900211), -1.402371325765606), ((5.1204519351863675, 5.122451935186368), (4.818269040599788, 4.820269040599789), -1.8347039177605646), ((4.770292324053238, 4.772292324053239), (3.147837099789001, 3.149837099789001), 1.7392213278241873), ((4.875548064813632, 4.877548064813633), (3.1797309594002114, 3.1817309594002112), 1.3068887358292283)]
[INFO] [1753420646.355535984] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9489998817443848])
[INFO] [1753420646.357067452] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94899988]
[INFO] [1753420646.361647998] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420646.362963907] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420646.363671224] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420646.364366827] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420646.365080704] [solver_node]: 求解器返回结果: [((5.225707675946761, 5.227707675946761), (4.850162900210999, 4.852162900211), -1.402371325765606), ((5.1204519351863675, 5.122451935186368), (4.818269040599788, 4.820269040599789), -1.8347039177605646), ((4.770292324053238, 4.772292324053239), (3.147837099789001, 3.149837099789001), 1.7392213278241873), ((4.875548064813632, 4.877548064813633), (3.1797309594002114, 3.1817309594002112), 1.3068887358292283)]
[INFO] [1753420646.459637950] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9489998817443848])
[INFO] [1753420646.461138440] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94899988]
[INFO] [1753420646.464670957] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420646.465509861] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420646.466221145] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420646.466996047] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420646.467717635] [solver_node]: 求解器返回结果: [((5.225707675946761, 5.227707675946761), (4.850162900210999, 4.852162900211), -1.402371325765606), ((5.1204519351863675, 5.122451935186368), (4.818269040599788, 4.820269040599789), -1.8347039177605646), ((4.770292324053238, 4.772292324053239), (3.147837099789001, 3.149837099789001), 1.7392213278241873), ((4.875548064813632, 4.877548064813633), (3.1797309594002114, 3.1817309594002112), 1.3068887358292283)]
[INFO] [1753420646.558562680] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9489998817443848])
[INFO] [1753420646.560113156] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94899988]
[INFO] [1753420646.563226749] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420646.564024595] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420646.564725191] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420646.565410203] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420646.566341365] [solver_node]: 求解器返回结果: [((5.225707675946761, 5.227707675946761), (4.850162900210999, 4.852162900211), -1.402371325765606), ((5.1204519351863675, 5.122451935186368), (4.818269040599788, 4.820269040599789), -1.8347039177605646), ((4.770292324053238, 4.772292324053239), (3.147837099789001, 3.149837099789001), 1.7392213278241873), ((4.875548064813632, 4.877548064813633), (3.1797309594002114, 3.1817309594002112), 1.3068887358292283)]
[INFO] [1753420646.655698496] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420646.657331758] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420646.660802769] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420646.661763692] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420646.662538338] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420646.663333113] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420646.664085454] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420646.758816977] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420646.760530082] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420646.764436113] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420646.765275017] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420646.765961468] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420646.766645968] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420646.767388197] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420646.857055096] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420646.858658086] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420646.863593490] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420646.864452394] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420646.865152094] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420646.865842066] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420646.866555686] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420646.955082649] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420646.956993327] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420646.960338670] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420646.961940892] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420646.962746291] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420646.963463879] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420646.964179611] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420647.058047398] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420647.061253666] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420647.064555839] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420647.065372471] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420647.066075467] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420647.066790175] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420647.067498995] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420647.154738690] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420647.156180651] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420647.159269443] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420647.160052569] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420647.160761581] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420647.161455713] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420647.162176341] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420647.255068101] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420647.256767189] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420647.259975088] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420647.260776935] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420647.261489275] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420647.262197616] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420647.262944005] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420647.355475274] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420647.357013782] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420647.361058089] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420647.361876576] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420647.362610453] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420647.363372395] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420647.364106143] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420647.457432187] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420647.459401331] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420647.463004218] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420647.463869202] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420647.464600871] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420647.465321532] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420647.466197780] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420647.554658150] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420647.558814620] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420647.562739020] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420647.563666246] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420647.564454012] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420647.565337686] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420647.566117772] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420647.655052107] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420647.657761976] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420647.661174521] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420647.662000656] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420647.662742693] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420647.663452890] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420647.664165614] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420647.755621237] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420647.757215010] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420647.760653476] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420647.761521468] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420647.762268882] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420647.763038727] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420647.763786813] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420647.855192962] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420647.856988533] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420647.860349237] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420647.861260270] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420647.862097670] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420647.862957791] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420647.863702484] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420647.957012911] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420647.958578300] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420647.961798839] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420647.962744626] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420647.963762799] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420647.964763180] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420647.965727591] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420648.055047889] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420648.056669856] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420648.060581903] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420648.061440615] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420648.062141595] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420648.063112055] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420648.063888429] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420648.156648025] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420648.158470381] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420648.161741770] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420648.162573986] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420648.163348152] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420648.164117005] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420648.164914180] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420648.256757783] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420648.258520169] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420648.262056365] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420648.262924358] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420648.263688604] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420648.264426129] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420648.265174342] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420648.357267359] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420648.358933519] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420648.362111177] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420648.362964001] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420648.363685206] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420648.364389802] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420648.365092894] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420648.455440038] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420648.456987538] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420648.460353713] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420648.461188585] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420648.462742709] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420648.463509547] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420648.464266241] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420648.555261083] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420648.556673411] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420648.559742234] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420648.560662452] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420648.561361672] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420648.562040348] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420648.562757648] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420648.656302195] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420648.659031648] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420648.664439194] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420648.666877439] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420648.667747736] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420648.668703251] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420648.669472073] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420648.756638454] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420648.758148545] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420648.761546562] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420648.762496957] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420648.767303558] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420648.768098780] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420648.768866066] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420648.856251014] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420648.858110075] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420648.863322671] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420648.864211432] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420648.865395434] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420648.866143135] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420648.867037496] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420648.955165441] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420648.956667340] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420648.959938697] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420648.960758944] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420648.962013060] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420648.963204710] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420648.963966779] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420649.056374590] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420649.058020461] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420649.063494153] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420649.064435811] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420649.065223802] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420649.065947950] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420649.066725124] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420649.154697993] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420649.156395258] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420649.159929502] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420649.160878905] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420649.161647503] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420649.162395044] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420649.165240469] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420649.256876802] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420649.258296203] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420649.261418787] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420649.262204314] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420649.262933358] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420649.263629666] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420649.264336438] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420649.355165517] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420649.356588949] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420649.360169755] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420649.363263155] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420649.365091687] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420649.366026433] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420649.367192130] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420649.456330249] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420649.458865425] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420649.463177707] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420649.463994434] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420649.465263687] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420649.465994939] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420649.467247199] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420649.554840953] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420649.556529161] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420649.560691167] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420649.561863649] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420649.563727766] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420649.564919512] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420649.565932116] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420649.655936019] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.947000026702881])
[INFO] [1753420649.657760167] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.94700003]
[INFO] [1753420649.661125447] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420649.665331422] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420649.666973261] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420649.668376021] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420649.670122791] [solver_node]: 求解器返回结果: [((5.226713310821282, 5.228713310821282), (4.851273007052526, 4.853273007052526), -1.4034966785761185), ((5.1219650979777045, 5.123965097977705), (4.819516296991929, 4.82151629699193), -1.8336018716094866), ((4.769286689178717, 4.771286689178718), (3.146726992947474, 3.148726992947474), 1.7380959750136749), ((4.874034902022294, 4.876034902022295), (3.1784837030080704, 3.18048370300807), 1.3079907819803067)]
[INFO] [1753420649.755636038] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420649.757207090] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95499992]
[INFO] [1753420649.760608403] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420649.761464555] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420649.762928885] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420649.766114832] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420649.769781752] [solver_node]: 求解器返回结果: [((5.22268428543129, 5.224684285431291), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.115925666204313, 5.1179256662043136), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.773315714568708, 4.775315714568709), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.880074333795686, 4.8820743337956864), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420649.854796169] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420649.856415063] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95499992]
[INFO] [1753420649.860533804] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420649.866020264] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420649.867144648] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420649.869384935] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420649.870882578] [solver_node]: 求解器返回结果: [((5.22268428543129, 5.224684285431291), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.115925666204313, 5.1179256662043136), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.773315714568708, 4.775315714568709), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.880074333795686, 4.8820743337956864), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420649.955899363] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420649.958092161] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95499992]
[INFO] [1753420649.961691336] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420649.962538432] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420649.963278069] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420649.963963688] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420649.964703197] [solver_node]: 求解器返回结果: [((5.22268428543129, 5.224684285431291), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.115925666204313, 5.1179256662043136), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.773315714568708, 4.775315714568709), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.880074333795686, 4.8820743337956864), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420650.054820000] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420650.056353515] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95499992]
[INFO] [1753420650.059650889] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420650.060596612] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420650.061407579] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420650.062285716] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420650.063250191] [solver_node]: 求解器返回结果: [((5.22268428543129, 5.224684285431291), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.115925666204313, 5.1179256662043136), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.773315714568708, 4.775315714568709), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.880074333795686, 4.8820743337956864), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420650.154957695] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420650.156624622] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95499992]
[INFO] [1753420650.160050096] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420650.164088675] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420650.165320198] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420650.166152093] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420650.167032726] [solver_node]: 求解器返回结果: [((5.2216986017215, 5.223698601721501), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.11496075724302, 5.116960757243021), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.7743013982784985, 4.776301398278499), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.881039242756978, 4.883039242756979), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420650.255063454] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420650.256857393] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95499992]
[INFO] [1753420650.261555382] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420650.262420783] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420650.263219974] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420650.263922490] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420650.264667503] [solver_node]: 求解器返回结果: [((5.2216986017215, 5.223698601721501), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.11496075724302, 5.116960757243021), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.7743013982784985, 4.776301398278499), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.881039242756978, 4.883039242756979), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420650.354718159] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420650.356134648] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95499992]
[INFO] [1753420650.359257969] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420650.360032935] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420650.360720026] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420650.362161027] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420650.364318144] [solver_node]: 求解器返回结果: [((5.2216986017215, 5.223698601721501), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.11496075724302, 5.116960757243021), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.7743013982784985, 4.776301398278499), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.881039242756978, 4.883039242756979), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420650.454720203] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.928999900817871, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420650.456250551] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.9289999  4.61299992 2.95499992]
[INFO] [1753420650.459601430] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420650.460448814] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420650.461180323] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420650.461876247] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420650.462736207] [solver_node]: 求解器返回结果: [((5.220713387832351, 5.222713387832352), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.113996308200202, 5.115996308200202), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.775286612167648, 4.777286612167648), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.882003691799798, 4.884003691799799), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420650.556209201] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.928999900817871, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420650.557780606] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.9289999  4.61299992 2.95499992]
[INFO] [1753420650.561624043] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420650.562494212] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420650.567410992] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420650.570575338] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420650.571463331] [solver_node]: 求解器返回结果: [((5.220713387832351, 5.222713387832352), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.113996308200202, 5.115996308200202), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.775286612167648, 4.777286612167648), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.882003691799798, 4.884003691799799), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420650.654843974] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.928999900817871, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420650.656544502] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.9289999  4.61299992 2.95499992]
[INFO] [1753420650.660226719] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420650.661149721] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420650.661890798] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420650.662600898] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420650.663414586] [solver_node]: 求解器返回结果: [((5.220713387832351, 5.222713387832352), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.113996308200202, 5.115996308200202), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.775286612167648, 4.777286612167648), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.882003691799798, 4.884003691799799), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420650.754894147] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.928999900817871, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420650.756460367] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.9289999  4.61299992 2.95499992]
[INFO] [1753420650.759876849] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420650.760759050] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420650.761548192] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420650.762321366] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420650.763130125] [solver_node]: 求解器返回结果: [((5.220713387832351, 5.222713387832352), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.113996308200202, 5.115996308200202), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.775286612167648, 4.777286612167648), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.882003691799798, 4.884003691799799), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420650.855282281] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.928999900817871, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420650.856887735] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.9289999  4.61299992 2.95499992]
[INFO] [1753420650.860903881] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420650.862141421] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420650.863433425] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420650.864304522] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420650.865179043] [solver_node]: 求解器返回结果: [((5.220713387832351, 5.222713387832352), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.113996308200202, 5.115996308200202), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.775286612167648, 4.777286612167648), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.882003691799798, 4.884003691799799), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420650.955062943] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.928999900817871, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420650.956736046] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.9289999  4.61299992 2.95499992]
[INFO] [1753420650.962272108] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420650.964279493] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420650.965236352] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420650.966067064] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420650.966913392] [solver_node]: 求解器返回结果: [((5.220713387832351, 5.222713387832352), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.113996308200202, 5.115996308200202), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.775286612167648, 4.777286612167648), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.882003691799798, 4.884003691799799), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420651.055147133] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420651.056640328] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95499992]
[INFO] [1753420651.059894564] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420651.060733756] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420651.061473777] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420651.062257927] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420651.063067934] [solver_node]: 求解器返回结果: [((5.2216986017215, 5.223698601721501), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.11496075724302, 5.116960757243021), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.7743013982784985, 4.776301398278499), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.881039242756978, 4.883039242756979), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420651.154644203] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420651.156113813] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95499992]
[INFO] [1753420651.160201577] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420651.161502254] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420651.162592237] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420651.163511143] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420651.166256085] [solver_node]: 求解器返回结果: [((5.2216986017215, 5.223698601721501), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.11496075724302, 5.116960757243021), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.7743013982784985, 4.776301398278499), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.881039242756978, 4.883039242756979), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420651.255105077] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420651.256527805] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95499992]
[INFO] [1753420651.259626165] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420651.260419852] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420651.261104031] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420651.261781842] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420651.263276637] [solver_node]: 求解器返回结果: [((5.2216986017215, 5.223698601721501), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.11496075724302, 5.116960757243021), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.7743013982784985, 4.776301398278499), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.881039242756978, 4.883039242756979), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420651.354655460] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420651.356176847] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95499992]
[INFO] [1753420651.360193890] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420651.361433413] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420651.362522308] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420651.363361852] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420651.364278070] [solver_node]: 求解器返回结果: [((5.2216986017215, 5.223698601721501), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.11496075724302, 5.116960757243021), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.7743013982784985, 4.776301398278499), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.881039242756978, 4.883039242756979), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420651.454652768] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420651.456182188] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95499992]
[INFO] [1753420651.460108795] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420651.461398848] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420651.462283129] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420651.463066512] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420651.463842982] [solver_node]: 求解器返回结果: [((5.2216986017215, 5.223698601721501), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.11496075724302, 5.116960757243021), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.7743013982784985, 4.776301398278499), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.881039242756978, 4.883039242756979), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420651.555442707] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420651.557631505] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95499992]
[INFO] [1753420651.561337883] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420651.562211571] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420651.562939144] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420651.564411730] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420651.566477069] [solver_node]: 求解器返回结果: [((5.2216986017215, 5.223698601721501), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.11496075724302, 5.116960757243021), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.7743013982784985, 4.776301398278499), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.881039242756978, 4.883039242756979), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420651.655157319] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420651.656980187] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95499992]
[INFO] [1753420651.660303705] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420651.661137137] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420651.661846405] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420651.662537881] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420651.663298479] [solver_node]: 求解器返回结果: [((5.2216986017215, 5.223698601721501), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.11496075724302, 5.116960757243021), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.7743013982784985, 4.776301398278499), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.881039242756978, 4.883039242756979), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420651.755954554] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420651.757521703] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95499992]
[INFO] [1753420651.761063339] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420651.761999622] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420651.762825629] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420651.763568403] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420651.764323144] [solver_node]: 求解器返回结果: [((5.2216986017215, 5.223698601721501), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.11496075724302, 5.116960757243021), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.7743013982784985, 4.776301398278499), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.881039242756978, 4.883039242756979), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420651.856239166] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420651.858032401] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95499992]
[INFO] [1753420651.861706778] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420651.862613652] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420651.863428139] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420651.864248002] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420651.865295840] [solver_node]: 求解器返回结果: [((5.2216986017215, 5.223698601721501), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.11496075724302, 5.116960757243021), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.7743013982784985, 4.776301398278499), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.881039242756978, 4.883039242756979), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420651.955991860] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420651.957712357] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95499992]
[INFO] [1753420651.961924668] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420651.963330340] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420651.964185469] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420651.964995444] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420651.965787242] [solver_node]: 求解器返回结果: [((5.2216986017215, 5.223698601721501), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.11496075724302, 5.116960757243021), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.7743013982784985, 4.776301398278499), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.881039242756978, 4.883039242756979), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420652.055320765] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420652.056871817] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95499992]
[INFO] [1753420652.060550034] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420652.063328289] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420652.064269212] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420652.065078707] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420652.065843241] [solver_node]: 求解器返回结果: [((5.2216986017215, 5.223698601721501), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.11496075724302, 5.116960757243021), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.7743013982784985, 4.776301398278499), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.881039242756978, 4.883039242756979), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420652.161073790] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420652.162615114] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95499992]
[INFO] [1753420652.166089132] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420652.171785903] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420652.173985517] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420652.174886951] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420652.175664957] [solver_node]: 求解器返回结果: [((5.2216986017215, 5.223698601721501), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.11496075724302, 5.116960757243021), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.7743013982784985, 4.776301398278499), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.881039242756978, 4.883039242756979), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420652.254660452] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420652.256243281] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95499992]
[INFO] [1753420652.260017245] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420652.261257088] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420652.262219003] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420652.264455259] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420652.268056545] [solver_node]: 求解器返回结果: [((5.22268428543129, 5.224684285431291), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.115925666204313, 5.1179256662043136), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.773315714568708, 4.775315714568709), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.880074333795686, 4.8820743337956864), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420652.355012491] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420652.356599256] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95499992]
[INFO] [1753420652.360561961] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420652.361660008] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420652.362530753] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420652.363429499] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420652.364696447] [solver_node]: 求解器返回结果: [((5.22268428543129, 5.224684285431291), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.115925666204313, 5.1179256662043136), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.773315714568708, 4.775315714568709), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.880074333795686, 4.8820743337956864), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420652.456441329] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420652.458051487] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95499992]
[INFO] [1753420652.461591747] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420652.462842727] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420652.463780162] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420652.464760733] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420652.465859389] [solver_node]: 求解器返回结果: [((5.22268428543129, 5.224684285431291), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.115925666204313, 5.1179256662043136), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.773315714568708, 4.775315714568709), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.880074333795686, 4.8820743337956864), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420652.554596217] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420652.556093508] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95499992]
[INFO] [1753420652.560022356] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420652.561637826] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420652.563885569] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420652.564938431] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420652.565873274] [solver_node]: 求解器返回结果: [((5.22268428543129, 5.224684285431291), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.115925666204313, 5.1179256662043136), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.773315714568708, 4.775315714568709), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.880074333795686, 4.8820743337956864), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420652.656119969] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420652.657670574] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95499992]
[INFO] [1753420652.661045710] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420652.661951623] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420652.662755390] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420652.663515380] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420652.664297002] [solver_node]: 求解器返回结果: [((5.22268428543129, 5.224684285431291), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.115925666204313, 5.1179256662043136), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.773315714568708, 4.775315714568709), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.880074333795686, 4.8820743337956864), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420652.754860059] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420652.756322660] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95499992]
[INFO] [1753420652.759578625] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420652.760431673] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420652.761172814] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420652.761912291] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420652.762703450] [solver_node]: 求解器返回结果: [((5.22268428543129, 5.224684285431291), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.115925666204313, 5.1179256662043136), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.773315714568708, 4.775315714568709), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.880074333795686, 4.8820743337956864), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420652.854711603] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420652.856254431] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95499992]
[INFO] [1753420652.860208048] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420652.861297199] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420652.862205545] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420652.865367906] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420652.867758438] [solver_node]: 求解器返回结果: [((5.22268428543129, 5.224684285431291), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.115925666204313, 5.1179256662043136), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.773315714568708, 4.775315714568709), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.880074333795686, 4.8820743337956864), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420652.954714192] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420652.956286621] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95499992]
[INFO] [1753420652.959657469] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420652.960543894] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420652.961299436] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420652.962003296] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420652.962759797] [solver_node]: 求解器返回结果: [((5.22268428543129, 5.224684285431291), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.115925666204313, 5.1179256662043136), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.773315714568708, 4.775315714568709), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.880074333795686, 4.8820743337956864), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420653.055171835] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420653.057163571] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95499992]
[INFO] [1753420653.060484466] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420653.063986133] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420653.064917904] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420653.065700646] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420653.066475932] [solver_node]: 求解器返回结果: [((5.22268428543129, 5.224684285431291), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.115925666204313, 5.1179256662043136), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.773315714568708, 4.775315714568709), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.880074333795686, 4.8820743337956864), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420653.154591848] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420653.156145428] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95499992]
[INFO] [1753420653.159723226] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420653.160623251] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420653.161346376] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420653.162032187] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420653.162920341] [solver_node]: 求解器返回结果: [((5.22268428543129, 5.224684285431291), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.115925666204313, 5.1179256662043136), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.773315714568708, 4.775315714568709), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.880074333795686, 4.8820743337956864), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420653.254635975] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420653.256174194] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95499992]
[INFO] [1753420653.260020096] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420653.261287428] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420653.263225627] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420653.264663876] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420653.265701729] [solver_node]: 求解器返回结果: [((5.22268428543129, 5.224684285431291), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.115925666204313, 5.1179256662043136), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.773315714568708, 4.775315714568709), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.880074333795686, 4.8820743337956864), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420653.354814249] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420653.356461048] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95499992]
[INFO] [1753420653.359686740] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420653.361288609] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420653.362051095] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420653.363244857] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420653.364780421] [solver_node]: 求解器返回结果: [((5.22268428543129, 5.224684285431291), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.115925666204313, 5.1179256662043136), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.773315714568708, 4.775315714568709), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.880074333795686, 4.8820743337956864), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420653.454959435] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420653.456507223] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95499992]
[INFO] [1753420653.460470280] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420653.462589540] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420653.463480829] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420653.464558332] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420653.465569305] [solver_node]: 求解器返回结果: [((5.22268428543129, 5.224684285431291), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.115925666204313, 5.1179256662043136), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.773315714568708, 4.775315714568709), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.880074333795686, 4.8820743337956864), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420653.555078700] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420653.558900697] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95499992]
[INFO] [1753420653.563756579] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420653.564663613] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420653.565441811] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420653.566178024] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420653.566960702] [solver_node]: 求解器返回结果: [((5.22268428543129, 5.224684285431291), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.115925666204313, 5.1179256662043136), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.773315714568708, 4.775315714568709), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.880074333795686, 4.8820743337956864), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420653.654600284] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420653.656180777] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95499992]
[INFO] [1753420653.659689645] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420653.660604807] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420653.661404158] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420653.662129874] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420653.662919529] [solver_node]: 求解器返回结果: [((5.22268428543129, 5.224684285431291), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.115925666204313, 5.1179256662043136), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.773315714568708, 4.775315714568709), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.880074333795686, 4.8820743337956864), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420653.755196875] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9549999237060547])
[INFO] [1753420653.756649332] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.95499992]
[INFO] [1753420653.759976466] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420653.760800522] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420653.762582365] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420653.763996613] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420653.764977697] [solver_node]: 求解器返回结果: [((5.22268428543129, 5.224684285431291), (4.8468322685609655, 4.848832268560966), -1.399031613496108), ((5.115925666204313, 5.1179256662043136), (4.814533894842117, 4.8165338948421175), -1.8379737726642391), ((4.773315714568708, 4.775315714568709), (3.1511677314390334, 3.153167731439033), 1.742561040093685), ((4.880074333795686, 4.8820743337956864), (3.183466105157883, 3.1854661051578828), 1.303618880925554)]
[INFO] [1753420653.856746036] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420653.858353698] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420653.861854310] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420653.865873688] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420653.866859892] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420653.867619626] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420653.868349054] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420653.955111075] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.931000232696533, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420653.956611662] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.93100023 4.61299992 2.954     ]
[INFO] [1753420653.959796777] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420653.960677250] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420653.961402582] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420653.963037861] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420653.964852984] [solver_node]: 求解器返回结果: [((5.223188777142457, 5.225188777142458), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.116678587792815, 5.118678587792815), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.77281122285754, 4.774811222857541), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.879321412207184, 4.881321412207185), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420654.055070144] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420654.056698574] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.954     ]
[INFO] [1753420654.060280308] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420654.061495351] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420654.062708249] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420654.063714742] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420654.064702578] [solver_node]: 求解器返回结果: [((5.222202999056961, 5.224202999056962), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.115713536032679, 5.11771353603268), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.773797000943037, 4.7757970009430375), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.8802864639673205, 4.882286463967321), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420654.155186818] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420654.156852337] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.954     ]
[INFO] [1753420654.160844067] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420654.162074022] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420654.163099939] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420654.165093372] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420654.166381408] [solver_node]: 求解器返回结果: [((5.222202999056961, 5.224202999056962), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.115713536032679, 5.11771353603268), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.773797000943037, 4.7757970009430375), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.8802864639673205, 4.882286463967321), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420654.255108094] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9539999961853027])
[INFO] [1753420654.256714347] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.954     ]
[INFO] [1753420654.261328783] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420654.262388557] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420654.263409162] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420654.264411334] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420654.265372226] [solver_node]: 求解器返回结果: [((5.222202999056961, 5.224202999056962), (4.847387328964198, 4.849387328964199), -1.399584441578872), ((5.115713536032679, 5.11771353603268), (4.81515565497631, 4.817155654976311), -1.837432579455852), ((4.773797000943037, 4.7757970009430375), (3.1506126710358004, 3.1526126710358002), 1.7420082120109206), ((4.8802864639673205, 4.882286463967321), (3.1828443450236894, 3.184844345023689), 1.3041600741339407)]
[INFO] [1753420654.354713809] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9570000171661377])
[INFO] [1753420654.356233756] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95700002]
[INFO] [1753420654.360331025] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420654.362431084] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420654.363383495] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420654.365120345] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420654.366530625] [solver_node]: 求解器返回结果: [((5.220688949784603, 5.222688949784604), (4.845722023742055, 4.8477220237420555), -1.3979302320597267), ((5.113456672151208, 5.1154566721512085), (4.813291075776115, 4.815291075776115), -1.839051890083848), ((4.775311050215396, 4.777311050215396), (3.152277976257945, 3.1542779762579447), 1.743662421530066), ((4.882543327848791, 4.8845433278487915), (3.1847089242238846, 3.1867089242238844), 1.3025407635059456)]
[INFO] [1753420654.454701455] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9570000171661377])
[INFO] [1753420654.456207769] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95700002]
[INFO] [1753420654.460407921] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420654.461722550] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420654.463102366] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420654.464053337] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420654.464880400] [solver_node]: 求解器返回结果: [((5.220688949784603, 5.222688949784604), (4.845722023742055, 4.8477220237420555), -1.3979302320597267), ((5.113456672151208, 5.1154566721512085), (4.813291075776115, 4.815291075776115), -1.839051890083848), ((4.775311050215396, 4.777311050215396), (3.152277976257945, 3.1542779762579447), 1.743662421530066), ((4.882543327848791, 4.8845433278487915), (3.1847089242238846, 3.1867089242238844), 1.3025407635059456)]
[INFO] [1753420654.554723053] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9570000171661377])
[INFO] [1753420654.556191959] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95700002]
[INFO] [1753420654.559657146] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420654.560959583] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420654.562040158] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420654.564168378] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420654.565213432] [solver_node]: 求解器返回结果: [((5.220688949784603, 5.222688949784604), (4.845722023742055, 4.8477220237420555), -1.3979302320597267), ((5.113456672151208, 5.1154566721512085), (4.813291075776115, 4.815291075776115), -1.839051890083848), ((4.775311050215396, 4.777311050215396), (3.152277976257945, 3.1542779762579447), 1.743662421530066), ((4.882543327848791, 4.8845433278487915), (3.1847089242238846, 3.1867089242238844), 1.3025407635059456)]
[INFO] [1753420654.654622889] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9570000171661377])
[INFO] [1753420654.656139060] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95700002]
[INFO] [1753420654.660140230] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420654.661423338] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420654.662584011] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420654.663554791] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420654.664366430] [solver_node]: 求解器返回结果: [((5.220688949784603, 5.222688949784604), (4.845722023742055, 4.8477220237420555), -1.3979302320597267), ((5.113456672151208, 5.1154566721512085), (4.813291075776115, 4.815291075776115), -1.839051890083848), ((4.775311050215396, 4.777311050215396), (3.152277976257945, 3.1542779762579447), 1.743662421530066), ((4.882543327848791, 4.8845433278487915), (3.1847089242238846, 3.1867089242238844), 1.3025407635059456)]
[INFO] [1753420654.756269878] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9570000171661377])
[INFO] [1753420654.757879492] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95700002]
[INFO] [1753420654.761789971] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420654.763054807] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420654.764421086] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420654.765304215] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420654.766068301] [solver_node]: 求解器返回结果: [((5.220688949784603, 5.222688949784604), (4.845722023742055, 4.8477220237420555), -1.3979302320597267), ((5.113456672151208, 5.1154566721512085), (4.813291075776115, 4.815291075776115), -1.839051890083848), ((4.775311050215396, 4.777311050215396), (3.152277976257945, 3.1542779762579447), 1.743662421530066), ((4.882543327848791, 4.8845433278487915), (3.1847089242238846, 3.1867089242238844), 1.3025407635059456)]
[INFO] [1753420654.857217711] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.950000047683716])
[INFO] [1753420654.859046467] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95000005]
[INFO] [1753420654.865998729] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420654.868438607] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420654.869417675] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420654.870280163] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420654.871119771] [solver_node]: 求解器返回结果: [((5.224218185556349, 5.22621818555635), (4.849607709113819, 4.85160770911382), -1.4018108332997388), ((5.118730406020887, 5.120730406020888), (4.817645699025925, 4.8196456990259255), -1.8352527583821017), ((4.771781814443649, 4.77378181444365), (3.1483922908861808, 3.1503922908861806), 1.7397818202900541), ((4.877269593979111, 4.879269593979112), (3.180354300974075, 3.1823543009740747), 1.3063398952076912)]
[INFO] [1753420654.954874123] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.950000047683716])
[INFO] [1753420654.957181773] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95000005]
[INFO] [1753420654.962147194] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420654.963037939] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420654.964193492] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420654.964917385] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420654.965659582] [solver_node]: 求解器返回结果: [((5.224218185556349, 5.22621818555635), (4.849607709113819, 4.85160770911382), -1.4018108332997388), ((5.118730406020887, 5.120730406020888), (4.817645699025925, 4.8196456990259255), -1.8352527583821017), ((4.771781814443649, 4.77378181444365), (3.1483922908861808, 3.1503922908861806), 1.7397818202900541), ((4.877269593979111, 4.879269593979112), (3.180354300974075, 3.1823543009740747), 1.3063398952076912)]
[INFO] [1753420655.055304886] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.950000047683716])
[INFO] [1753420655.056990790] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95000005]
[INFO] [1753420655.060314404] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420655.061166845] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420655.061908594] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420655.062644039] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420655.063438589] [solver_node]: 求解器返回结果: [((5.224218185556349, 5.22621818555635), (4.849607709113819, 4.85160770911382), -1.4018108332997388), ((5.118730406020887, 5.120730406020888), (4.817645699025925, 4.8196456990259255), -1.8352527583821017), ((4.771781814443649, 4.77378181444365), (3.1483922908861808, 3.1503922908861806), 1.7397818202900541), ((4.877269593979111, 4.879269593979112), (3.180354300974075, 3.1823543009740747), 1.3063398952076912)]
[INFO] [1753420655.154871784] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.950000047683716])
[INFO] [1753420655.156371379] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95000005]
[INFO] [1753420655.160347044] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420655.161597672] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420655.162556195] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420655.163394683] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420655.164974984] [solver_node]: 求解器返回结果: [((5.224218185556349, 5.22621818555635), (4.849607709113819, 4.85160770911382), -1.4018108332997388), ((5.118730406020887, 5.120730406020888), (4.817645699025925, 4.8196456990259255), -1.8352527583821017), ((4.771781814443649, 4.77378181444365), (3.1483922908861808, 3.1503922908861806), 1.7397818202900541), ((4.877269593979111, 4.879269593979112), (3.180354300974075, 3.1823543009740747), 1.3063398952076912)]
[INFO] [1753420655.255919589] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.950000047683716])
[INFO] [1753420655.257417776] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.95000005]
[INFO] [1753420655.260673836] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420655.261532357] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420655.262266586] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420655.263063312] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420655.263830630] [solver_node]: 求解器返回结果: [((5.224218185556349, 5.22621818555635), (4.849607709113819, 4.85160770911382), -1.4018108332997388), ((5.118730406020887, 5.120730406020888), (4.817645699025925, 4.8196456990259255), -1.8352527583821017), ((4.771781814443649, 4.77378181444365), (3.1483922908861808, 3.1503922908861806), 1.7397818202900541), ((4.877269593979111, 4.879269593979112), (3.180354300974075, 3.1823543009740747), 1.3063398952076912)]
[INFO] [1753420655.354628831] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420655.356181803] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420655.359664143] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420655.360565480] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420655.361332766] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420655.362151829] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420655.363041775] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420655.457180135] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420655.458729203] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420655.462422396] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420655.463310069] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420655.464063531] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420655.464782911] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420655.465528500] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420655.554708479] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420655.556328781] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420655.560406434] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420655.562807206] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420655.564308785] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420655.565378575] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420655.566364683] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420655.654808961] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420655.656374062] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420655.661084628] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420655.662170259] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420655.663171279] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420655.664039976] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420655.664984995] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420655.754685373] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420655.756249289] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420655.760308925] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420655.761623202] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420655.762626719] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420655.766810326] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420655.767828595] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420655.855636087] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420655.857299270] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420655.861489309] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420655.862902821] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420655.863743325] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420655.864544756] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420655.865342379] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420655.954724636] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420655.956289256] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420655.960050515] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420655.960987406] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420655.961752260] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420655.962492697] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420655.963404499] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420656.055314700] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420656.057422856] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420656.062073388] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420656.064778553] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420656.065649586] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420656.067578153] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420656.073076677] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420656.155326316] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420656.157379814] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420656.161306198] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420656.163224620] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420656.164340556] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420656.165226053] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420656.166060829] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420656.254693529] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420656.256214756] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420656.262007881] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420656.263290062] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420656.264897148] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420656.265940185] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420656.266978519] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420656.354867646] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420656.356834422] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420656.361000972] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420656.362004201] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420656.362978949] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420656.363780603] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420656.364552145] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420656.454742778] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420656.456495308] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420656.461008908] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420656.462374771] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420656.463284877] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420656.465032863] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420656.467151675] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420656.554705912] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420656.556263013] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420656.559859019] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420656.561054701] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420656.561996616] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420656.563034533] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420656.563879037] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420656.654643030] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420656.656163905] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420656.660138450] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420656.661341365] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420656.662494710] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420656.663365166] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420656.664181894] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420656.755452237] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420656.757424165] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420656.761929573] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420656.764613745] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420656.767134329] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420656.768035475] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420656.768844906] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420656.854630869] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420656.856108287] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420656.859439710] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420656.860707298] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420656.861728095] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420656.862825054] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420656.864474381] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420656.954651189] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420656.956438056] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420656.959684356] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420656.960511036] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420656.961262929] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420656.961969061] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420656.965521899] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420657.054633300] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420657.056180640] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420657.059643363] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420657.060535388] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420657.061258577] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420657.063059556] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420657.065008380] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420657.155023872] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420657.156565420] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420657.161812929] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420657.162735451] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420657.163497233] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420657.164293480] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420657.165141248] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420657.255427115] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420657.257189502] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420657.260786500] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420657.261693342] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420657.264149924] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420657.265413192] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420657.267369152] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420657.354655318] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420657.356235299] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420657.360378777] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420657.361685374] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420657.364111043] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420657.365396808] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420657.366695597] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420657.454758969] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420657.456270500] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420657.460697154] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420657.461673086] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420657.462444116] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420657.463248715] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420657.464042145] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420657.555448685] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420657.557127197] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420657.560867303] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420657.561752224] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420657.562465493] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420657.563248395] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420657.564020929] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420657.654697816] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420657.656207715] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420657.660249686] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420657.662393235] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420657.663299885] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420657.664110532] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420657.664908667] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420657.755486734] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420657.757166462] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420657.760625217] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420657.761504826] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420657.763253612] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420657.764010081] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420657.764838809] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420657.854998209] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420657.856450250] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420657.859871660] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420657.860762213] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420657.863770683] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420657.867073209] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420657.869293400] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420657.959825226] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420657.962090763] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420657.965416874] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420657.966246241] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420657.967125594] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420657.967832175] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420657.970106991] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420658.056168771] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420658.057817938] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420658.061089263] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420658.061914791] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420658.063624119] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420658.065755828] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420658.066657998] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
[INFO] [1753420658.155091781] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.929999828338623, 4.61299991607666, 2.9519999027252197])
[INFO] [1753420658.156727412] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.92999983 4.61299992 2.9519999 ]
[INFO] [1753420658.160043474] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420658.162010570] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420658.163877535] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420658.164829467] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420658.165797430] [solver_node]: 求解器返回结果: [((5.223211162798624, 5.225211162798625), (4.848497585854593, 4.850497585854594), -1.4006946915598535), ((5.117220939828452, 5.119220939828453), (4.816400178063245, 4.8184001780632455), -1.8363456105091318), ((4.772788837201374, 4.774788837201375), (3.149502414145407, 3.1515024141454067), 1.7408979620299396), ((4.8787790601715475, 4.880779060171548), (3.181599821936756, 3.1835998219367556), 1.3052470430806609)]
