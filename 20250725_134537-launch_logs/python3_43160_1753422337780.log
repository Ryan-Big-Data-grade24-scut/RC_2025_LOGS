[INFO] [1753422337.974822968] [solver_node]: [Case1BatchSolver] Case1BatchSolver初始化完成: 场地尺寸: 9.998x8.0, 容差: 0.001
[INFO] [1753422337.977062278] [solver_node]: [Case3BatchSolver] Case3BatchSolver初始化完成: 场地尺寸: 9.998x8.0, 容差: 0.001
[INFO] [1753422337.979131568] [solver_node]: [PoseSolver] PoseSolver初始化完成: 场地(9.998x8.0), 4个激光
[INFO] [1753422338.147425830] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422338.151423351] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422338.154878205] [solver_node]: 求解器返回结果: []
[INFO] [1753422338.210707722] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422338.212365483] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422338.215293447] [solver_node]: 求解器返回结果: []
[INFO] [1753422338.311595465] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422338.313172777] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422338.316299944] [solver_node]: 求解器返回结果: []
[INFO] [1753422338.410476991] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422338.411991998] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422338.414717685] [solver_node]: 求解器返回结果: []
[INFO] [1753422338.511411903] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422338.513317797] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422338.519210589] [solver_node]: 求解器返回结果: []
[INFO] [1753422338.611127942] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422338.612679269] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422338.615760644] [solver_node]: 求解器返回结果: []
[INFO] [1753422338.710577064] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422338.713716679] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422338.717654391] [solver_node]: 求解器返回结果: []
[INFO] [1753422338.810386577] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422338.811834990] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422338.814501828] [solver_node]: 求解器返回结果: []
[INFO] [1753422338.910443199] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422338.912191682] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422338.915414948] [solver_node]: 求解器返回结果: []
[INFO] [1753422339.011759110] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422339.013468681] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422339.016855182] [solver_node]: 求解器返回结果: []
[INFO] [1753422339.111140008] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422339.114356553] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422339.120621192] [solver_node]: 求解器返回结果: []
[INFO] [1753422339.210839184] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422339.212578739] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422339.216054234] [solver_node]: 求解器返回结果: []
[INFO] [1753422339.312692708] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422339.314204706] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422339.317751914] [solver_node]: 求解器返回结果: []
[INFO] [1753422339.410822316] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422339.412284649] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422339.415126403] [solver_node]: 求解器返回结果: []
[INFO] [1753422339.511138080] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422339.512800706] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422339.516250152] [solver_node]: 求解器返回结果: []
[INFO] [1753422339.610534242] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422339.612470249] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422339.617399725] [solver_node]: 求解器返回结果: []
[INFO] [1753422339.710601329] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422339.712046223] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422339.714861672] [solver_node]: 求解器返回结果: []
[INFO] [1753422339.812100830] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422339.813618205] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422339.816340980] [solver_node]: 求解器返回结果: []
[INFO] [1753422339.910764369] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422339.912300112] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422339.915058376] [solver_node]: 求解器返回结果: []
[INFO] [1753422340.010535066] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422340.012063225] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422340.017794702] [solver_node]: 求解器返回结果: []
[INFO] [1753422340.112790167] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422340.114252501] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422340.117151856] [solver_node]: 求解器返回结果: []
[INFO] [1753422340.210616282] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422340.212182234] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422340.218140275] [solver_node]: 求解器返回结果: []
[INFO] [1753422340.311365657] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422340.312897144] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422340.315634863] [solver_node]: 求解器返回结果: []
[INFO] [1753422340.411085570] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422340.412563040] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422340.415362009] [solver_node]: 求解器返回结果: []
[INFO] [1753422340.511402744] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422340.512851061] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422340.515925108] [solver_node]: 求解器返回结果: []
[INFO] [1753422340.610637112] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422340.612325082] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422340.615156083] [solver_node]: 求解器返回结果: []
[INFO] [1753422340.711039215] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422340.712525517] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422340.715362695] [solver_node]: 求解器返回结果: []
[INFO] [1753422340.810857242] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422340.812763265] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422340.816456492] [solver_node]: 求解器返回结果: []
[INFO] [1753422340.911769884] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422340.913358492] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422340.916344185] [solver_node]: 求解器返回结果: []
[INFO] [1753422341.010651125] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422341.012181620] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422341.014862474] [solver_node]: 求解器返回结果: []
[INFO] [1753422341.111997888] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422341.113524192] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422341.116357369] [solver_node]: 求解器返回结果: []
[INFO] [1753422341.210699382] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422341.212182581] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422341.214980109] [solver_node]: 求解器返回结果: []
[INFO] [1753422341.310846858] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422341.312306087] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422341.315167778] [solver_node]: 求解器返回结果: []
[INFO] [1753422341.410755160] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422341.412438299] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422341.415386262] [solver_node]: 求解器返回结果: []
[INFO] [1753422341.511925760] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422341.513544577] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422341.516401819] [solver_node]: 求解器返回结果: []
[INFO] [1753422341.611065983] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422341.612537053] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422341.615366135] [solver_node]: 求解器返回结果: []
[INFO] [1753422341.711243187] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422341.713213019] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422341.716487294] [solver_node]: 求解器返回结果: []
[INFO] [1753422341.810631223] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422341.812131798] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422341.814893134] [solver_node]: 求解器返回结果: []
[INFO] [1753422341.912949751] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422341.914623417] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422341.917772249] [solver_node]: 求解器返回结果: []
[INFO] [1753422342.010697529] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422342.012178264] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422342.014915791] [solver_node]: 求解器返回结果: []
[INFO] [1753422342.111172213] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422342.112838774] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422342.116082808] [solver_node]: 求解器返回结果: []
[INFO] [1753422342.210902017] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422342.212486337] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422342.215315898] [solver_node]: 求解器返回结果: []
[INFO] [1753422342.313542472] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422342.315212778] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422342.318152134] [solver_node]: 求解器返回结果: []
[INFO] [1753422342.410910052] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422342.412513988] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422342.415648996] [solver_node]: 求解器返回结果: []
[INFO] [1753422342.510741842] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422342.513259621] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422342.517701823] [solver_node]: 求解器返回结果: []
[INFO] [1753422342.614381549] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422342.615951437] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422342.618706757] [solver_node]: 求解器返回结果: []
[INFO] [1753422342.711494852] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422342.713669744] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422342.717318331] [solver_node]: 求解器返回结果: []
[INFO] [1753422342.810453665] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422342.811959263] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422342.814930172] [solver_node]: 求解器返回结果: []
[INFO] [1753422342.914806283] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422342.917309565] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422342.920593504] [solver_node]: 求解器返回结果: []
[INFO] [1753422343.010473444] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422343.012025476] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422343.014849917] [solver_node]: 求解器返回结果: []
[INFO] [1753422343.110452278] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422343.112098360] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422343.115657600] [solver_node]: 求解器返回结果: []
[INFO] [1753422343.210625004] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422343.212121803] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422343.214954565] [solver_node]: 求解器返回结果: []
[INFO] [1753422343.310471196] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422343.312005467] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422343.314844757] [solver_node]: 求解器返回结果: []
[INFO] [1753422343.411178269] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422343.412650875] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422343.415310321] [solver_node]: 求解器返回结果: []
[INFO] [1753422343.510382432] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422343.511900318] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422343.515628010] [solver_node]: 求解器返回结果: []
[INFO] [1753422343.611347910] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422343.612789827] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422343.615632957] [solver_node]: 求解器返回结果: []
[INFO] [1753422343.710336196] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422343.711798530] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422343.714506777] [solver_node]: 求解器返回结果: []
[INFO] [1753422343.811002084] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422343.812632069] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422343.816923389] [solver_node]: 求解器返回结果: []
[INFO] [1753422343.911379710] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422343.913372679] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422343.916805453] [solver_node]: 求解器返回结果: []
[INFO] [1753422344.010431742] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422344.011980605] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422344.019986304] [solver_node]: 求解器返回结果: []
[INFO] [1753422344.110569461] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422344.112438107] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422344.117587235] [solver_node]: 求解器返回结果: []
[INFO] [1753422344.210823118] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422344.212269579] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422344.215543630] [solver_node]: 求解器返回结果: []
[INFO] [1753422344.310953764] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422344.312417762] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422344.316279824] [solver_node]: 求解器返回结果: []
[INFO] [1753422344.411844266] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422344.413570221] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422344.417567454] [solver_node]: 求解器返回结果: []
[INFO] [1753422344.510450113] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 2.1010000705718994, 1.2599999904632568])
[INFO] [1753422344.511964704] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 2.10100007 1.25999999]
[INFO] [1753422344.514815898] [solver_node]: 求解器返回结果: []
[INFO] [1753422344.613116587] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422344.614621546] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422344.617446180] [solver_node]: 求解器返回结果: []
[INFO] [1753422344.710391752] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422344.711868742] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422344.714607230] [solver_node]: 求解器返回结果: []
[INFO] [1753422344.811809240] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422344.815682055] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422344.820613324] [solver_node]: 求解器返回结果: []
[INFO] [1753422344.910581075] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422344.912423961] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422344.915492631] [solver_node]: 求解器返回结果: []
[INFO] [1753422345.013382624] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422345.015705936] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422345.018476232] [solver_node]: 求解器返回结果: []
[INFO] [1753422345.110371864] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1510000228881836, 1.2599999904632568])
[INFO] [1753422345.111826229] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15100002 1.25999999]
[INFO] [1753422345.114629199] [solver_node]: 求解器返回结果: []
[INFO] [1753422345.212687740] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1510000228881836, 1.2599999904632568])
[INFO] [1753422345.214290685] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15100002 1.25999999]
[INFO] [1753422345.217874118] [solver_node]: 求解器返回结果: []
[INFO] [1753422345.310531557] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1510000228881836, 1.2599999904632568])
[INFO] [1753422345.312049956] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15100002 1.25999999]
[INFO] [1753422345.314863005] [solver_node]: 求解器返回结果: []
[INFO] [1753422345.414277030] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1510000228881836, 1.2599999904632568])
[INFO] [1753422345.416444914] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15100002 1.25999999]
[INFO] [1753422345.419505137] [solver_node]: 求解器返回结果: []
[INFO] [1753422345.510577584] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1510000228881836, 1.2599999904632568])
[INFO] [1753422345.512022285] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15100002 1.25999999]
[INFO] [1753422345.514696228] [solver_node]: 求解器返回结果: []
[INFO] [1753422345.614238191] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422345.615850512] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422345.619338327] [solver_node]: 求解器返回结果: []
[INFO] [1753422345.710402902] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422345.712012407] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422345.715521630] [solver_node]: 求解器返回结果: []
[INFO] [1753422345.811144378] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422345.812642297] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422345.815379152] [solver_node]: 求解器返回结果: []
[INFO] [1753422345.910415264] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422345.915696588] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422345.927120949] [solver_node]: 求解器返回结果: []
[INFO] [1753422346.011510732] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422346.012974858] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422346.015843780] [solver_node]: 求解器返回结果: []
[INFO] [1753422346.110441516] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422346.111962347] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422346.114765700] [solver_node]: 求解器返回结果: []
[INFO] [1753422346.211261395] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422346.212799698] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422346.215752750] [solver_node]: 求解器返回结果: []
[INFO] [1753422346.310617116] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422346.312106202] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422346.315469631] [solver_node]: 求解器返回结果: []
[INFO] [1753422346.410507920] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422346.412010222] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422346.414856040] [solver_node]: 求解器返回结果: []
[INFO] [1753422346.510554663] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422346.512181032] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422346.515614830] [solver_node]: 求解器返回结果: []
[INFO] [1753422346.611333709] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422346.612860620] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422346.615572515] [solver_node]: 求解器返回结果: []
[INFO] [1753422346.710392400] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422346.711915823] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422346.715304084] [solver_node]: 求解器返回结果: []
[INFO] [1753422346.811156501] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422346.812631027] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422346.815378283] [solver_node]: 求解器返回结果: []
[INFO] [1753422346.910746723] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422346.912188288] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422346.915083291] [solver_node]: 求解器返回结果: []
[INFO] [1753422347.013100137] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422347.014833548] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422347.017725735] [solver_node]: 求解器返回结果: []
[INFO] [1753422347.110803153] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422347.113220451] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422347.116960495] [solver_node]: 求解器返回结果: []
[INFO] [1753422347.211278962] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422347.216456348] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422347.219331575] [solver_node]: 求解器返回结果: []
[INFO] [1753422347.310749823] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422347.312360320] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422347.315429662] [solver_node]: 求解器返回结果: []
[INFO] [1753422347.412008016] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422347.413595632] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422347.416568653] [solver_node]: 求解器返回结果: []
[INFO] [1753422347.511548766] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422347.513394019] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422347.516589476] [solver_node]: 求解器返回结果: []
[INFO] [1753422347.615147166] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422347.617643057] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422347.622479540] [solver_node]: 求解器返回结果: []
[INFO] [1753422347.710570072] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422347.712095127] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422347.715113077] [solver_node]: 求解器返回结果: []
[INFO] [1753422347.811510371] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422347.813079843] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422347.815936285] [solver_node]: 求解器返回结果: []
[INFO] [1753422347.914513815] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422347.918710317] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422347.922437561] [solver_node]: 求解器返回结果: []
[INFO] [1753422348.010859044] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422348.012367075] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422348.015354720] [solver_node]: 求解器返回结果: []
[INFO] [1753422348.114615081] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422348.117138524] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422348.120540994] [solver_node]: 求解器返回结果: []
[INFO] [1753422348.211054873] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422348.213666030] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422348.217459803] [solver_node]: 求解器返回结果: []
[INFO] [1753422348.312546223] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422348.313956652] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422348.317774394] [solver_node]: 求解器返回结果: []
[INFO] [1753422348.412583208] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422348.415911692] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422348.420952563] [solver_node]: 求解器返回结果: []
[INFO] [1753422348.513471091] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422348.516425679] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422348.521525527] [solver_node]: 求解器返回结果: []
[INFO] [1753422348.610993113] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422348.612732444] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422348.616981043] [solver_node]: 求解器返回结果: []
[INFO] [1753422348.710439142] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422348.712391086] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422348.715298793] [solver_node]: 求解器返回结果: []
[INFO] [1753422348.812548361] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422348.814575827] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422348.822040651] [solver_node]: 求解器返回结果: []
[INFO] [1753422348.912786886] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422348.914328166] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422348.917287266] [solver_node]: 求解器返回结果: []
[INFO] [1753422349.010573106] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422349.012027759] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422349.015136719] [solver_node]: 求解器返回结果: []
[INFO] [1753422349.111703138] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422349.113169344] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422349.116160381] [solver_node]: 求解器返回结果: []
[INFO] [1753422349.210444034] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422349.211941345] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422349.214740858] [solver_node]: 求解器返回结果: []
[INFO] [1753422349.312561351] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422349.315478594] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422349.319309265] [solver_node]: 求解器返回结果: []
[INFO] [1753422349.410760028] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422349.412432446] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422349.415247255] [solver_node]: 求解器返回结果: []
[INFO] [1753422349.511624231] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422349.513200455] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422349.516476042] [solver_node]: 求解器返回结果: []
[INFO] [1753422349.612344879] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422349.614034193] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422349.617119632] [solver_node]: 求解器返回结果: []
[INFO] [1753422349.710736360] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422349.712175493] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422349.714817979] [solver_node]: 求解器返回结果: []
[INFO] [1753422349.812362594] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422349.816438229] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422349.819603478] [solver_node]: 求解器返回结果: []
[INFO] [1753422349.910814844] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422349.912412797] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422349.915274103] [solver_node]: 求解器返回结果: []
[INFO] [1753422350.011271967] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422350.012953345] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422350.015914910] [solver_node]: 求解器返回结果: []
[INFO] [1753422350.110982996] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422350.112512947] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422350.116089244] [solver_node]: 求解器返回结果: []
[INFO] [1753422350.211490393] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422350.213753991] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422350.217033898] [solver_node]: 求解器返回结果: []
[INFO] [1753422350.310996905] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422350.312423207] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422350.315258080] [solver_node]: 求解器返回结果: []
[INFO] [1753422350.413468054] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422350.416438355] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422350.420103262] [solver_node]: 求解器返回结果: []
[INFO] [1753422350.510647447] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422350.512216184] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422350.515066610] [solver_node]: 求解器返回结果: []
[INFO] [1753422350.611556741] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422350.613202342] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422350.616268325] [solver_node]: 求解器返回结果: []
[INFO] [1753422350.710739023] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422350.712499443] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422350.715407086] [solver_node]: 求解器返回结果: []
[INFO] [1753422350.811174930] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422350.812875573] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422350.816078518] [solver_node]: 求解器返回结果: []
[INFO] [1753422350.910926120] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422350.912455687] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422350.915299073] [solver_node]: 求解器返回结果: []
[INFO] [1753422351.012065658] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422351.013683259] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422351.016782938] [solver_node]: 求解器返回结果: []
[INFO] [1753422351.111215588] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422351.112712547] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422351.115747713] [solver_node]: 求解器返回结果: []
[INFO] [1753422351.211231616] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422351.214588421] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422351.219515050] [solver_node]: 求解器返回结果: []
[INFO] [1753422351.310730898] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422351.312225424] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422351.314946536] [solver_node]: 求解器返回结果: []
[INFO] [1753422351.411319098] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422351.412777175] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422351.417768445] [solver_node]: 求解器返回结果: []
[INFO] [1753422351.510514405] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422351.511994563] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422351.514697978] [solver_node]: 求解器返回结果: []
[INFO] [1753422351.611023083] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422351.613226328] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422351.616554652] [solver_node]: 求解器返回结果: []
[INFO] [1753422351.710396762] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422351.712673449] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422351.716423477] [solver_node]: 求解器返回结果: []
[INFO] [1753422351.811406538] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422351.813337554] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422351.816943676] [solver_node]: 求解器返回结果: []
[INFO] [1753422351.910484435] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422351.912004274] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422351.915017808] [solver_node]: 求解器返回结果: []
[INFO] [1753422352.014629156] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422352.016424233] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422352.019540296] [solver_node]: 求解器返回结果: []
[INFO] [1753422352.110584142] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422352.112078285] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422352.114844645] [solver_node]: 求解器返回结果: []
[INFO] [1753422352.210948434] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422352.212942747] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422352.216174365] [solver_node]: 求解器返回结果: []
[INFO] [1753422352.310534183] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422352.311962212] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422352.314795614] [solver_node]: 求解器返回结果: []
[INFO] [1753422352.411472247] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422352.413031575] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422352.417465105] [solver_node]: 求解器返回结果: []
[INFO] [1753422352.510458495] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422352.511920541] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422352.515039389] [solver_node]: 求解器返回结果: []
[INFO] [1753422352.611387951] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422352.615129051] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422352.619466996] [solver_node]: 求解器返回结果: []
[INFO] [1753422352.710486265] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422352.712016025] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422352.714759249] [solver_node]: 求解器返回结果: []
[INFO] [1753422352.810641817] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422352.812114424] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422352.816103177] [solver_node]: 求解器返回结果: []
[INFO] [1753422352.912269592] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422352.913837176] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422352.916580336] [solver_node]: 求解器返回结果: []
[INFO] [1753422353.010897913] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422353.012416024] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422353.019348710] [solver_node]: 求解器返回结果: []
[INFO] [1753422353.111529092] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422353.113738481] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422353.116663181] [solver_node]: 求解器返回结果: []
[INFO] [1753422353.210489868] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422353.212240304] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422353.215472594] [solver_node]: 求解器返回结果: []
[INFO] [1753422353.310426697] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422353.311920360] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422353.314748513] [solver_node]: 求解器返回结果: []
[INFO] [1753422353.410649036] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422353.412403055] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422353.415613073] [solver_node]: 求解器返回结果: []
[INFO] [1753422353.510511111] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422353.511994117] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422353.515048356] [solver_node]: 求解器返回结果: []
[INFO] [1753422353.610461732] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422353.611946242] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422353.614736539] [solver_node]: 求解器返回结果: []
[INFO] [1753422353.710437377] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422353.712051714] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422353.714911389] [solver_node]: 求解器返回结果: []
[INFO] [1753422353.810383294] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422353.811987871] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422353.814769080] [solver_node]: 求解器返回结果: []
[INFO] [1753422353.911088491] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422353.912540840] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422353.915457732] [solver_node]: 求解器返回结果: []
[INFO] [1753422354.010449436] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422354.012184479] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422354.023285506] [solver_node]: 求解器返回结果: []
[INFO] [1753422354.110540221] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422354.112087772] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422354.114892534] [solver_node]: 求解器返回结果: []
[INFO] [1753422354.210947556] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422354.212364129] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422354.215098681] [solver_node]: 求解器返回结果: []
[INFO] [1753422354.311650002] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422354.313107664] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422354.315965770] [solver_node]: 求解器返回结果: []
[INFO] [1753422354.410970787] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422354.412542787] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422354.427160622] [solver_node]: 求解器返回结果: []
[INFO] [1753422354.510364758] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422354.511997463] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422354.514903891] [solver_node]: 求解器返回结果: []
[INFO] [1753422354.613330225] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422354.614989107] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422354.618126292] [solver_node]: 求解器返回结果: []
[INFO] [1753422354.710505239] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422354.712033782] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422354.714905841] [solver_node]: 求解器返回结果: []
[INFO] [1753422354.811813585] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422354.813413265] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422354.817286561] [solver_node]: 求解器返回结果: []
[INFO] [1753422354.910469492] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422354.912593920] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422354.917098204] [solver_node]: 求解器返回结果: []
[INFO] [1753422355.013504882] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422355.015094098] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422355.018383382] [solver_node]: 求解器返回结果: []
[INFO] [1753422355.110553686] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422355.112043156] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422355.116312012] [solver_node]: 求解器返回结果: []
[INFO] [1753422355.212417052] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422355.214035901] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422355.217002298] [solver_node]: 求解器返回结果: []
[INFO] [1753422355.310831420] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422355.312269465] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422355.315083475] [solver_node]: 求解器返回结果: []
[INFO] [1753422355.412592672] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422355.415199030] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422355.419104453] [solver_node]: 求解器返回结果: []
[INFO] [1753422355.510486005] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422355.512040213] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422355.516586546] [solver_node]: 求解器返回结果: []
[INFO] [1753422355.611417161] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422355.613624790] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422355.617524582] [solver_node]: 求解器返回结果: []
[INFO] [1753422355.710576504] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422355.712197081] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422355.716075816] [solver_node]: 求解器返回结果: []
[INFO] [1753422355.813274767] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422355.815143765] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422355.818303926] [solver_node]: 求解器返回结果: []
[INFO] [1753422355.913325776] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2599999904632568])
[INFO] [1753422355.916258253] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25999999]
[INFO] [1753422355.919829430] [solver_node]: 求解器返回结果: []
[INFO] [1753422356.012719076] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422356.015993543] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422356.019588817] [solver_node]: 求解器返回结果: []
[INFO] [1753422356.111511181] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422356.113099630] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422356.115909319] [solver_node]: 求解器返回结果: []
[INFO] [1753422356.212289534] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422356.214309800] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422356.218364731] [solver_node]: 求解器返回结果: []
[INFO] [1753422356.310765216] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422356.312465667] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422356.316232977] [solver_node]: 求解器返回结果: []
[INFO] [1753422356.412706154] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422356.414433197] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422356.418363358] [solver_node]: 求解器返回结果: []
[INFO] [1753422356.510334234] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422356.512020157] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422356.516046191] [solver_node]: 求解器返回结果: []
[INFO] [1753422356.610925320] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422356.612735277] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422356.615987280] [solver_node]: 求解器返回结果: []
[INFO] [1753422356.710452640] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422356.711923486] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422356.714697975] [solver_node]: 求解器返回结果: []
[INFO] [1753422356.813984809] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422356.815674572] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422356.818536167] [solver_node]: 求解器返回结果: []
[INFO] [1753422356.910730088] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422356.912141413] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422356.915127810] [solver_node]: 求解器返回结果: []
[INFO] [1753422357.010424163] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422357.011888097] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422357.014686971] [solver_node]: 求解器返回结果: []
[INFO] [1753422357.110406181] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422357.111913124] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422357.114821664] [solver_node]: 求解器返回结果: []
[INFO] [1753422357.210455689] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422357.211937255] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422357.214772833] [solver_node]: 求解器返回结果: []
[INFO] [1753422357.310785746] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422357.312472597] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422357.315710263] [solver_node]: 求解器返回结果: []
[INFO] [1753422357.411001465] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422357.412498840] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422357.415362610] [solver_node]: 求解器返回结果: []
[INFO] [1753422357.513216041] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422357.515487704] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422357.519261413] [solver_node]: 求解器返回结果: []
[INFO] [1753422357.612649472] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422357.614510406] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422357.617809002] [solver_node]: 求解器返回结果: []
[INFO] [1753422357.710988736] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422357.712687907] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422357.717604456] [solver_node]: 求解器返回结果: []
[INFO] [1753422357.810583226] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422357.812540355] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422357.817582602] [solver_node]: 求解器返回结果: []
[INFO] [1753422357.910782753] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422357.912201854] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422357.916223441] [solver_node]: 求解器返回结果: []
[INFO] [1753422358.011109994] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422358.013110291] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422358.016658076] [solver_node]: 求解器返回结果: []
[INFO] [1753422358.110447552] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422358.111986944] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422358.114936957] [solver_node]: 求解器返回结果: []
[INFO] [1753422358.211432984] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422358.217769498] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422358.221077566] [solver_node]: 求解器返回结果: []
[INFO] [1753422358.310630827] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422358.312154443] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422358.315369389] [solver_node]: 求解器返回结果: []
[INFO] [1753422358.410403466] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422358.412067500] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422358.422016153] [solver_node]: 求解器返回结果: []
[INFO] [1753422358.510400846] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422358.512176690] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422358.516310887] [solver_node]: 求解器返回结果: []
[INFO] [1753422358.610404946] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422358.611917745] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422358.615204468] [solver_node]: 求解器返回结果: []
[INFO] [1753422358.710409461] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422358.711845747] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422358.714480105] [solver_node]: 求解器返回结果: []
[INFO] [1753422358.811174569] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422358.812629926] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422358.815381919] [solver_node]: 求解器返回结果: []
[INFO] [1753422358.910467294] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422358.912110559] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422358.915095901] [solver_node]: 求解器返回结果: []
[INFO] [1753422359.011387316] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422359.012886643] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422359.015824751] [solver_node]: 求解器返回结果: []
[INFO] [1753422359.110881487] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422359.112339053] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422359.115052324] [solver_node]: 求解器返回结果: []
[INFO] [1753422359.212910877] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422359.219401890] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422359.223315091] [solver_node]: 求解器返回结果: []
[INFO] [1753422359.311116605] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422359.312573563] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422359.315258130] [solver_node]: 求解器返回结果: []
[INFO] [1753422359.412629729] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422359.414044830] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422359.416764822] [solver_node]: 求解器返回结果: []
[INFO] [1753422359.511159239] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422359.513409141] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422359.517026752] [solver_node]: 求解器返回结果: []
[INFO] [1753422359.612158304] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422359.613589374] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422359.616288789] [solver_node]: 求解器返回结果: []
[INFO] [1753422359.710363328] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422359.711805022] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422359.714419476] [solver_node]: 求解器返回结果: []
[INFO] [1753422359.812332717] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422359.813730474] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422359.816439586] [solver_node]: 求解器返回结果: []
[INFO] [1753422359.911979979] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422359.914270138] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422359.917027443] [solver_node]: 求解器返回结果: []
[INFO] [1753422360.011150239] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422360.012781568] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422360.015495352] [solver_node]: 求解器返回结果: []
[INFO] [1753422360.113012427] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422360.114528394] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422360.117403365] [solver_node]: 求解器返回结果: []
[INFO] [1753422360.212090302] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422360.213658430] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422360.216535289] [solver_node]: 求解器返回结果: []
[INFO] [1753422360.310468002] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422360.311950017] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422360.314602743] [solver_node]: 求解器返回结果: []
[INFO] [1753422360.420071341] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422360.421573164] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422360.424672428] [solver_node]: 求解器返回结果: []
[INFO] [1753422360.510484398] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422360.512021966] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422360.514932170] [solver_node]: 求解器返回结果: []
[INFO] [1753422360.611772207] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422360.613331663] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422360.616241674] [solver_node]: 求解器返回结果: []
[INFO] [1753422360.710586908] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422360.712085115] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422360.714821235] [solver_node]: 求解器返回结果: []
[INFO] [1753422360.810449631] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422360.812185059] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422360.815222945] [solver_node]: 求解器返回结果: []
[INFO] [1753422360.911105618] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422360.912536432] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422360.915295496] [solver_node]: 求解器返回结果: []
[INFO] [1753422361.011923209] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422361.014372923] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422361.017242678] [solver_node]: 求解器返回结果: []
[INFO] [1753422361.110447698] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422361.112019058] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422361.114763818] [solver_node]: 求解器返回结果: []
[INFO] [1753422361.210738463] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422361.212294687] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422361.215214043] [solver_node]: 求解器返回结果: []
[INFO] [1753422361.310731717] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422361.312225956] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422361.315270563] [solver_node]: 求解器返回结果: []
[INFO] [1753422361.412836280] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422361.414381975] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422361.418767954] [solver_node]: 求解器返回结果: []
[INFO] [1753422361.510464654] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2599999904632568])
[INFO] [1753422361.511949324] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25999999]
[INFO] [1753422361.514732358] [solver_node]: 求解器返回结果: []
[INFO] [1753422361.611583788] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422361.613345456] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422361.616352654] [solver_node]: 求解器返回结果: []
[INFO] [1753422361.711954522] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422361.713459641] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422361.716565369] [solver_node]: 求解器返回结果: []
[INFO] [1753422361.812422859] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422361.814295665] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422361.817231982] [solver_node]: 求解器返回结果: []
[INFO] [1753422361.911219833] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422361.913105568] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422361.915986107] [solver_node]: 求解器返回结果: []
[INFO] [1753422362.011701546] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422362.013242186] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422362.016153798] [solver_node]: 求解器返回结果: []
[INFO] [1753422362.111540015] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422362.113183345] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422362.118780740] [solver_node]: 求解器返回结果: []
[INFO] [1753422362.211691866] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422362.213380189] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422362.216489021] [solver_node]: 求解器返回结果: []
[INFO] [1753422362.310761295] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422362.312182956] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422362.314832163] [solver_node]: 求解器返回结果: []
[INFO] [1753422362.415203762] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422362.417512514] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422362.420643074] [solver_node]: 求解器返回结果: []
[INFO] [1753422362.511444397] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422362.512917003] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422362.516003563] [solver_node]: 求解器返回结果: []
[INFO] [1753422362.610891690] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422362.612358664] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422362.615143585] [solver_node]: 求解器返回结果: []
[INFO] [1753422362.711686978] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2599999904632568])
[INFO] [1753422362.713306147] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25999999]
[INFO] [1753422362.716111133] [solver_node]: 求解器返回结果: []
[INFO] [1753422362.810703254] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422362.812173748] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422362.814965198] [solver_node]: 求解器返回结果: []
[INFO] [1753422362.912419489] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422362.913930944] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422362.916803707] [solver_node]: 求解器返回结果: []
[INFO] [1753422363.011438933] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422363.013464703] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422363.016360026] [solver_node]: 求解器返回结果: []
[INFO] [1753422363.113264996] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422363.120058800] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422363.123028845] [solver_node]: 求解器返回结果: []
[INFO] [1753422363.210540853] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422363.212061588] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422363.214740235] [solver_node]: 求解器返回结果: []
[INFO] [1753422363.312110014] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422363.313896483] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422363.317156774] [solver_node]: 求解器返回结果: []
[INFO] [1753422363.412520976] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422363.414287284] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422363.417359380] [solver_node]: 求解器返回结果: []
[INFO] [1753422363.510410670] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422363.511862860] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422363.514570787] [solver_node]: 求解器返回结果: []
[INFO] [1753422363.611412300] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422363.613104014] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422363.616171054] [solver_node]: 求解器返回结果: []
[INFO] [1753422363.711191600] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422363.712700303] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422363.715989395] [solver_node]: 求解器返回结果: []
[INFO] [1753422363.811882120] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422363.814180311] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422363.817949380] [solver_node]: 求解器返回结果: []
[INFO] [1753422363.911625355] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422363.913510674] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422363.917338337] [solver_node]: 求解器返回结果: []
[INFO] [1753422364.013892803] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422364.016356022] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422364.019260786] [solver_node]: 求解器返回结果: []
[INFO] [1753422364.110464519] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422364.112429904] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422364.115230057] [solver_node]: 求解器返回结果: []
[INFO] [1753422364.213944825] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422364.215672253] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422364.218619705] [solver_node]: 求解器返回结果: []
[INFO] [1753422364.311263276] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422364.312909358] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422364.315729832] [solver_node]: 求解器返回结果: []
[INFO] [1753422364.411554524] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422364.413071867] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422364.415950071] [solver_node]: 求解器返回结果: []
[INFO] [1753422364.511132478] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422364.512633917] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422364.515874271] [solver_node]: 求解器返回结果: []
[INFO] [1753422364.612427523] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422364.614220264] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422364.617670127] [solver_node]: 求解器返回结果: []
[INFO] [1753422364.710842540] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422364.712286570] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15499997 1.25899994]
[INFO] [1753422364.714971169] [solver_node]: 求解器返回结果: []
[INFO] [1753422364.811256191] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422364.813124454] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15499997 1.25899994]
[INFO] [1753422364.816378569] [solver_node]: 求解器返回结果: []
[INFO] [1753422364.911660594] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422364.913103695] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15499997 1.25899994]
[INFO] [1753422364.915922697] [solver_node]: 求解器返回结果: []
[INFO] [1753422365.012118374] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422365.014367188] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15499997 1.25899994]
[INFO] [1753422365.018333861] [solver_node]: 求解器返回结果: []
[INFO] [1753422365.110598066] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422365.112247124] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15499997 1.25899994]
[INFO] [1753422365.115065710] [solver_node]: 求解器返回结果: []
[INFO] [1753422365.211153640] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422365.214250184] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422365.217521771] [solver_node]: 求解器返回结果: []
[INFO] [1753422365.310373924] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422365.311966148] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422365.314872032] [solver_node]: 求解器返回结果: []
[INFO] [1753422365.413573649] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422365.415551034] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422365.418752156] [solver_node]: 求解器返回结果: []
[INFO] [1753422365.511524402] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422365.513249302] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422365.517292809] [solver_node]: 求解器返回结果: []
[INFO] [1753422365.613072573] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422365.615222922] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422365.618544238] [solver_node]: 求解器返回结果: []
[INFO] [1753422365.711102528] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422365.712585023] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422365.715416793] [solver_node]: 求解器返回结果: []
[INFO] [1753422365.811345552] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422365.813113173] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422365.817994137] [solver_node]: 求解器返回结果: []
[INFO] [1753422365.910818385] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422365.912278575] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422365.915009927] [solver_node]: 求解器返回结果: []
[INFO] [1753422366.013208622] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422366.015708225] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422366.019972729] [solver_node]: 求解器返回结果: []
[INFO] [1753422366.111108591] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422366.112977077] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422366.116101206] [solver_node]: 求解器返回结果: []
[INFO] [1753422366.213510445] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422366.217683043] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422366.221875097] [solver_node]: 求解器返回结果: []
[INFO] [1753422366.310444954] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422366.311909656] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422366.314822196] [solver_node]: 求解器返回结果: []
[INFO] [1753422366.410818286] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422366.412731286] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422366.417604026] [solver_node]: 求解器返回结果: []
[INFO] [1753422366.511041951] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422366.512613440] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422366.515572701] [solver_node]: 求解器返回结果: []
[INFO] [1753422366.610927753] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422366.612532234] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422366.615889232] [solver_node]: 求解器返回结果: []
[INFO] [1753422366.711206620] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422366.712889598] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422366.715719448] [solver_node]: 求解器返回结果: []
[INFO] [1753422366.810600187] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422366.813165712] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422366.820812334] [solver_node]: 求解器返回结果: []
[INFO] [1753422366.910454021] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422366.912005285] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422366.914800446] [solver_node]: 求解器返回结果: []
[INFO] [1753422367.011046686] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422367.012613246] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422367.016223400] [solver_node]: 求解器返回结果: []
[INFO] [1753422367.111232335] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422367.112659788] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422367.115509511] [solver_node]: 求解器返回结果: []
[INFO] [1753422367.210550863] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422367.212199729] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422367.215978174] [solver_node]: 求解器返回结果: []
[INFO] [1753422367.310653662] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422367.312189182] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422367.314928534] [solver_node]: 求解器返回结果: []
[INFO] [1753422367.410557578] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422367.412075721] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422367.414963845] [solver_node]: 求解器返回结果: []
[INFO] [1753422367.510583320] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422367.512116311] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422367.514964786] [solver_node]: 求解器返回结果: []
[INFO] [1753422367.610517252] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422367.612121893] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422367.615346600] [solver_node]: 求解器返回结果: []
[INFO] [1753422367.712912739] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422367.714591974] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422367.718338035] [solver_node]: 求解器返回结果: []
[INFO] [1753422367.810532639] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422367.813843524] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422367.821430528] [solver_node]: 求解器返回结果: []
[INFO] [1753422367.913740847] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422367.915729816] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422367.918553106] [solver_node]: 求解器返回结果: []
[INFO] [1753422368.014442059] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422368.016623064] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422368.020486504] [solver_node]: 求解器返回结果: []
[INFO] [1753422368.111111221] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422368.113682794] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422368.117767102] [solver_node]: 求解器返回结果: []
[INFO] [1753422368.210566777] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422368.212023799] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422368.214634028] [solver_node]: 求解器返回结果: []
[INFO] [1753422368.312539504] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422368.313962189] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422368.316688293] [solver_node]: 求解器返回结果: []
[INFO] [1753422368.410514325] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422368.411952274] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422368.414571816] [solver_node]: 求解器返回结果: []
[INFO] [1753422368.512398378] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422368.514104877] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422368.517003017] [solver_node]: 求解器返回结果: []
[INFO] [1753422368.610476689] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422368.611992721] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422368.615025871] [solver_node]: 求解器返回结果: []
[INFO] [1753422368.711086445] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422368.712624940] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422368.715288579] [solver_node]: 求解器返回结果: []
[INFO] [1753422368.810460142] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422368.811899532] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422368.814519202] [solver_node]: 求解器返回结果: []
[INFO] [1753422368.910917190] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422368.912358276] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422368.915091740] [solver_node]: 求解器返回结果: []
[INFO] [1753422369.010596078] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422369.012103213] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422369.014756164] [solver_node]: 求解器返回结果: []
[INFO] [1753422369.110464443] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422369.111919673] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422369.114520431] [solver_node]: 求解器返回结果: []
[INFO] [1753422369.210593166] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422369.212014827] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422369.214720323] [solver_node]: 求解器返回结果: []
[INFO] [1753422369.310925604] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422369.312331233] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422369.315032537] [solver_node]: 求解器返回结果: []
[INFO] [1753422369.410569165] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422369.412110925] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15499997 1.25899994]
[INFO] [1753422369.415578900] [solver_node]: 求解器返回结果: []
[INFO] [1753422369.510989605] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422369.512462340] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15499997 1.25899994]
[INFO] [1753422369.515137211] [solver_node]: 求解器返回结果: []
[INFO] [1753422369.610497323] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422369.612027978] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15499997 1.25899994]
[INFO] [1753422369.614917798] [solver_node]: 求解器返回结果: []
[INFO] [1753422369.711001829] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422369.712912716] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15499997 1.25899994]
[INFO] [1753422369.715661285] [solver_node]: 求解器返回结果: []
[INFO] [1753422369.810833457] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422369.812279791] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15499997 1.25899994]
[INFO] [1753422369.819412546] [solver_node]: 求解器返回结果: []
[INFO] [1753422369.912108539] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422369.913551705] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422369.916729787] [solver_node]: 求解器返回结果: []
[INFO] [1753422370.010752047] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422370.012192941] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422370.019369633] [solver_node]: 求解器返回结果: []
[INFO] [1753422370.110747360] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422370.112291072] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422370.115307486] [solver_node]: 求解器返回结果: []
[INFO] [1753422370.211045495] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422370.212554454] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422370.215330863] [solver_node]: 求解器返回结果: []
[INFO] [1753422370.310357433] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422370.311857144] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422370.314515951] [solver_node]: 求解器返回结果: []
[INFO] [1753422370.410649072] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422370.412341491] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15499997 1.25899994]
[INFO] [1753422370.416670220] [solver_node]: 求解器返回结果: []
[INFO] [1753422370.511927931] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422370.513547069] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15499997 1.25899994]
[INFO] [1753422370.516418232] [solver_node]: 求解器返回结果: []
[INFO] [1753422370.610601041] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422370.612155889] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15499997 1.25899994]
[INFO] [1753422370.614933994] [solver_node]: 求解器返回结果: []
[INFO] [1753422370.718719625] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422370.720951479] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15499997 1.25899994]
[INFO] [1753422370.723754705] [solver_node]: 求解器返回结果: []
[INFO] [1753422370.810942745] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422370.812384247] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15499997 1.25899994]
[INFO] [1753422370.815187409] [solver_node]: 求解器返回结果: []
[INFO] [1753422370.912329191] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422370.915022815] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422370.918964752] [solver_node]: 求解器返回结果: []
[INFO] [1753422371.011065694] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422371.012571197] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422371.015306261] [solver_node]: 求解器返回结果: []
[INFO] [1753422371.112777555] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422371.114760572] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422371.118409959] [solver_node]: 求解器返回结果: []
[INFO] [1753422371.210437493] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422371.211913619] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422371.214739277] [solver_node]: 求解器返回结果: []
[INFO] [1753422371.311623871] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422371.313222720] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422371.315946936] [solver_node]: 求解器返回结果: []
[INFO] [1753422371.410692990] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422371.412158588] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422371.415012631] [solver_node]: 求解器返回结果: []
[INFO] [1753422371.511075576] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422371.512534230] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422371.517357881] [solver_node]: 求解器返回结果: []
[INFO] [1753422371.610822564] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422371.612322755] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422371.615070652] [solver_node]: 求解器返回结果: []
[INFO] [1753422371.710884183] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422371.712909697] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422371.716250598] [solver_node]: 求解器返回结果: []
[INFO] [1753422371.810521986] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422371.812199172] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422371.815202850] [solver_node]: 求解器返回结果: []
[INFO] [1753422371.910535860] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422371.912119829] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422371.916777109] [solver_node]: 求解器返回结果: []
[INFO] [1753422372.010533830] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422372.012090118] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422372.015016163] [solver_node]: 求解器返回结果: []
[INFO] [1753422372.110518745] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422372.112560419] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422372.116513525] [solver_node]: 求解器返回结果: []
[INFO] [1753422372.210628814] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422372.212265936] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422372.214954727] [solver_node]: 求解器返回结果: []
[INFO] [1753422372.311654934] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422372.313152789] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422372.316775520] [solver_node]: 求解器返回结果: []
[INFO] [1753422372.412329751] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422372.413753620] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422372.416428172] [solver_node]: 求解器返回结果: []
[INFO] [1753422372.510470212] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422372.511953570] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422372.514605529] [solver_node]: 求解器返回结果: []
[INFO] [1753422372.610630010] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422372.612100952] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422372.614774256] [solver_node]: 求解器返回结果: []
[INFO] [1753422372.710603692] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422372.712073131] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422372.714752994] [solver_node]: 求解器返回结果: []
[INFO] [1753422372.810488733] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422372.811965147] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422372.814606962] [solver_node]: 求解器返回结果: []
[INFO] [1753422372.912084817] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422372.914367936] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422372.918825020] [solver_node]: 求解器返回结果: []
[INFO] [1753422373.011432407] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422373.012915573] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422373.015578220] [solver_node]: 求解器返回结果: []
[INFO] [1753422373.110415638] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422373.112030967] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422373.114738127] [solver_node]: 求解器返回结果: []
[INFO] [1753422373.212389138] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422373.215842938] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422373.222929132] [solver_node]: 求解器返回结果: []
[INFO] [1753422373.313333114] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422373.314970780] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422373.318074492] [solver_node]: 求解器返回结果: []
[INFO] [1753422373.410576533] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422373.412016051] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422373.414712683] [solver_node]: 求解器返回结果: []
[INFO] [1753422373.511310072] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422373.513645353] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422373.516373057] [solver_node]: 求解器返回结果: []
[INFO] [1753422373.610408954] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422373.611890360] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422373.614617777] [solver_node]: 求解器返回结果: []
[INFO] [1753422373.713618320] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422373.715082927] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422373.717981482] [solver_node]: 求解器返回结果: []
[INFO] [1753422373.810806378] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422373.812371083] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422373.815097475] [solver_node]: 求解器返回结果: []
[INFO] [1753422373.911298760] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422373.912767047] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422373.915735780] [solver_node]: 求解器返回结果: []
[INFO] [1753422374.011105465] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422374.012563959] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422374.015347440] [solver_node]: 求解器返回结果: []
[INFO] [1753422374.111112974] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422374.112588908] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422374.115412839] [solver_node]: 求解器返回结果: []
[INFO] [1753422374.210948480] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422374.212365277] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422374.215060629] [solver_node]: 求解器返回结果: []
[INFO] [1753422374.312252944] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422374.313761903] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422374.319232032] [solver_node]: 求解器返回结果: []
[INFO] [1753422374.411385043] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422374.412929011] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422374.417857465] [solver_node]: 求解器返回结果: []
[INFO] [1753422374.511411753] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422374.512819302] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422374.515961159] [solver_node]: 求解器返回结果: []
[INFO] [1753422374.610341224] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422374.611810182] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422374.614448445] [solver_node]: 求解器返回结果: []
[INFO] [1753422374.710574082] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422374.712872401] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422374.715601514] [solver_node]: 求解器返回结果: []
[INFO] [1753422374.810364274] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422374.811811472] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422374.815058580] [solver_node]: 求解器返回结果: []
[INFO] [1753422374.913167842] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422374.914818980] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422374.917678367] [solver_node]: 求解器返回结果: []
[INFO] [1753422375.010571073] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422375.012035359] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422375.014631285] [solver_node]: 求解器返回结果: []
[INFO] [1753422375.111134147] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422375.112549664] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422375.115215736] [solver_node]: 求解器返回结果: []
[INFO] [1753422375.213434889] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422375.214921960] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422375.217630432] [solver_node]: 求解器返回结果: []
[INFO] [1753422375.310757064] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422375.312133444] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422375.314787803] [solver_node]: 求解器返回结果: []
[INFO] [1753422375.411488685] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422375.412896266] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15199995 1.25899994]
[INFO] [1753422375.415561921] [solver_node]: 求解器返回结果: []
[INFO] [1753422375.510385932] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422375.511861835] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422375.514558051] [solver_node]: 求解器返回结果: []
[INFO] [1753422375.612095430] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422375.613504803] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422375.616250972] [solver_node]: 求解器返回结果: []
[INFO] [1753422375.710889507] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422375.712430979] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422375.715207165] [solver_node]: 求解器返回结果: []
[INFO] [1753422375.811727787] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422375.813157065] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422375.815953922] [solver_node]: 求解器返回结果: []
[INFO] [1753422375.910423270] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422375.911886052] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422375.914549980] [solver_node]: 求解器返回结果: []
[INFO] [1753422376.011703319] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422376.013192886] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422376.015915950] [solver_node]: 求解器返回结果: []
[INFO] [1753422376.111099682] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422376.112507359] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422376.115218647] [solver_node]: 求解器返回结果: []
[INFO] [1753422376.212384148] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422376.214200665] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422376.217049236] [solver_node]: 求解器返回结果: []
[INFO] [1753422376.311139473] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422376.312562063] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422376.315259015] [solver_node]: 求解器返回结果: []
[INFO] [1753422376.412237919] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422376.413702046] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422376.416744669] [solver_node]: 求解器返回结果: []
[INFO] [1753422376.510502195] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422376.512060819] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422376.514983023] [solver_node]: 求解器返回结果: []
[INFO] [1753422376.611979337] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422376.614361530] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422376.617337880] [solver_node]: 求解器返回结果: []
[INFO] [1753422376.711347475] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422376.712827761] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422376.715592491] [solver_node]: 求解器返回结果: []
[INFO] [1753422376.819860730] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422376.822810776] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422376.825528336] [solver_node]: 求解器返回结果: []
[INFO] [1753422376.911264992] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422376.912740862] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422376.915498231] [solver_node]: 求解器返回结果: []
[INFO] [1753422377.019564195] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422377.022266875] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422377.025691586] [solver_node]: 求解器返回结果: []
[INFO] [1753422377.111179598] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422377.112653708] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422377.115468871] [solver_node]: 求解器返回结果: []
[INFO] [1753422377.211411307] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422377.212912490] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422377.215849543] [solver_node]: 求解器返回结果: []
[INFO] [1753422377.310967354] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422377.312414840] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422377.315276659] [solver_node]: 求解器返回结果: []
[INFO] [1753422377.411976423] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422377.413453254] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422377.416185439] [solver_node]: 求解器返回结果: []
[INFO] [1753422377.515058016] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422377.517745079] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422377.520703797] [solver_node]: 求解器返回结果: []
[INFO] [1753422377.611239689] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422377.612726440] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422377.615519394] [solver_node]: 求解器返回结果: []
[INFO] [1753422377.711428357] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422377.712873443] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422377.719137893] [solver_node]: 求解器返回结果: []
[INFO] [1753422377.811295035] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422377.812767385] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422377.815443857] [solver_node]: 求解器返回结果: []
[INFO] [1753422377.910444097] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422377.911898048] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422377.914760443] [solver_node]: 求解器返回结果: []
[INFO] [1753422378.011477583] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422378.012967470] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422378.015774120] [solver_node]: 求解器返回结果: []
[INFO] [1753422378.110474420] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422378.112016884] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422378.114908976] [solver_node]: 求解器返回结果: []
[INFO] [1753422378.211965452] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422378.213453003] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422378.216278022] [solver_node]: 求解器返回结果: []
[INFO] [1753422378.310417318] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422378.311934085] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422378.314955268] [solver_node]: 求解器返回结果: []
[INFO] [1753422378.411297425] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422378.412766160] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422378.415444775] [solver_node]: 求解器返回结果: []
[INFO] [1753422378.510796513] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422378.512395842] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422378.515261149] [solver_node]: 求解器返回结果: []
[INFO] [1753422378.611095680] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1559998989105225, 1.2589999437332153])
[INFO] [1753422378.612641120] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.1559999  1.25899994]
[INFO] [1753422378.615560957] [solver_node]: 求解器返回结果: []
[INFO] [1753422378.710490381] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1559998989105225, 1.2589999437332153])
[INFO] [1753422378.712142735] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.1559999  1.25899994]
[INFO] [1753422378.714995435] [solver_node]: 求解器返回结果: []
[INFO] [1753422378.810914639] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1559998989105225, 1.2589999437332153])
[INFO] [1753422378.812608242] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.1559999  1.25899994]
[INFO] [1753422378.815525711] [solver_node]: 求解器返回结果: []
[INFO] [1753422378.910567330] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1559998989105225, 1.2589999437332153])
[INFO] [1753422378.912152290] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.1559999  1.25899994]
[INFO] [1753422378.915031134] [solver_node]: 求解器返回结果: []
[INFO] [1753422379.011591024] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1559998989105225, 1.2589999437332153])
[INFO] [1753422379.013377205] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.1559999  1.25899994]
[INFO] [1753422379.016466742] [solver_node]: 求解器返回结果: []
[INFO] [1753422379.110751225] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1559998989105225, 1.2589999437332153])
[INFO] [1753422379.112421244] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.1559999  1.25899994]
[INFO] [1753422379.115289784] [solver_node]: 求解器返回结果: []
[INFO] [1753422379.211698600] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422379.213493741] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422379.216460522] [solver_node]: 求解器返回结果: []
[INFO] [1753422379.310605323] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422379.312133131] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422379.315052296] [solver_node]: 求解器返回结果: []
[INFO] [1753422379.412156902] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422379.414465430] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422379.417256336] [solver_node]: 求解器返回结果: []
[INFO] [1753422379.511147788] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422379.513003314] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422379.516999717] [solver_node]: 求解器返回结果: []
[INFO] [1753422379.614375593] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422379.615853544] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422379.618503487] [solver_node]: 求解器返回结果: []
[INFO] [1753422379.710469427] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422379.712053364] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422379.714705355] [solver_node]: 求解器返回结果: []
[INFO] [1753422379.816036161] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422379.820705826] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422379.823683871] [solver_node]: 求解器返回结果: []
[INFO] [1753422379.911063828] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422379.912880154] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422379.917888802] [solver_node]: 求解器返回结果: []
[INFO] [1753422380.014340051] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422380.016497728] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422380.019336762] [solver_node]: 求解器返回结果: []
[INFO] [1753422380.112706892] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422380.114738135] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422380.117555185] [solver_node]: 求解器返回结果: []
[INFO] [1753422380.212383201] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422380.214150886] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422380.216940768] [solver_node]: 求解器返回结果: []
[INFO] [1753422380.311503403] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422380.312927144] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422380.315597344] [solver_node]: 求解器返回结果: []
[INFO] [1753422380.411578632] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422380.413276299] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422380.416306506] [solver_node]: 求解器返回结果: []
[INFO] [1753422380.510447532] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422380.511974284] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422380.514906024] [solver_node]: 求解器返回结果: []
[INFO] [1753422380.612818809] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422380.614369465] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422380.617136722] [solver_node]: 求解器返回结果: []
[INFO] [1753422380.710797866] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422380.712361803] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422380.715219750] [solver_node]: 求解器返回结果: []
[INFO] [1753422380.814993053] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422380.816517085] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422380.819389848] [solver_node]: 求解器返回结果: []
[INFO] [1753422380.910875491] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422380.912578983] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422380.915398913] [solver_node]: 求解器返回结果: []
[INFO] [1753422381.010561720] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422381.012115705] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422381.014833617] [solver_node]: 求解器返回结果: []
[INFO] [1753422381.110846779] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422381.112562559] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422381.115676447] [solver_node]: 求解器返回结果: []
[INFO] [1753422381.211448068] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422381.212889314] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422381.215664828] [solver_node]: 求解器返回结果: []
[INFO] [1753422381.311119450] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422381.313131076] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422381.316565227] [solver_node]: 求解器返回结果: []
[INFO] [1753422381.410444169] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422381.412077322] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422381.415113577] [solver_node]: 求解器返回结果: []
[INFO] [1753422381.517012814] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422381.518818963] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422381.522096695] [solver_node]: 求解器返回结果: []
[INFO] [1753422381.610548228] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1540000438690186, 1.2589999437332153])
[INFO] [1753422381.612146789] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15400004 1.25899994]
[INFO] [1753422381.615090178] [solver_node]: 求解器返回结果: []
[INFO] [1753422381.711601015] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422381.714606805] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422381.719599613] [solver_node]: 求解器返回结果: []
[INFO] [1753422381.810405242] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422381.811999451] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422381.815248095] [solver_node]: 求解器返回结果: []
[INFO] [1753422381.911306570] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422381.912985645] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422381.916290449] [solver_node]: 求解器返回结果: []
[INFO] [1753422382.010535926] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422382.012119671] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422382.014825296] [solver_node]: 求解器返回结果: []
[INFO] [1753422382.111333765] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422382.113017736] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422382.116729781] [solver_node]: 求解器返回结果: []
[INFO] [1753422382.210637716] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422382.212456890] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422382.215465368] [solver_node]: 求解器返回结果: []
[INFO] [1753422382.312750430] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422382.314534787] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422382.317780870] [solver_node]: 求解器返回结果: []
[INFO] [1753422382.410922997] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422382.412738587] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422382.416064928] [solver_node]: 求解器返回结果: []
[INFO] [1753422382.512530933] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422382.514151990] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422382.517303192] [solver_node]: 求解器返回结果: []
[INFO] [1753422382.610462119] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422382.611977767] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422382.614817762] [solver_node]: 求解器返回结果: []
[INFO] [1753422382.712912536] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422382.715061701] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422382.718092420] [solver_node]: 求解器返回结果: []
[INFO] [1753422382.810783305] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422382.812234792] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422382.814950976] [solver_node]: 求解器返回结果: []
[INFO] [1753422382.913961929] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422382.915820304] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422382.918809166] [solver_node]: 求解器返回结果: []
[INFO] [1753422383.011224366] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422383.012797679] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422383.015583145] [solver_node]: 求解器返回结果: []
[INFO] [1753422383.111829529] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422383.117231530] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422383.120778675] [solver_node]: 求解器返回结果: []
[INFO] [1753422383.211226540] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422383.213211189] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422383.216495065] [solver_node]: 求解器返回结果: []
[INFO] [1753422383.315219581] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422383.316702460] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422383.319555384] [solver_node]: 求解器返回结果: []
[INFO] [1753422383.411248106] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422383.412804426] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422383.415527939] [solver_node]: 求解器返回结果: []
[INFO] [1753422383.510972803] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422383.512466818] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422383.515233083] [solver_node]: 求解器返回结果: []
[INFO] [1753422383.612649092] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422383.615089911] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422383.618747555] [solver_node]: 求解器返回结果: []
[INFO] [1753422383.711006401] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422383.712460447] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422383.715163607] [solver_node]: 求解器返回结果: []
[INFO] [1753422383.811938835] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422383.813716696] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422383.816978524] [solver_node]: 求解器返回结果: []
[INFO] [1753422383.912613312] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422383.914100415] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422383.916928410] [solver_node]: 求解器返回结果: []
[INFO] [1753422384.014623561] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422384.016230922] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422384.019159207] [solver_node]: 求解器返回结果: []
[INFO] [1753422384.110649462] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422384.112334681] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422384.115194036] [solver_node]: 求解器返回结果: []
[INFO] [1753422384.214439717] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422384.216001733] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422384.218881505] [solver_node]: 求解器返回结果: []
[INFO] [1753422384.310815577] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422384.312344153] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422384.315077490] [solver_node]: 求解器返回结果: []
[INFO] [1753422384.411632362] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422384.413596595] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422384.416733876] [solver_node]: 求解器返回结果: []
[INFO] [1753422384.510700726] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422384.512371001] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422384.513537137] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422384.514341474] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422384.515935779] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422384.612585245] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422384.614182463] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422384.615401112] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422384.616198216] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422384.617340000] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422384.711962032] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422384.713416238] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422384.714502085] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422384.715330294] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422384.716177448] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422384.812503739] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422384.814601319] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15499997 1.25899994]
[WARN] [1753422384.815821888] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422384.816772340] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422384.817635206] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422384.911981104] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422384.913633171] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15499997 1.25899994]
[WARN] [1753422384.914755754] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422384.915508794] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422384.916356139] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422385.011584200] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422385.015900194] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15499997 1.25899994]
[WARN] [1753422385.017141372] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422385.017893227] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422385.018758845] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422385.110378384] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422385.111869199] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15499997 1.25899994]
[WARN] [1753422385.112939877] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422385.113673556] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422385.114486213] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422385.212016435] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422385.213472913] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15499997 1.25899994]
[WARN] [1753422385.214559912] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422385.215322904] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422385.218076497] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422385.310584438] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422385.312211416] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422385.313388176] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422385.314183457] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422385.315108980] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422385.411660077] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422385.413561557] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422385.414877904] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422385.415772451] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422385.416678582] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422385.510535639] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422385.512179929] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422385.513271024] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422385.514047520] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422385.514928466] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422385.612738117] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422385.614511274] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422385.615899111] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422385.616930717] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422385.618257368] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422385.711431083] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422385.712862121] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422385.713922687] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422385.714646478] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422385.715487871] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422385.811506766] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422385.814240742] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422385.815563266] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422385.816356434] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422385.817399976] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422385.912098427] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422385.913742685] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15199995 1.25899994]
[WARN] [1753422385.914905877] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422385.915668549] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422385.916500598] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422386.011293067] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422386.013194291] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15199995 1.25899994]
[WARN] [1753422386.014500302] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422386.015401248] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422386.016288947] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422386.111971451] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422386.113540028] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15199995 1.25899994]
[WARN] [1753422386.114735349] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422386.115500869] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422386.116331126] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422386.211917276] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422386.213549502] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15199995 1.25899994]
[WARN] [1753422386.214715222] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422386.215508839] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422386.216362488] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422386.310971754] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422386.312391176] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15199995 1.25899994]
[WARN] [1753422386.313469150] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422386.314216846] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422386.315076416] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422386.413634308] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1510000228881836, 1.2589999437332153])
[INFO] [1753422386.416490527] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15100002 1.25899994]
[WARN] [1753422386.417757049] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422386.418534218] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422386.419412796] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422386.510583622] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1510000228881836, 1.2589999437332153])
[INFO] [1753422386.512411276] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15100002 1.25899994]
[WARN] [1753422386.513520739] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422386.514239058] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422386.515069155] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422386.612883896] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1510000228881836, 1.2589999437332153])
[INFO] [1753422386.618918453] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15100002 1.25899994]
[WARN] [1753422386.624751567] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422386.626880219] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422386.627822255] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422386.710900496] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1510000228881836, 1.2589999437332153])
[INFO] [1753422386.714332888] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15100002 1.25899994]
[WARN] [1753422386.715805495] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422386.716611463] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422386.717453497] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422386.811114743] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1510000228881836, 1.2589999437332153])
[INFO] [1753422386.813174402] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15100002 1.25899994]
[WARN] [1753422386.814282521] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422386.815683798] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422386.817102452] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422386.910693648] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422386.912264849] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15499997 1.25899994]
[WARN] [1753422386.915787386] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422386.916714509] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422386.917646625] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422387.010959672] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422387.012654267] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15499997 1.25899994]
[WARN] [1753422387.013812307] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422387.014574851] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422387.015452853] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422387.111104030] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422387.113198377] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15499997 1.25899994]
[WARN] [1753422387.114705545] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422387.116219144] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422387.117654438] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422387.210577366] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422387.212102261] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15499997 1.25899994]
[WARN] [1753422387.213224237] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422387.213981789] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422387.214844975] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422387.310297043] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422387.311798866] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15499997 1.25899994]
[WARN] [1753422387.312892521] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422387.313650169] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422387.314512651] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422387.410581756] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422387.412116860] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15199995 1.25899994]
[WARN] [1753422387.413228083] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422387.413972962] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422387.414830580] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422387.510428412] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422387.512020957] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15199995 1.25899994]
[WARN] [1753422387.513115124] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422387.513862723] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422387.514702133] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422387.611437012] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422387.612886706] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15199995 1.25899994]
[WARN] [1753422387.613965064] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422387.614732792] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422387.615632491] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422387.710450338] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422387.711988450] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15199995 1.25899994]
[WARN] [1753422387.713132634] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422387.714093038] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422387.715074274] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422387.811878755] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1519999504089355, 1.2589999437332153])
[INFO] [1753422387.813477508] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15199995 1.25899994]
[WARN] [1753422387.814629148] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422387.815428269] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422387.816265534] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422387.910909938] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422387.912373008] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422387.913523176] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422387.914298072] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422387.915204139] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422388.010884916] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422388.012530167] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422388.013730672] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422388.014516640] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422388.015416083] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422388.111605767] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422388.113439150] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422388.114998318] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422388.115779006] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422388.116627952] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422388.211001279] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422388.214204834] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422388.215326105] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422388.216096521] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422388.216938139] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422388.310463928] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422388.311929782] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422388.313033581] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422388.313782301] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422388.314650927] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422388.412028380] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422388.413570524] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422388.414828023] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422388.415655784] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422388.416538426] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422388.510566402] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422388.513078550] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422388.514423538] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422388.515363942] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422388.516238744] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422388.613826922] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422388.615449580] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422388.616636036] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422388.617465334] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422388.618347912] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422388.711252344] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422388.713219553] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422388.714432187] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422388.715346510] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422388.716456229] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422388.814911881] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422388.816462281] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422388.817570176] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422388.818324400] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422388.819162753] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422388.911736267] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422388.914130236] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422388.916803796] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422388.918624090] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422388.920381759] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422389.013197101] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422389.014824559] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422389.016291822] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422389.017179008] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422389.018027858] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422389.112349313] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422389.114104997] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422389.115742983] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422389.116650330] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422389.117581838] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422389.211501844] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422389.213330970] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422389.214491666] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422389.216002770] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422389.216915781] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422389.310901645] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422389.312696914] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422389.314163281] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422389.315278376] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422389.316378335] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422389.410770191] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422389.412341584] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422389.413573129] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422389.414571710] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422389.415747927] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422389.513249928] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422389.515083790] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15499997 1.25899994]
[WARN] [1753422389.516486027] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422389.517514593] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422389.519123266] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422389.611883344] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422389.613449361] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15499997 1.25899994]
[WARN] [1753422389.614640906] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422389.616893305] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422389.617994224] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422389.710483608] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422389.711977591] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15499997 1.25899994]
[WARN] [1753422389.713111695] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422389.713881823] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422389.714757777] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422389.811792793] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422389.813382874] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15499997 1.25899994]
[WARN] [1753422389.814559282] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422389.815370787] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422389.816269174] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422389.911077007] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1549999713897705, 1.2589999437332153])
[INFO] [1753422389.912492460] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15499997 1.25899994]
[WARN] [1753422389.913605700] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422389.914348595] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422389.915232742] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422390.011249496] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422390.012750359] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422390.013890735] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422390.014660319] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422390.015498736] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422390.110445773] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422390.111930380] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422390.113059844] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422390.113921654] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422390.114842825] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422390.212812421] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422390.214489448] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422390.215658400] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422390.216427440] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422390.217256353] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422390.311059750] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422390.312489060] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422390.313585467] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422390.314335979] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422390.315208093] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422390.411577495] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422390.413323676] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      3.15300012 1.25899994]
[WARN] [1753422390.416024980] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422390.416898918] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422390.417754104] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422390.512137481] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422390.513760523] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422390.516612006] [solver_node]: 求解器返回结果: []
[INFO] [1753422390.610944118] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422390.612550488] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422390.615289393] [solver_node]: 求解器返回结果: []
[INFO] [1753422390.711836047] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422390.713428688] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422390.716314508] [solver_node]: 求解器返回结果: []
[INFO] [1753422390.810365014] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422390.811785492] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422390.814402955] [solver_node]: 求解器返回结果: []
[INFO] [1753422390.911725689] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422390.913299834] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422390.917443152] [solver_node]: 求解器返回结果: []
[INFO] [1753422391.011004144] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6659998893737793, 3.1530001163482666, 1.2589999437332153])
[INFO] [1753422391.012585137] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66599989 3.15300012 1.25899994]
[INFO] [1753422391.015712370] [solver_node]: 求解器返回结果: []
[INFO] [1753422391.113666895] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6640000343322754, 3.1530001163482666, 0.3070000112056732])
[INFO] [1753422391.115235056] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66400003 3.15300012 0.30700001]
[WARN] [1753422391.116367975] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422391.117114583] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422391.119767438] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422391.210397650] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6600000858306885, 3.1429998874664307, 0.3070000112056732])
[INFO] [1753422391.211857008] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66000009 3.14299989 0.30700001]
[WARN] [1753422391.212966024] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422391.213728823] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422391.214941105] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422391.316327541] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6600000858306885, 3.1429998874664307, 0.3070000112056732])
[INFO] [1753422391.317760467] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66000009 3.14299989 0.30700001]
[WARN] [1753422391.318977324] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422391.319817758] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422391.320660495] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422391.410589252] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6549999713897705, 3.1429998874664307, 0.30399999022483826])
[INFO] [1753422391.411997634] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.65499997 3.14299989 0.30399999]
[WARN] [1753422391.413068024] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422391.413791111] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422391.414611448] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422391.511343131] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6459999084472656, 3.121000051498413, 0.3009999990463257])
[INFO] [1753422391.514380795] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.64599991 3.12100005 0.301     ]
[WARN] [1753422391.515594740] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422391.516390213] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422391.517280503] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422391.611717290] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.638000011444092, 3.0899999141693115, 0.3009999990463257])
[INFO] [1753422391.613334700] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.63800001 3.08999991 0.301     ]
[WARN] [1753422391.614531557] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422391.615920962] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422391.617303103] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422391.710548089] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.630000114440918, 3.0899999141693115, 0.296999990940094])
[INFO] [1753422391.712069017] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.63000011 3.08999991 0.29699999]
[WARN] [1753422391.713301459] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422391.714136804] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422391.715084952] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422391.811710041] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.630000114440918, 3.0899999141693115, 0.2939999997615814])
[INFO] [1753422391.813537311] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.63000011 3.08999991 0.294     ]
[WARN] [1753422391.814788857] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422391.815617546] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422391.816506429] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422391.910567400] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.630000114440918, 3.1389999389648438, 0.2939999997615814])
[INFO] [1753422391.912225707] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.63000011 3.13899994 0.294     ]
[WARN] [1753422391.913387939] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422391.914171763] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422391.915061574] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422392.011189756] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.630000114440918, 3.2079999446868896, 0.2939999997615814])
[INFO] [1753422392.012926880] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.63000011 3.20799994 0.294     ]
[WARN] [1753422392.014283389] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422392.015152943] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422392.016138628] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422392.110900286] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.630000114440918, 3.2839999198913574, 0.2939999997615814])
[INFO] [1753422392.112417438] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.63000011 3.28399992 0.294     ]
[WARN] [1753422392.113583190] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422392.114396935] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422392.115315707] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422392.212993906] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.630000114440918, 3.2839999198913574, 0.2939999997615814])
[INFO] [1753422392.214568947] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.63000011 3.28399992 0.294     ]
[WARN] [1753422392.215984625] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422392.216891236] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422392.217750550] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422392.310613609] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.630000114440918, 3.2839999198913574, 0.2939999997615814])
[INFO] [1753422392.312107784] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.63000011 3.28399992 0.294     ]
[WARN] [1753422392.313215775] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422392.313959439] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422392.314833953] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422392.413459277] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.630000114440918, 3.2769999504089355, 0.2939999997615814])
[INFO] [1753422392.415162320] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.63000011 3.27699995 0.294     ]
[WARN] [1753422392.416383818] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422392.417591715] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422392.418522774] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422392.511597294] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.630000114440918, 3.2709999084472656, 0.2939999997615814])
[INFO] [1753422392.513223984] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.63000011 3.27099991 0.294     ]
[WARN] [1753422392.514397608] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422392.515243546] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422392.516235151] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422392.614355120] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.630000114440918, 3.2669999599456787, 0.2939999997615814])
[INFO] [1753422392.616052435] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.63000011 3.26699996 0.294     ]
[WARN] [1753422392.617871641] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422392.618653770] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422392.619545244] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422392.710415558] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.630000114440918, 3.2669999599456787, 0.2939999997615814])
[INFO] [1753422392.711897285] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.63000011 3.26699996 0.294     ]
[WARN] [1753422392.713016860] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422392.713773772] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422392.714620382] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422392.813838741] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.630000114440918, 3.2639999389648438, 0.2939999997615814])
[INFO] [1753422392.817619588] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.63000011 3.26399994 0.294     ]
[WARN] [1753422392.819318568] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422392.820135577] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422392.820969322] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422392.912224476] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.630000114440918, 3.26200008392334, 0.2939999997615814])
[INFO] [1753422392.913758204] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.63000011 3.26200008 0.294     ]
[WARN] [1753422392.915028215] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422392.915810023] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422392.916662553] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422393.014210958] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7699999809265137, 3.26200008392334, 0.2939999997615814])
[INFO] [1753422393.015927954] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.76999998 3.26200008 0.294     ]
[WARN] [1753422393.017679638] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422393.018542376] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422393.019421819] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422393.111129335] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7809998989105225, 3.26200008392334, 0.2750000059604645])
[INFO] [1753422393.112594293] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7809999  3.26200008 0.27500001]
[WARN] [1753422393.113703981] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422393.114461852] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422393.115331535] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422393.212975783] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7809998989105225, 3.26200008392334, 0.2750000059604645])
[INFO] [1753422393.214567976] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7809999  3.26200008 0.27500001]
[WARN] [1753422393.215787905] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422393.216583122] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422393.217958991] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422393.310523869] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7809998989105225, 3.26200008392334, 0.27399998903274536])
[INFO] [1753422393.312049565] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7809999  3.26200008 0.27399999]
[WARN] [1753422393.313182004] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422393.313965349] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422393.314867735] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422393.415622320] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7809998989105225, 3.26200008392334, 0.27300000190734863])
[INFO] [1753422393.417588058] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7809999  3.26200008 0.273     ]
[WARN] [1753422393.420608281] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422393.421471851] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422393.422337373] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422393.511045690] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7809998989105225, 3.26200008392334, 0.2720000147819519])
[INFO] [1753422393.512575898] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7809999  3.26200008 0.27200001]
[WARN] [1753422393.513759507] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422393.514525315] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422393.515387029] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422393.613281778] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7809998989105225, 3.26200008392334, 0.2720000147819519])
[INFO] [1753422393.614960917] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7809999  3.26200008 0.27200001]
[WARN] [1753422393.616143502] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422393.616938078] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422393.617823697] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422393.710485313] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7809998989105225, 3.26200008392334, 0.27000001072883606])
[INFO] [1753422393.712000321] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7809999  3.26200008 0.27000001]
[WARN] [1753422393.713106712] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422393.713851975] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422393.714697113] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422393.812314288] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7809998989105225, 4.736999988555908, 0.26899999380111694])
[INFO] [1753422393.816120832] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7809999  4.73699999 0.26899999]
[WARN] [1753422393.817516349] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422393.818381487] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422393.819290050] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422393.910544949] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7809998989105225, 4.736999988555908, 0.26899999380111694])
[INFO] [1753422393.912108597] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7809999  4.73699999 0.26899999]
[WARN] [1753422393.913249901] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422393.914158368] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422393.915013490] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422394.011713783] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7809998989105225, 4.664000034332275, 0.2639999985694885])
[INFO] [1753422394.013426106] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7809999  4.66400003 0.264     ]
[WARN] [1753422394.015198399] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422394.016301078] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422394.017319084] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422394.110601578] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7809998989105225, 4.664000034332275, 0.2639999985694885])
[INFO] [1753422394.112151338] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7809999  4.66400003 0.264     ]
[WARN] [1753422394.113324995] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422394.114116083] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422394.115124456] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422394.211956304] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7809998989105225, 4.599999904632568, 0.26100000739097595])
[INFO] [1753422394.213896857] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7809999  4.5999999  0.26100001]
[WARN] [1753422394.215271798] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422394.216124903] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422394.217021690] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422394.311400463] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7809998989105225, 4.599999904632568, 0.257999986410141])
[INFO] [1753422394.313274678] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7809999  4.5999999  0.25799999]
[WARN] [1753422394.314499312] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422394.316047696] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422394.317292458] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422394.414545755] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7809998989105225, 4.5980000495910645, 0.2540000081062317])
[INFO] [1753422394.417959458] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7809999  4.59800005 0.25400001]
[WARN] [1753422394.420402325] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422394.421260423] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422394.422157466] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422394.511077629] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7809998989105225, 4.645999908447266, 0.2540000081062317])
[INFO] [1753422394.512513979] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7809999  4.64599991 0.25400001]
[WARN] [1753422394.513620210] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422394.514388162] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422394.515278037] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422394.612273856] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 6.422999858856201, 4.675000190734863, 0.25])
[INFO] [1753422394.618369504] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 6.42299986 4.67500019 0.25      ]
[WARN] [1753422394.619725052] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422394.620482444] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422394.621358078] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422394.710341762] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 6.422999858856201, 4.675000190734863, 0.2460000067949295])
[INFO] [1753422394.711767904] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 6.42299986 4.67500019 0.24600001]
[WARN] [1753422394.712848439] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422394.713587078] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422394.714407575] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422394.810509520] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.63100004196167, 4.675000190734863, 0.24199999868869781])
[INFO] [1753422394.812833121] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.63100004 4.67500019 0.242     ]
[WARN] [1753422394.815562874] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422394.819114244] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422394.823022518] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422394.911788917] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.63100004196167, 4.669000148773193, 0.24199999868869781])
[INFO] [1753422394.913265748] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.63100004 4.66900015 0.242     ]
[WARN] [1753422394.914338922] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422394.915129275] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422394.916118256] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422395.010790347] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.625, 4.669000148773193, 0.24199999868869781])
[INFO] [1753422395.012305866] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.625      4.66900015 0.242     ]
[WARN] [1753422395.014425463] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422395.015349578] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422395.017149488] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422395.111502565] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.625, 4.669000148773193, 0.23800000548362732])
[INFO] [1753422395.112997924] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.625      4.66900015 0.23800001]
[WARN] [1753422395.114137372] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422395.114979054] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422395.115824639] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422395.211287660] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.617000102996826, 4.659999847412109, 0.23800000548362732])
[INFO] [1753422395.214379788] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.6170001  4.65999985 0.23800001]
[WARN] [1753422395.216575130] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422395.217503246] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422395.218394944] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422395.311136116] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.611000061035156, 4.6570000648498535, 0.23600000143051147])
[INFO] [1753422395.312560658] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.61100006 4.65700006 0.236     ]
[WARN] [1753422395.313653545] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422395.314403288] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422395.315330124] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422395.411902031] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.611000061035156, 4.65500020980835, 0.23499999940395355])
[INFO] [1753422395.413582642] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.61100006 4.65500021 0.235     ]
[WARN] [1753422395.414770987] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422395.415578204] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422395.416884023] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422395.512012157] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.611000061035156, 4.65500020980835, 0.23399999737739563])
[INFO] [1753422395.514363214] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.61100006 4.65500021 0.234     ]
[WARN] [1753422395.515509830] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422395.518627143] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422395.519511866] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422395.611190999] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.611000061035156, 4.6539998054504395, 0.23399999737739563])
[INFO] [1753422395.614135285] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.61100006 4.65399981 0.234     ]
[WARN] [1753422395.618439695] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422395.619463908] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422395.620332982] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422395.712072469] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.611000061035156, 4.6539998054504395, 0.23399999737739563])
[INFO] [1753422395.713642934] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.61100006 4.65399981 0.234     ]
[WARN] [1753422395.714861103] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422395.716189963] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422395.717409989] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422395.810594945] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.611000061035156, 4.6539998054504395, 0.23399999737739563])
[INFO] [1753422395.812113505] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.61100006 4.65399981 0.234     ]
[WARN] [1753422395.813249881] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422395.814220685] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422395.815753581] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422395.911275643] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.611999988555908, 4.6539998054504395, 0.23399999737739563])
[INFO] [1753422395.912829723] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.61199999 4.65399981 0.234     ]
[WARN] [1753422395.913971283] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422395.914781700] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422395.915627414] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422396.010758108] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.611999988555908, 4.6539998054504395, 0.23399999737739563])
[INFO] [1753422396.013246000] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.61199999 4.65399981 0.234     ]
[WARN] [1753422396.015420285] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422396.017812623] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422396.020569769] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422396.110620645] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.611999988555908, 4.6539998054504395, 0.23399999737739563])
[INFO] [1753422396.112157285] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.61199999 4.65399981 0.234     ]
[WARN] [1753422396.113226332] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422396.113961643] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422396.114800605] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422396.210656242] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.611999988555908, 4.6539998054504395, 0.23399999737739563])
[INFO] [1753422396.212135249] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.61199999 4.65399981 0.234     ]
[WARN] [1753422396.213227368] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422396.213964823] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422396.214806825] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422396.311200170] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.611999988555908, 4.6539998054504395, 0.23399999737739563])
[INFO] [1753422396.312621032] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.61199999 4.65399981 0.234     ]
[WARN] [1753422396.313699102] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422396.314448078] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422396.315308928] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422396.411352762] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.611999988555908, 4.6539998054504395, 0.23399999737739563])
[INFO] [1753422396.412806520] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.61199999 4.65399981 0.234     ]
[WARN] [1753422396.413891663] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422396.414619966] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422396.415452783] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422396.511201987] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.611999988555908, 4.6539998054504395, 0.23399999737739563])
[INFO] [1753422396.512726243] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.61199999 4.65399981 0.234     ]
[WARN] [1753422396.513854746] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422396.514605546] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422396.515501021] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422396.611345330] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.611999988555908, 4.6539998054504395, 0.23399999737739563])
[INFO] [1753422396.614068203] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.61199999 4.65399981 0.234     ]
[WARN] [1753422396.615452936] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422396.616333083] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422396.618560521] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422396.710844628] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.611999988555908, 4.6539998054504395, 0.23399999737739563])
[INFO] [1753422396.712368884] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.61199999 4.65399981 0.234     ]
[WARN] [1753422396.713548717] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422396.714343293] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422396.715275697] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422396.810630716] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.611999988555908, 4.6539998054504395, 0.23399999737739563])
[INFO] [1753422396.812258046] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.61199999 4.65399981 0.234     ]
[WARN] [1753422396.813452503] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422396.814276680] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422396.815204220] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422396.910578951] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.611999988555908, 4.6539998054504395, 0.23399999737739563])
[INFO] [1753422396.912126440] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.61199999 4.65399981 0.234     ]
[WARN] [1753422396.913203262] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422396.913941966] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422396.914776863] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422397.010615701] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.611999988555908, 4.6539998054504395, 0.23399999737739563])
[INFO] [1753422397.012095252] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.61199999 4.65399981 0.234     ]
[WARN] [1753422397.013179626] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422397.013915098] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422397.014789292] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422397.110474207] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1160000562667847, 4.6539998054504395, 0.23399999737739563])
[INFO] [1753422397.111972318] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.11600006 4.65399981 0.234     ]
[WARN] [1753422397.113059093] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422397.113801157] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422397.114616534] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422397.210431436] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1160000562667847, 4.6539998054504395, 0.23399999737739563])
[INFO] [1753422397.211912011] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.11600006 4.65399981 0.234     ]
[WARN] [1753422397.213000097] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422397.213725713] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422397.214526721] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422397.310800577] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1160000562667847, 4.6539998054504395, 0.23399999737739563])
[INFO] [1753422397.312238687] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.11600006 4.65399981 0.234     ]
[WARN] [1753422397.313301621] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422397.314039557] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422397.314903575] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422397.411046067] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1160000562667847, 4.6539998054504395, 0.23399999737739563])
[INFO] [1753422397.412498610] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.11600006 4.65399981 0.234     ]
[WARN] [1753422397.413634474] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422397.414390681] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422397.415249163] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422397.510724730] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1160000562667847, 4.6539998054504395, 0.23399999737739563])
[INFO] [1753422397.512270746] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.11600006 4.65399981 0.234     ]
[WARN] [1753422397.513387250] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422397.514181762] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422397.515072341] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422397.610587013] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.100000023841858, 4.6529998779296875, 0.23399999737739563])
[INFO] [1753422397.612065220] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.10000002 4.65299988 0.234     ]
[WARN] [1753422397.613300573] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422397.614068461] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422397.614953856] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422397.712347607] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.100000023841858, 4.6519999504089355, 0.23399999737739563])
[INFO] [1753422397.713928344] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.10000002 4.65199995 0.234     ]
[WARN] [1753422397.715105233] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422397.715935618] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422397.717243421] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422397.816373081] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.100000023841858, 4.650000095367432, 0.23399999737739563])
[INFO] [1753422397.820375724] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.10000002 4.6500001  0.234     ]
[WARN] [1753422397.822624827] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422397.824326015] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422397.825291411] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422397.911140088] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.100000023841858, 4.650000095367432, 0.23399999737739563])
[INFO] [1753422397.914170936] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.10000002 4.6500001  0.234     ]
[WARN] [1753422397.915982718] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422397.916802767] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422397.917630912] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422398.010762462] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.100000023841858, 4.646999835968018, 0.23399999737739563])
[INFO] [1753422398.012299230] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.10000002 4.64699984 0.234     ]
[WARN] [1753422398.013480759] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422398.014277224] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422398.015730406] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422398.111603550] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.100000023841858, 4.64300012588501, 0.23399999737739563])
[INFO] [1753422398.113641961] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.10000002 4.64300013 0.234     ]
[WARN] [1753422398.115393165] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422398.116208735] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422398.118194760] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422398.210575767] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.100000023841858, 4.639999866485596, 0.23399999737739563])
[INFO] [1753422398.212043158] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.10000002 4.63999987 0.234     ]
[WARN] [1753422398.213133517] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422398.214014719] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422398.215583616] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422398.311322229] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.100000023841858, 4.63700008392334, 0.23399999737739563])
[INFO] [1753422398.313155804] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.10000002 4.63700008 0.234     ]
[WARN] [1753422398.314293043] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422398.315125765] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422398.315957462] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422398.411101119] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.100000023841858, 4.63700008392334, 0.23399999737739563])
[INFO] [1753422398.412649343] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.10000002 4.63700008 0.234     ]
[WARN] [1753422398.413835896] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422398.414600584] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422398.415457306] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422398.511490774] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.100000023841858, 4.633999824523926, 0.23399999737739563])
[INFO] [1753422398.513018390] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.10000002 4.63399982 0.234     ]
[WARN] [1753422398.514151821] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422398.515011327] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422398.515881074] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422398.610412013] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.100000023841858, 4.63100004196167, 0.23399999737739563])
[INFO] [1753422398.612035119] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.10000002 4.63100004 0.234     ]
[WARN] [1753422398.613220520] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422398.614153052] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422398.615070511] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422398.711147915] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.100000023841858, 4.627999782562256, 0.23399999737739563])
[INFO] [1753422398.712718380] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.10000002 4.62799978 0.234     ]
[WARN] [1753422398.713861604] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422398.714631732] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422398.715510087] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422398.810391274] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.668000221252441, 4.627999782562256, 0.11900000274181366])
[INFO] [1753422398.811994828] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.66800022 4.62799978 0.119     ]
[WARN] [1753422398.813149956] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422398.813913652] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422398.814825831] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422398.910660894] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.666999816894531, 4.626999855041504, 0.11900000274181366])
[INFO] [1753422398.912207486] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.66699982 4.62699986 0.119     ]
[WARN] [1753422398.913371031] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422398.914153319] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422398.915109627] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422399.011511518] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.666999816894531, 4.625999927520752, 0.11900000274181366])
[INFO] [1753422399.013054655] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.66699982 4.62599993 0.119     ]
[WARN] [1753422399.014230455] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422399.015272589] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422399.019133022] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422399.112101370] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.665999889373779, 4.625999927520752, 0.11900000274181366])
[INFO] [1753422399.115517346] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.66599989 4.62599993 0.119     ]
[WARN] [1753422399.116605305] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422399.117363337] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422399.118176538] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422399.211711330] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.665999889373779, 4.625999927520752, 0.11900000274181366])
[INFO] [1753422399.213320643] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.66599989 4.62599993 0.119     ]
[WARN] [1753422399.214473979] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422399.215268588] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422399.216105854] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422399.310519320] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.665999889373779, 4.625999927520752, 0.11900000274181366])
[INFO] [1753422399.312212124] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.66599989 4.62599993 0.119     ]
[WARN] [1753422399.313407253] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422399.314208517] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422399.315073848] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422399.410542824] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.665999889373779, 4.625999927520752, 0.11900000274181366])
[INFO] [1753422399.412043528] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.66599989 4.62599993 0.119     ]
[WARN] [1753422399.413150303] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422399.413899822] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422399.414743680] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422399.510564632] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.665999889373779, 4.625999927520752, 0.11900000274181366])
[INFO] [1753422399.512096088] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.66599989 4.62599993 0.119     ]
[WARN] [1753422399.513274513] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422399.514056481] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422399.514985557] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422399.612799798] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.665999889373779, 4.625, 0.11900000274181366])
[INFO] [1753422399.614371991] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.66599989 4.625      0.119     ]
[WARN] [1753422399.615534480] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422399.616321120] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422399.617275860] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422399.710496118] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.665999889373779, 4.625, 0.11900000274181366])
[INFO] [1753422399.712541312] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.66599989 4.625      0.119     ]
[WARN] [1753422399.713846908] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422399.714702030] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422399.715661154] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422399.812487215] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.665999889373779, 4.625, 0.11900000274181366])
[INFO] [1753422399.814022767] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.66599989 4.625      0.119     ]
[WARN] [1753422399.815210696] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422399.815997560] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422399.816839658] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422399.910371026] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.915999889373779, 4.625, 0.11900000274181366])
[INFO] [1753422399.911886546] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.91599989 4.625      0.119     ]
[WARN] [1753422399.913002313] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422399.913770873] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422399.914600235] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422400.012885238] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.165999889373779, 4.625, 0.11900000274181366])
[INFO] [1753422400.014441815] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.16599989 4.625      0.119     ]
[WARN] [1753422400.015628944] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422400.016414080] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422400.017258962] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422400.111066849] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.414999961853027, 4.625, 0.11900000274181366])
[INFO] [1753422400.113034186] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41499996 4.625      0.119     ]
[WARN] [1753422400.114173794] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422400.114982675] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422400.115827108] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422400.210915534] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.414999961853027, 4.625, 0.11900000274181366])
[INFO] [1753422400.212757397] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41499996 4.625      0.119     ]
[WARN] [1753422400.214095761] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422400.214899585] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422400.215757555] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422400.311101282] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.414999961853027, 4.625, 0.11900000274181366])
[INFO] [1753422400.312667395] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41499996 4.625      0.119     ]
[WARN] [1753422400.314144418] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422400.315050421] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422400.316292111] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422400.414335863] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.414999961853027, 4.625, 0.11900000274181366])
[INFO] [1753422400.415857591] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41499996 4.625      0.119     ]
[WARN] [1753422400.417038607] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422400.417842784] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422400.418715922] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422400.511222470] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.414999961853027, 4.625, 0.11900000274181366])
[INFO] [1753422400.513069293] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41499996 4.625      0.119     ]
[WARN] [1753422400.514427785] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422400.515295931] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422400.516186894] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422400.615709812] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.414999961853027, 4.625, 0.11900000274181366])
[INFO] [1753422400.617247285] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41499996 4.625      0.119     ]
[WARN] [1753422400.618398541] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422400.619503012] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422400.620879393] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422400.710554105] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.414999961853027, 4.625, 0.11900000274181366])
[INFO] [1753422400.712172635] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41499996 4.625      0.119     ]
[WARN] [1753422400.713402837] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422400.714232262] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422400.715140057] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422400.812402672] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.414999961853027, 4.625, 0.11900000274181366])
[INFO] [1753422400.814728353] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41499996 4.625      0.119     ]
[WARN] [1753422400.816557223] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422400.818605202] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422400.820856897] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422400.910921826] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.414999961853027, 4.625, 0.11900000274181366])
[INFO] [1753422400.912783017] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41499996 4.625      0.119     ]
[WARN] [1753422400.914010434] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422400.915205723] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422400.916341619] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422401.011483998] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.414999961853027, 4.625, 1.934999942779541])
[INFO] [1753422401.013066943] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41499996 4.625      1.93499994]
[INFO] [1753422401.015865210] [solver_node]: 求解器返回结果: []
[INFO] [1753422401.111734229] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.414999961853027, 4.625, 1.934999942779541])
[INFO] [1753422401.113241268] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41499996 4.625      1.93499994]
[INFO] [1753422401.115961933] [solver_node]: 求解器返回结果: []
[INFO] [1753422401.211792616] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.414999961853027, 4.625, 1.934999942779541])
[INFO] [1753422401.213304647] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41499996 4.625      1.93499994]
[INFO] [1753422401.216111874] [solver_node]: 求解器返回结果: []
[INFO] [1753422401.310382108] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.414999961853027, 4.625, 1.934999942779541])
[INFO] [1753422401.311936508] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41499996 4.625      1.93499994]
[INFO] [1753422401.314914587] [solver_node]: 求解器返回结果: []
[INFO] [1753422401.412589243] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.414999961853027, 4.625, 1.934999942779541])
[INFO] [1753422401.416280681] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41499996 4.625      1.93499994]
[INFO] [1753422401.420280893] [solver_node]: 求解器返回结果: []
[INFO] [1753422401.510708613] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.414999961853027, 4.625, 1.909999966621399])
[INFO] [1753422401.512260902] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41499996 4.625      1.90999997]
[INFO] [1753422401.515249541] [solver_node]: 求解器返回结果: []
[INFO] [1753422401.612364922] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.414999961853027, 4.625, 1.909999966621399])
[INFO] [1753422401.613980828] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41499996 4.625      1.90999997]
[INFO] [1753422401.617099997] [solver_node]: 求解器返回结果: []
[INFO] [1753422401.710518565] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.409999847412109, 4.623000144958496, 1.909999966621399])
[INFO] [1753422401.712004324] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40999985 4.62300014 1.90999997]
[INFO] [1753422401.714707804] [solver_node]: 求解器返回结果: []
[INFO] [1753422401.811753104] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.409999847412109, 4.622000217437744, 1.909999966621399])
[INFO] [1753422401.813414579] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40999985 4.62200022 1.90999997]
[INFO] [1753422401.816343312] [solver_node]: 求解器返回结果: []
[INFO] [1753422401.910972593] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4070000648498535, 4.619999885559082, 1.909999966621399])
[INFO] [1753422401.912506833] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40700006 4.61999989 1.90999997]
[INFO] [1753422401.915295948] [solver_node]: 求解器返回结果: []
[INFO] [1753422402.010719581] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.406000137329102, 4.619999885559082, 2.7049999237060547])
[INFO] [1753422402.012214109] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40600014 4.61999989 2.70499992]
[INFO] [1753422402.014987575] [solver_node]: 求解器返回结果: []
[INFO] [1753422402.111181498] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4120001792907715, 4.61899995803833, 2.7049999237060547])
[INFO] [1753422402.115358705] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41200018 4.61899996 2.70499992]
[INFO] [1753422402.121240077] [solver_node]: 求解器返回结果: []
[INFO] [1753422402.210700290] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4120001792907715, 4.618000030517578, 2.7049999237060547])
[INFO] [1753422402.212137440] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41200018 4.61800003 2.70499992]
[INFO] [1753422402.214932827] [solver_node]: 求解器返回结果: []
[INFO] [1753422402.313295691] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.410999774932861, 4.617000102996826, 2.7049999237060547])
[INFO] [1753422402.320172380] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41099977 4.6170001  2.70499992]
[INFO] [1753422402.323789031] [solver_node]: 求解器返回结果: []
[INFO] [1753422402.410758377] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.328999996185303, 4.617000102996826, 2.7049999237060547])
[INFO] [1753422402.412365898] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.329      4.6170001  2.70499992]
[INFO] [1753422402.415269895] [solver_node]: 求解器返回结果: []
[INFO] [1753422402.511363112] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.247000217437744, 4.616000175476074, 6.6529998779296875])
[INFO] [1753422402.513119661] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.24700022 4.61600018 6.65299988]
[INFO] [1753422402.517655596] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422402.518624608] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422402.519499923] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422402.520241986] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422402.521024627] [solver_node]: 求解器返回结果: [((4.163475354495849, 4.165475354495849), (3.182440069109832, 3.1844400691098316), -2.601948238929432), ((4.162583235825985, 4.164583235825986), (3.3741646228750874, 3.3761646228750872), 2.5362081226568858), ((5.832524645504149, 5.83452464550415), (4.815559930890169, 4.8175599308901695), 0.5396444146603607), ((5.833416764174014, 5.835416764174014), (4.623835377124912, 4.625835377124913), -0.6053845309329077), ((5.537495724292477, 5.539495724292478), (4.978043020748309, 4.98004302074831), -0.4833053351800001), ((4.458504275707522, 4.460504275707523), (3.0199569792516896, 3.0219569792516894), 2.6582873184097933), ((3.811109267356222, 3.813109267356222), (3.564834548421121, 3.5668345484211206), -2.4815637616923465), ((6.184890732643776, 6.186890732643777), (4.433165451578879, 4.43516545157888), 0.6600288918974466)]
[INFO] [1753422402.610696780] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.156000137329102, 4.616000175476074, 6.6529998779296875])
[INFO] [1753422402.612210956] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.15600014 4.61600018 6.65299988]
[INFO] [1753422402.615874969] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422402.616701642] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422402.617456026] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422402.618177193] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422402.618984282] [solver_node]: 求解器返回结果: [((4.163475354495849, 4.165475354495849), (3.2605084312064085, 3.2625084312064083), -2.601948238929432), ((4.162583235825985, 4.164583235825986), (3.448992281575077, 3.450992281575077), 2.5362081226568858), ((5.832524645504149, 5.83452464550415), (4.737491568793592, 4.739491568793593), 0.5396444146603607), ((5.833416764174014, 5.835416764174014), (4.549007718424923, 4.551007718424923), -0.6053845309329077), ((5.586930881056, 5.588930881056001), (4.838859791178133, 4.840859791178134), -0.5057020340515115), ((4.4090691189439974, 4.411069118943998), (3.1591402088218676, 3.1611402088218674), 2.6358906195382814), ((3.8370165460951515, 3.8390165460951513), (3.6089268208636844, 3.610926820863684), -2.4897932498025295), ((6.158983453904846, 6.160983453904847), (4.389073179136317, 4.391073179136318), 0.6517994037872635)]
[INFO] [1753422402.711304364] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.156000137329102, 4.616000175476074, 6.6529998779296875])
[INFO] [1753422402.713176019] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.15600014 4.61600018 6.65299988]
[INFO] [1753422402.717133990] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422402.718079834] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422402.718886667] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422402.719670619] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422402.720476204] [solver_node]: 求解器返回结果: [((4.163475354495849, 4.165475354495849), (3.2605084312064085, 3.2625084312064083), -2.601948238929432), ((4.162583235825985, 4.164583235825986), (3.448992281575077, 3.450992281575077), 2.5362081226568858), ((5.832524645504149, 5.83452464550415), (4.737491568793592, 4.739491568793593), 0.5396444146603607), ((5.833416764174014, 5.835416764174014), (4.549007718424923, 4.551007718424923), -0.6053845309329077), ((5.586930881056, 5.588930881056001), (4.838859791178133, 4.840859791178134), -0.5057020340515115), ((4.4090691189439974, 4.411069118943998), (3.1591402088218676, 3.1611402088218674), 2.6358906195382814), ((3.8370165460951515, 3.8390165460951513), (3.6089268208636844, 3.610926820863684), -2.4897932498025295), ((6.158983453904846, 6.160983453904847), (4.389073179136317, 4.391073179136318), 0.6517994037872635)]
[INFO] [1753422402.810462925] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.156000137329102, 4.616000175476074, 6.6529998779296875])
[INFO] [1753422402.811987501] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.15600014 4.61600018 6.65299988]
[INFO] [1753422402.815544151] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422402.816548972] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422402.817472032] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422402.818221519] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422402.819070241] [solver_node]: 求解器返回结果: [((4.163475354495849, 4.165475354495849), (3.2605084312064085, 3.2625084312064083), -2.601948238929432), ((4.162583235825985, 4.164583235825986), (3.448992281575077, 3.450992281575077), 2.5362081226568858), ((5.832524645504149, 5.83452464550415), (4.737491568793592, 4.739491568793593), 0.5396444146603607), ((5.833416764174014, 5.835416764174014), (4.549007718424923, 4.551007718424923), -0.6053845309329077), ((5.586930881056, 5.588930881056001), (4.838859791178133, 4.840859791178134), -0.5057020340515115), ((4.4090691189439974, 4.411069118943998), (3.1591402088218676, 3.1611402088218674), 2.6358906195382814), ((3.8370165460951515, 3.8390165460951513), (3.6089268208636844, 3.610926820863684), -2.4897932498025295), ((6.158983453904846, 6.160983453904847), (4.389073179136317, 4.391073179136318), 0.6517994037872635)]
[INFO] [1753422402.911062348] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.1579999923706055, 4.616000175476074, 6.6529998779296875])
[INFO] [1753422402.914290703] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.15799999 4.61600018 6.65299988]
[INFO] [1753422402.919539422] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422402.920515730] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422402.921268898] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422402.921968433] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422402.922861251] [solver_node]: 求解器返回结果: [((4.163475354495849, 4.165475354495849), (3.258792768897821, 3.260792768897821), -2.601948238929432), ((4.162583235825985, 4.164583235825986), (3.447347838291989, 3.4493478382919887), 2.5362081226568858), ((5.832524645504149, 5.83452464550415), (4.73920723110218, 4.74120723110218), 0.5396444146603607), ((5.833416764174014, 5.835416764174014), (4.550652161708011, 4.552652161708012), -0.6053845309329077), ((5.585806354958394, 5.587806354958395), (4.841940835366025, 4.843940835366026), -0.5052035130627432), ((4.410193645041605, 4.412193645041605), (3.1560591646339753, 3.158059164633975), 2.63638914052705), ((3.8364464697429583, 3.838446469742958), (3.6079485955608717, 3.6099485955608714), -2.489611273497026), ((6.15955353025704, 6.161553530257041), (4.39005140443913, 4.392051404439131), 0.6519813800927672)]
[INFO] [1753422403.010609717] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.1579999923706055, 4.616000175476074, 6.6529998779296875])
[INFO] [1753422403.012247031] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.15799999 4.61600018 6.65299988]
[INFO] [1753422403.015977030] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422403.016838328] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422403.017624584] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422403.018363576] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422403.019185641] [solver_node]: 求解器返回结果: [((4.163475354495849, 4.165475354495849), (3.258792768897821, 3.260792768897821), -2.601948238929432), ((4.162583235825985, 4.164583235825986), (3.447347838291989, 3.4493478382919887), 2.5362081226568858), ((5.832524645504149, 5.83452464550415), (4.73920723110218, 4.74120723110218), 0.5396444146603607), ((5.833416764174014, 5.835416764174014), (4.550652161708011, 4.552652161708012), -0.6053845309329077), ((5.585806354958394, 5.587806354958395), (4.841940835366025, 4.843940835366026), -0.5052035130627432), ((4.410193645041605, 4.412193645041605), (3.1560591646339753, 3.158059164633975), 2.63638914052705), ((3.8364464697429583, 3.838446469742958), (3.6079485955608717, 3.6099485955608714), -2.489611273497026), ((6.15955353025704, 6.161553530257041), (4.39005140443913, 4.392051404439131), 0.6519813800927672)]
[INFO] [1753422403.110708906] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.1579999923706055, 4.616000175476074, 6.6529998779296875])
[INFO] [1753422403.112642003] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.15799999 4.61600018 6.65299988]
[INFO] [1753422403.118136806] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422403.119103355] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422403.119900043] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422403.120704828] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422403.121514381] [solver_node]: 求解器返回结果: [((4.163475354495849, 4.165475354495849), (3.258792768897821, 3.260792768897821), -2.601948238929432), ((4.162583235825985, 4.164583235825986), (3.447347838291989, 3.4493478382919887), 2.5362081226568858), ((5.832524645504149, 5.83452464550415), (4.73920723110218, 4.74120723110218), 0.5396444146603607), ((5.833416764174014, 5.835416764174014), (4.550652161708011, 4.552652161708012), -0.6053845309329077), ((5.585806354958394, 5.587806354958395), (4.841940835366025, 4.843940835366026), -0.5052035130627432), ((4.410193645041605, 4.412193645041605), (3.1560591646339753, 3.158059164633975), 2.63638914052705), ((3.8364464697429583, 3.838446469742958), (3.6079485955608717, 3.6099485955608714), -2.489611273497026), ((6.15955353025704, 6.161553530257041), (4.39005140443913, 4.392051404439131), 0.6519813800927672)]
[INFO] [1753422403.210694398] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.1579999923706055, 4.616000175476074, 6.6529998779296875])
[INFO] [1753422403.212180061] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.15799999 4.61600018 6.65299988]
[INFO] [1753422403.215818313] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422403.216667259] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422403.217421227] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422403.218150778] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422403.218950411] [solver_node]: 求解器返回结果: [((4.163475354495849, 4.165475354495849), (3.258792768897821, 3.260792768897821), -2.601948238929432), ((4.162583235825985, 4.164583235825986), (3.447347838291989, 3.4493478382919887), 2.5362081226568858), ((5.832524645504149, 5.83452464550415), (4.73920723110218, 4.74120723110218), 0.5396444146603607), ((5.833416764174014, 5.835416764174014), (4.550652161708011, 4.552652161708012), -0.6053845309329077), ((5.585806354958394, 5.587806354958395), (4.841940835366025, 4.843940835366026), -0.5052035130627432), ((4.410193645041605, 4.412193645041605), (3.1560591646339753, 3.158059164633975), 2.63638914052705), ((3.8364464697429583, 3.838446469742958), (3.6079485955608717, 3.6099485955608714), -2.489611273497026), ((6.15955353025704, 6.161553530257041), (4.39005140443913, 4.392051404439131), 0.6519813800927672)]
[INFO] [1753422403.310494285] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.372000217437744, 4.616000175476074, 6.6529998779296875])
[INFO] [1753422403.312371541] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.37200022 4.61600018 6.65299988]
[INFO] [1753422403.317849864] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422403.318950687] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422403.319772080] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422403.320557408] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422403.321451955] [solver_node]: 求解器返回结果: [((4.163475354495849, 4.165475354495849), (3.075203402390183, 3.077203402390183), -2.601948238929432), ((4.162583235825985, 4.164583235825986), (3.2713794678913577, 3.2733794678913575), 2.5362081226568858), ((5.832524645504149, 5.83452464550415), (4.922796597609818, 4.924796597609818), 0.5396444146603607), ((5.833416764174014, 5.835416764174014), (4.72662053210864, 4.728620532108641), -0.6053845309329077), ((3.7263492626678802, 3.72834926266788), (3.330280489744387, 3.3322804897443867), -2.43678973565092), ((5.475072980192968, 5.477072980192968), (5.165943258125245, 5.167943258125246), -0.4534465951366755), ((6.26965073733212, 6.271650737332121), (4.667719510255613, 4.6697195102556135), 0.7048029179388731), ((4.520927019807031, 4.522927019807032), (2.8320567418747555, 2.8340567418747553), 2.6881460584531176), ((6.3041935194608065, 6.306193519460807), (4.627118494081804, 4.629118494081805), 0.6969256019031658), ((3.6918064805391926, 3.6938064805391924), (3.3708815059181982, 3.372881505918198), -2.4446670516866273), ((3.7756438541541812, 3.777643854154181), (3.5056525864428347, 3.5076525864428345), -2.470428566332963), ((6.220356145845817, 6.222356145845818), (4.492347413557165, 4.494347413557166), 0.6711640872568303)]
[INFO] [1753422403.410715813] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.395999908447266, 4.616000175476074, 6.6529998779296875])
[INFO] [1753422403.412426473] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.39599991 4.61600018 6.65299988]
[INFO] [1753422403.416356060] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422403.417191917] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422403.417939261] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422403.418644812] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422403.419452317] [solver_node]: 求解器返回结果: [((4.163475354495849, 4.165475354495849), (3.0546142274608807, 3.0566142274608805), -2.601948238929432), ((4.162583235825985, 4.164583235825986), (3.251644972211556, 3.2536449722115557), 2.5362081226568858), ((5.832524645504149, 5.83452464550415), (4.943385772539119, 4.94538577253912), 0.5396444146603607), ((5.833416764174014, 5.835416764174014), (4.746355027788443, 4.748355027788444), -0.6053845309329077), ((3.7418982045335967, 3.7438982045335965), (3.330280489744387, 3.3322804897443867), -2.43678973565092), ((5.463773059861227, 5.4657730598612275), (5.201596953461638, 5.203596953461639), -0.4478266486012772), ((6.2541017954664015, 6.256101795466402), (4.667719510255613, 4.6697195102556135), 0.7048029179388731), ((4.532226940138772, 4.5342269401387725), (2.796403046538363, 2.798403046538363), 2.693766004988516), ((6.297611828786343, 6.299611828786344), (4.616788730110012, 4.618788730110013), 0.6949303082524727), ((3.6983881712136544, 3.700388171213654), (3.381211269889985, 3.3832112698899848), -2.4466623453373204), ((3.7688522693280433, 3.770852269328043), (3.4944706385470563, 3.496470638547056), -2.468312853363279), ((6.227147730671956, 6.229147730671957), (4.5035293614529435, 4.505529361452944), 0.673279800226514)]
[INFO] [1753422403.511684429] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.395999908447266, 4.616000175476074, 6.6529998779296875])
[INFO] [1753422403.515437468] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.39599991 4.61600018 6.65299988]
[INFO] [1753422403.522116808] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422403.523493765] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422403.524384184] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422403.525201513] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422403.526046203] [solver_node]: 求解器返回结果: [((4.163475354495849, 4.165475354495849), (3.0546142274608807, 3.0566142274608805), -2.601948238929432), ((4.162583235825985, 4.164583235825986), (3.251644972211556, 3.2536449722115557), 2.5362081226568858), ((5.832524645504149, 5.83452464550415), (4.943385772539119, 4.94538577253912), 0.5396444146603607), ((5.833416764174014, 5.835416764174014), (4.746355027788443, 4.748355027788444), -0.6053845309329077), ((3.7418982045335967, 3.7438982045335965), (3.330280489744387, 3.3322804897443867), -2.43678973565092), ((5.463773059861227, 5.4657730598612275), (5.201596953461638, 5.203596953461639), -0.4478266486012772), ((6.2541017954664015, 6.256101795466402), (4.667719510255613, 4.6697195102556135), 0.7048029179388731), ((4.532226940138772, 4.5342269401387725), (2.796403046538363, 2.798403046538363), 2.693766004988516), ((6.297611828786343, 6.299611828786344), (4.616788730110012, 4.618788730110013), 0.6949303082524727), ((3.6983881712136544, 3.700388171213654), (3.381211269889985, 3.3832112698899848), -2.4466623453373204), ((3.7688522693280433, 3.770852269328043), (3.4944706385470563, 3.496470638547056), -2.468312853363279), ((6.227147730671956, 6.229147730671957), (4.5035293614529435, 4.505529361452944), 0.673279800226514)]
[INFO] [1753422403.610889808] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.395999908447266, 4.616000175476074, 6.6529998779296875])
[INFO] [1753422403.612411376] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.39599991 4.61600018 6.65299988]
[INFO] [1753422403.616196448] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422403.617109171] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422403.617941956] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422403.618808630] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422403.619691817] [solver_node]: 求解器返回结果: [((4.163475354495849, 4.165475354495849), (3.0546142274608807, 3.0566142274608805), -2.601948238929432), ((4.162583235825985, 4.164583235825986), (3.251644972211556, 3.2536449722115557), 2.5362081226568858), ((5.832524645504149, 5.83452464550415), (4.943385772539119, 4.94538577253912), 0.5396444146603607), ((5.833416764174014, 5.835416764174014), (4.746355027788443, 4.748355027788444), -0.6053845309329077), ((3.7418982045335967, 3.7438982045335965), (3.330280489744387, 3.3322804897443867), -2.43678973565092), ((5.463773059861227, 5.4657730598612275), (5.201596953461638, 5.203596953461639), -0.4478266486012772), ((6.2541017954664015, 6.256101795466402), (4.667719510255613, 4.6697195102556135), 0.7048029179388731), ((4.532226940138772, 4.5342269401387725), (2.796403046538363, 2.798403046538363), 2.693766004988516), ((6.297611828786343, 6.299611828786344), (4.616788730110012, 4.618788730110013), 0.6949303082524727), ((3.6983881712136544, 3.700388171213654), (3.381211269889985, 3.3832112698899848), -2.4466623453373204), ((3.7688522693280433, 3.770852269328043), (3.4944706385470563, 3.496470638547056), -2.468312853363279), ((6.227147730671956, 6.229147730671957), (4.5035293614529435, 4.505529361452944), 0.673279800226514)]
[INFO] [1753422403.710474427] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.395999908447266, 4.616000175476074, 6.6529998779296875])
[INFO] [1753422403.712561895] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.39599991 4.61600018 6.65299988]
[INFO] [1753422403.718724264] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422403.720471085] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422403.721431009] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422403.722277107] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422403.723460460] [solver_node]: 求解器返回结果: [((4.163475354495849, 4.165475354495849), (3.0546142274608807, 3.0566142274608805), -2.601948238929432), ((4.162583235825985, 4.164583235825986), (3.251644972211556, 3.2536449722115557), 2.5362081226568858), ((5.832524645504149, 5.83452464550415), (4.943385772539119, 4.94538577253912), 0.5396444146603607), ((5.833416764174014, 5.835416764174014), (4.746355027788443, 4.748355027788444), -0.6053845309329077), ((3.7418982045335967, 3.7438982045335965), (3.330280489744387, 3.3322804897443867), -2.43678973565092), ((5.463773059861227, 5.4657730598612275), (5.201596953461638, 5.203596953461639), -0.4478266486012772), ((6.2541017954664015, 6.256101795466402), (4.667719510255613, 4.6697195102556135), 0.7048029179388731), ((4.532226940138772, 4.5342269401387725), (2.796403046538363, 2.798403046538363), 2.693766004988516), ((6.297611828786343, 6.299611828786344), (4.616788730110012, 4.618788730110013), 0.6949303082524727), ((3.6983881712136544, 3.700388171213654), (3.381211269889985, 3.3832112698899848), -2.4466623453373204), ((3.7688522693280433, 3.770852269328043), (3.4944706385470563, 3.496470638547056), -2.468312853363279), ((6.227147730671956, 6.229147730671957), (4.5035293614529435, 4.505529361452944), 0.673279800226514)]
[INFO] [1753422403.811949038] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.395999908447266, 4.616000175476074, 6.6529998779296875])
[INFO] [1753422403.813608336] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.39599991 4.61600018 6.65299988]
[INFO] [1753422403.818059758] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422403.818991777] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422403.819771314] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422403.820527714] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422403.821358963] [solver_node]: 求解器返回结果: [((4.163475354495849, 4.165475354495849), (3.0546142274608807, 3.0566142274608805), -2.601948238929432), ((4.162583235825985, 4.164583235825986), (3.251644972211556, 3.2536449722115557), 2.5362081226568858), ((5.832524645504149, 5.83452464550415), (4.943385772539119, 4.94538577253912), 0.5396444146603607), ((5.833416764174014, 5.835416764174014), (4.746355027788443, 4.748355027788444), -0.6053845309329077), ((3.7418982045335967, 3.7438982045335965), (3.330280489744387, 3.3322804897443867), -2.43678973565092), ((5.463773059861227, 5.4657730598612275), (5.201596953461638, 5.203596953461639), -0.4478266486012772), ((6.2541017954664015, 6.256101795466402), (4.667719510255613, 4.6697195102556135), 0.7048029179388731), ((4.532226940138772, 4.5342269401387725), (2.796403046538363, 2.798403046538363), 2.693766004988516), ((6.297611828786343, 6.299611828786344), (4.616788730110012, 4.618788730110013), 0.6949303082524727), ((3.6983881712136544, 3.700388171213654), (3.381211269889985, 3.3832112698899848), -2.4466623453373204), ((3.7688522693280433, 3.770852269328043), (3.4944706385470563, 3.496470638547056), -2.468312853363279), ((6.227147730671956, 6.229147730671957), (4.5035293614529435, 4.505529361452944), 0.673279800226514)]
[INFO] [1753422403.915984438] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.395999908447266, 4.616000175476074, 6.6529998779296875])
[INFO] [1753422403.917967040] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.39599991 4.61600018 6.65299988]
[INFO] [1753422403.925121878] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422403.926531635] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422403.928099924] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422403.929094569] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422403.930432549] [solver_node]: 求解器返回结果: [((4.163475354495849, 4.165475354495849), (3.0546142274608807, 3.0566142274608805), -2.601948238929432), ((4.162583235825985, 4.164583235825986), (3.251644972211556, 3.2536449722115557), 2.5362081226568858), ((5.832524645504149, 5.83452464550415), (4.943385772539119, 4.94538577253912), 0.5396444146603607), ((5.833416764174014, 5.835416764174014), (4.746355027788443, 4.748355027788444), -0.6053845309329077), ((3.7418982045335967, 3.7438982045335965), (3.330280489744387, 3.3322804897443867), -2.43678973565092), ((5.463773059861227, 5.4657730598612275), (5.201596953461638, 5.203596953461639), -0.4478266486012772), ((6.2541017954664015, 6.256101795466402), (4.667719510255613, 4.6697195102556135), 0.7048029179388731), ((4.532226940138772, 4.5342269401387725), (2.796403046538363, 2.798403046538363), 2.693766004988516), ((6.297611828786343, 6.299611828786344), (4.616788730110012, 4.618788730110013), 0.6949303082524727), ((3.6983881712136544, 3.700388171213654), (3.381211269889985, 3.3832112698899848), -2.4466623453373204), ((3.7688522693280433, 3.770852269328043), (3.4944706385470563, 3.496470638547056), -2.468312853363279), ((6.227147730671956, 6.229147730671957), (4.5035293614529435, 4.505529361452944), 0.673279800226514)]
[INFO] [1753422404.011455050] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.395999908447266, 4.616000175476074, 6.6529998779296875])
[INFO] [1753422404.012930121] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.39599991 4.61600018 6.65299988]
[INFO] [1753422404.019304495] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422404.021146550] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422404.021921222] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422404.023082815] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422404.024314873] [solver_node]: 求解器返回结果: [((4.163475354495849, 4.165475354495849), (3.0546142274608807, 3.0566142274608805), -2.601948238929432), ((4.162583235825985, 4.164583235825986), (3.251644972211556, 3.2536449722115557), 2.5362081226568858), ((5.832524645504149, 5.83452464550415), (4.943385772539119, 4.94538577253912), 0.5396444146603607), ((5.833416764174014, 5.835416764174014), (4.746355027788443, 4.748355027788444), -0.6053845309329077), ((3.7418982045335967, 3.7438982045335965), (3.330280489744387, 3.3322804897443867), -2.43678973565092), ((5.463773059861227, 5.4657730598612275), (5.201596953461638, 5.203596953461639), -0.4478266486012772), ((6.2541017954664015, 6.256101795466402), (4.667719510255613, 4.6697195102556135), 0.7048029179388731), ((4.532226940138772, 4.5342269401387725), (2.796403046538363, 2.798403046538363), 2.693766004988516), ((6.297611828786343, 6.299611828786344), (4.616788730110012, 4.618788730110013), 0.6949303082524727), ((3.6983881712136544, 3.700388171213654), (3.381211269889985, 3.3832112698899848), -2.4466623453373204), ((3.7688522693280433, 3.770852269328043), (3.4944706385470563, 3.496470638547056), -2.468312853363279), ((6.227147730671956, 6.229147730671957), (4.5035293614529435, 4.505529361452944), 0.673279800226514)]
[INFO] [1753422404.110913172] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.395999908447266, 4.616000175476074, 6.6529998779296875])
[INFO] [1753422404.112458612] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.39599991 4.61600018 6.65299988]
[INFO] [1753422404.116055456] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422404.119156833] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422404.122705451] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422404.125389700] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422404.126293431] [solver_node]: 求解器返回结果: [((4.163475354495849, 4.165475354495849), (3.0546142274608807, 3.0566142274608805), -2.601948238929432), ((4.162583235825985, 4.164583235825986), (3.251644972211556, 3.2536449722115557), 2.5362081226568858), ((5.832524645504149, 5.83452464550415), (4.943385772539119, 4.94538577253912), 0.5396444146603607), ((5.833416764174014, 5.835416764174014), (4.746355027788443, 4.748355027788444), -0.6053845309329077), ((3.7418982045335967, 3.7438982045335965), (3.330280489744387, 3.3322804897443867), -2.43678973565092), ((5.463773059861227, 5.4657730598612275), (5.201596953461638, 5.203596953461639), -0.4478266486012772), ((6.2541017954664015, 6.256101795466402), (4.667719510255613, 4.6697195102556135), 0.7048029179388731), ((4.532226940138772, 4.5342269401387725), (2.796403046538363, 2.798403046538363), 2.693766004988516), ((6.297611828786343, 6.299611828786344), (4.616788730110012, 4.618788730110013), 0.6949303082524727), ((3.6983881712136544, 3.700388171213654), (3.381211269889985, 3.3832112698899848), -2.4466623453373204), ((3.7688522693280433, 3.770852269328043), (3.4944706385470563, 3.496470638547056), -2.468312853363279), ((6.227147730671956, 6.229147730671957), (4.5035293614529435, 4.505529361452944), 0.673279800226514)]
[INFO] [1753422404.211052715] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.395999908447266, 4.616000175476074, 6.6529998779296875])
[INFO] [1753422404.212837713] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.39599991 4.61600018 6.65299988]
[INFO] [1753422404.216361851] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422404.217174988] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422404.217899195] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422404.218583465] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422404.219366202] [solver_node]: 求解器返回结果: [((4.163475354495849, 4.165475354495849), (3.0546142274608807, 3.0566142274608805), -2.601948238929432), ((4.162583235825985, 4.164583235825986), (3.251644972211556, 3.2536449722115557), 2.5362081226568858), ((5.832524645504149, 5.83452464550415), (4.943385772539119, 4.94538577253912), 0.5396444146603607), ((5.833416764174014, 5.835416764174014), (4.746355027788443, 4.748355027788444), -0.6053845309329077), ((3.7418982045335967, 3.7438982045335965), (3.330280489744387, 3.3322804897443867), -2.43678973565092), ((5.463773059861227, 5.4657730598612275), (5.201596953461638, 5.203596953461639), -0.4478266486012772), ((6.2541017954664015, 6.256101795466402), (4.667719510255613, 4.6697195102556135), 0.7048029179388731), ((4.532226940138772, 4.5342269401387725), (2.796403046538363, 2.798403046538363), 2.693766004988516), ((6.297611828786343, 6.299611828786344), (4.616788730110012, 4.618788730110013), 0.6949303082524727), ((3.6983881712136544, 3.700388171213654), (3.381211269889985, 3.3832112698899848), -2.4466623453373204), ((3.7688522693280433, 3.770852269328043), (3.4944706385470563, 3.496470638547056), -2.468312853363279), ((6.227147730671956, 6.229147730671957), (4.5035293614529435, 4.505529361452944), 0.673279800226514)]
[INFO] [1753422404.311417575] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.395999908447266, 4.616000175476074, 6.6529998779296875])
[INFO] [1753422404.313057578] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.39599991 4.61600018 6.65299988]
[INFO] [1753422404.316788504] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422404.317627402] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422404.318969990] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422404.320277858] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422404.321672735] [solver_node]: 求解器返回结果: [((4.163475354495849, 4.165475354495849), (3.0546142274608807, 3.0566142274608805), -2.601948238929432), ((4.162583235825985, 4.164583235825986), (3.251644972211556, 3.2536449722115557), 2.5362081226568858), ((5.832524645504149, 5.83452464550415), (4.943385772539119, 4.94538577253912), 0.5396444146603607), ((5.833416764174014, 5.835416764174014), (4.746355027788443, 4.748355027788444), -0.6053845309329077), ((3.7418982045335967, 3.7438982045335965), (3.330280489744387, 3.3322804897443867), -2.43678973565092), ((5.463773059861227, 5.4657730598612275), (5.201596953461638, 5.203596953461639), -0.4478266486012772), ((6.2541017954664015, 6.256101795466402), (4.667719510255613, 4.6697195102556135), 0.7048029179388731), ((4.532226940138772, 4.5342269401387725), (2.796403046538363, 2.798403046538363), 2.693766004988516), ((6.297611828786343, 6.299611828786344), (4.616788730110012, 4.618788730110013), 0.6949303082524727), ((3.6983881712136544, 3.700388171213654), (3.381211269889985, 3.3832112698899848), -2.4466623453373204), ((3.7688522693280433, 3.770852269328043), (3.4944706385470563, 3.496470638547056), -2.468312853363279), ((6.227147730671956, 6.229147730671957), (4.5035293614529435, 4.505529361452944), 0.673279800226514)]
[INFO] [1753422404.410553738] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.395999908447266, 4.616000175476074, 6.6529998779296875])
[INFO] [1753422404.412075306] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.39599991 4.61600018 6.65299988]
[INFO] [1753422404.415705046] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422404.416614249] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422404.417335832] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422404.418030247] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422404.418926682] [solver_node]: 求解器返回结果: [((4.163475354495849, 4.165475354495849), (3.0546142274608807, 3.0566142274608805), -2.601948238929432), ((4.162583235825985, 4.164583235825986), (3.251644972211556, 3.2536449722115557), 2.5362081226568858), ((5.832524645504149, 5.83452464550415), (4.943385772539119, 4.94538577253912), 0.5396444146603607), ((5.833416764174014, 5.835416764174014), (4.746355027788443, 4.748355027788444), -0.6053845309329077), ((3.7418982045335967, 3.7438982045335965), (3.330280489744387, 3.3322804897443867), -2.43678973565092), ((5.463773059861227, 5.4657730598612275), (5.201596953461638, 5.203596953461639), -0.4478266486012772), ((6.2541017954664015, 6.256101795466402), (4.667719510255613, 4.6697195102556135), 0.7048029179388731), ((4.532226940138772, 4.5342269401387725), (2.796403046538363, 2.798403046538363), 2.693766004988516), ((6.297611828786343, 6.299611828786344), (4.616788730110012, 4.618788730110013), 0.6949303082524727), ((3.6983881712136544, 3.700388171213654), (3.381211269889985, 3.3832112698899848), -2.4466623453373204), ((3.7688522693280433, 3.770852269328043), (3.4944706385470563, 3.496470638547056), -2.468312853363279), ((6.227147730671956, 6.229147730671957), (4.5035293614529435, 4.505529361452944), 0.673279800226514)]
[INFO] [1753422404.511481746] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.395999908447266, 4.616000175476074, 6.6529998779296875])
[INFO] [1753422404.513106996] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.39599991 4.61600018 6.65299988]
[INFO] [1753422404.519649310] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422404.520765013] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422404.522085297] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422404.523429933] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422404.524359009] [solver_node]: 求解器返回结果: [((4.163475354495849, 4.165475354495849), (3.0546142274608807, 3.0566142274608805), -2.601948238929432), ((4.162583235825985, 4.164583235825986), (3.251644972211556, 3.2536449722115557), 2.5362081226568858), ((5.832524645504149, 5.83452464550415), (4.943385772539119, 4.94538577253912), 0.5396444146603607), ((5.833416764174014, 5.835416764174014), (4.746355027788443, 4.748355027788444), -0.6053845309329077), ((3.7418982045335967, 3.7438982045335965), (3.330280489744387, 3.3322804897443867), -2.43678973565092), ((5.463773059861227, 5.4657730598612275), (5.201596953461638, 5.203596953461639), -0.4478266486012772), ((6.2541017954664015, 6.256101795466402), (4.667719510255613, 4.6697195102556135), 0.7048029179388731), ((4.532226940138772, 4.5342269401387725), (2.796403046538363, 2.798403046538363), 2.693766004988516), ((6.297611828786343, 6.299611828786344), (4.616788730110012, 4.618788730110013), 0.6949303082524727), ((3.6983881712136544, 3.700388171213654), (3.381211269889985, 3.3832112698899848), -2.4466623453373204), ((3.7688522693280433, 3.770852269328043), (3.4944706385470563, 3.496470638547056), -2.468312853363279), ((6.227147730671956, 6.229147730671957), (4.5035293614529435, 4.505529361452944), 0.673279800226514)]
[INFO] [1753422404.610768728] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.395999908447266, 4.616000175476074, 6.675000190734863])
[INFO] [1753422404.612262135] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.39599991 4.61600018 6.67500019]
[INFO] [1753422404.616441391] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422404.617285793] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422404.618003408] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422404.618741951] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422404.619529936] [solver_node]: 求解器返回结果: [((4.155630463166028, 4.157630463166028), (3.063300556800025, 3.065300556800025), -2.599031039804939), ((4.155061432196908, 4.157061432196909), (3.2608231532838317, 3.2628231532838314), 2.5334122422955643), ((5.840369536833971, 5.842369536833972), (4.934699443199974, 4.9366994431999744), 0.5425616137848541), ((5.84093856780309, 5.842938567803091), (4.737176846716167, 4.739176846716168), -0.608180411294229), ((3.7348054095499914, 3.736805409549991), (3.3243543783358267, 3.3263543783358265), -2.4384047582789004), ((5.458895169822197, 5.460895169822198), (5.207679071680581, 5.209679071680582), -0.4453784029330765), ((6.261194590450005, 6.263194590450006), (4.673645621664174, 4.675645621664175), 0.703187895310893), ((4.537104830177802, 4.539104830177803), (2.7903209283194195, 2.7923209283194192), 2.6962142506567166), ((6.297611828786343, 6.299611828786344), (4.6308763565927435, 4.632876356592744), 0.6949303082524727), ((3.6983881712136544, 3.700388171213654), (3.367123643407258, 3.369123643407258), -2.4466623453373204), ((3.773801758219464, 3.7758017582194636), (3.488922971317733, 3.4909229713177328), -2.4698541966426113), ((6.222198241780535, 6.2241982417805355), (4.509077028682265, 4.511077028682266), 0.6717384569471817)]
[INFO] [1753422404.712835352] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.395999908447266, 4.617000102996826, 6.675000190734863])
[INFO] [1753422404.714364888] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.39599991 4.6170001  6.67500019]
[INFO] [1753422404.718787925] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422404.719656231] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422404.720414231] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422404.721131142] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422404.721912054] [solver_node]: 求解器返回结果: [((4.156130817798407, 4.1581308177984075), (3.063694701883834, 3.065694701883834), -2.598899004789815), ((4.155540813746328, 4.157540813746329), (3.2612393977653213, 3.263239397765321), 2.533285711887811), ((5.839869182201593, 5.841869182201593), (4.934305298116165, 4.9363052981161655), 0.5426936487999778), ((5.84045918625367, 5.842459186253671), (4.736760602234678, 4.738760602234679), -0.6083069417019823), ((3.734483695986157, 3.736483695986157), (3.3247321203052214, 3.326732120305221), -2.438477959556583), ((5.457992787516675, 5.459992787516676), (5.207679071680581, 5.209679071680582), -0.4453784029330765), ((6.261516304013843, 6.2635163040138435), (4.673267879694779, 4.67526787969478), 0.7031146940332101), ((4.538007212483324, 4.540007212483324), (2.7903209283194195, 2.7923209283194192), 2.6962142506567166), ((6.297171626934192, 6.299171626934193), (4.6313934565939485, 4.633393456593949), 0.6950297822620435), ((3.698828373065806, 3.700828373065806), (3.3666065434060477, 3.3686065434060475), -2.4465628713277496), ((3.774584442411567, 3.7765844424115667), (3.488922971317733, 3.4909229713177328), -2.4698541966426113), ((6.221415557588432, 6.2234155575884325), (4.509077028682265, 4.511077028682266), 0.6717384569471817)]
[INFO] [1753422404.810574589] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.413000106811523, 4.617000102996826, 6.675000190734863])
[INFO] [1753422404.812351330] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41300011 4.6170001  6.67500019]
[INFO] [1753422404.817025348] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422404.817845046] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422404.818553476] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422404.819254963] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422404.820027235] [solver_node]: 求解器返回结果: [((4.156130817798407, 4.1581308177984075), (3.0491370483880655, 3.0511370483880653), -2.598899004789815), ((4.155540813746328, 4.157540813746329), (3.247288786079444, 3.2492887860794437), 2.533285711887811), ((5.839869182201593, 5.841869182201593), (4.948862951611934, 4.950862951611935), 0.5426936487999778), ((5.84045918625367, 5.842459186253671), (4.750711213920554, 4.752711213920555), -0.6083069417019823), ((3.7454759223469574, 3.747475922346957), (3.3247321203052214, 3.326732120305221), -2.438477959556583), ((5.45022863612612, 5.4522286361261205), (5.232733908798031, 5.234733908798032), -0.44145387947693937), ((6.250524077653042, 6.252524077653042), (4.673267879694779, 4.67526787969478), 0.7031146940332101), ((4.545771363873878, 4.547771363873879), (2.7652660912019686, 2.7672660912019684), 2.7001387741128537), ((6.29253573336445, 6.294535733364451), (4.624071669898218, 4.626071669898218), 0.6936221175266608), ((3.703464266635549, 3.705464266635549), (3.373928330101784, 3.3759283301017837), -2.4479705360631323), ((3.769788403748627, 3.771788403748627), (3.4810066144312493, 3.483006614431249), -2.468360887552459), ((6.226211596251372, 6.228211596251373), (4.5169933855687505, 4.518993385568751), 0.6732317660373339)]
[INFO] [1753422404.912664189] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.401000022888184, 4.617000102996826, 6.675000190734863])
[INFO] [1753422404.914187229] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40100002 4.6170001  6.67500019]
[INFO] [1753422404.918725373] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422404.919563630] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422404.920310622] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422404.921015565] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422404.921980001] [solver_node]: 求解器返回结果: [((4.156130817798407, 4.1581308177984075), (3.0594129910525596, 3.0614129910525594), -2.598899004789815), ((4.155540813746328, 4.157540813746329), (3.257136230645998, 3.2591362306459977), 2.533285711887811), ((5.839869182201593, 5.841869182201593), (4.93858700894744, 4.940587008947441), 0.5426936487999778), ((5.84045918625367, 5.842459186253671), (4.740863769354001, 4.742863769354002), -0.6083069417019823), ((3.7377167400122806, 3.7397167400122804), (3.3247321203052214, 3.326732120305221), -2.438477959556583), ((5.455698454091535, 5.457698454091536), (5.215054956181853, 5.217054956181854), -0.44422236692794126), ((6.258283259987718, 6.260283259987719), (4.673267879694779, 4.67526787969478), 0.7031146940332101), ((4.540301545908464, 4.542301545908464), (2.7829450438181467, 2.7849450438181464), 2.697370286661852), ((6.295805723924838, 6.297805723924839), (4.629238348014836, 4.631238348014836), 0.694615264357795), ((3.7001942760751607, 3.7021942760751605), (3.3687616519851615, 3.3707616519851613), -2.446977389231998), ((3.7731735167472955, 3.7751735167472953), (3.4865916050039467, 3.4885916050039465), -2.4694146144501117), ((6.222826483252703, 6.224826483252704), (4.511408394996054, 4.513408394996055), 0.6721780391396814)]
[INFO] [1753422405.010525797] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4070000648498535, 4.61899995803833, 6.675000190734863])
[INFO] [1753422405.012004292] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40700006 4.61899996 6.67500019]
[INFO] [1753422405.015835445] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422405.016905099] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422405.017649531] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422405.018447788] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422405.019266813] [solver_node]: 求解器返回结果: [((4.157131288031463, 4.159131288031464), (3.0550646387385094, 3.057064638738509), -2.598635078370452), ((4.156499323539236, 4.158499323539236), (3.253046351580203, 3.255046351580203), 2.5330327919140356), ((5.838868711968536, 5.840868711968537), (4.94293536126149, 4.944935361261491), 0.5429575752193405), ((5.839500676460763, 5.841500676460764), (4.744953648419796, 4.7469536484197965), -0.6085598616757576), ((3.7409518464930547, 3.7429518464930545), (3.325487408581974, 3.3274874085819737), -2.4386243096432367), ((5.451150172242951, 5.453150172242951), (5.223898467915562, 5.225898467915562), -0.4428370749113557), ((6.255048153506944, 6.257048153506945), (4.672512591418026, 4.6745125914180266), 0.7029683439465566), ((4.544849827757047, 4.546849827757048), (2.774101532084439, 2.776101532084439), 2.6987555786784374), ((6.293287164828109, 6.2952871648281095), (4.627688336887234, 4.629688336887234), 0.6943172266809934), ((3.7027128351718908, 3.7047128351718905), (3.370311663112766, 3.372311663112766), -2.4472754269087997), ((3.773044937955783, 3.7750449379557827), (3.4837973109437317, 3.4857973109437315), -2.468887529860216), ((6.222955062044217, 6.224955062044217), (4.514202689056268, 4.516202689056269), 0.672705123729577)]
[INFO] [1753422405.112136669] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4070000648498535, 4.61899995803833, 1.9579999446868896])
[INFO] [1753422405.113968131] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40700006 4.61899996 1.95799994]
[INFO] [1753422405.117760947] [solver_node]: 求解器返回结果: []
[INFO] [1753422405.210478927] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4070000648498535, 4.61899995803833, 1.9579999446868896])
[INFO] [1753422405.211966191] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40700006 4.61899996 1.95799994]
[INFO] [1753422405.214585798] [solver_node]: 求解器返回结果: []
[INFO] [1753422405.312920600] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4070000648498535, 4.61899995803833, 1.9579999446868896])
[INFO] [1753422405.314432440] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40700006 4.61899996 1.95799994]
[INFO] [1753422405.317260787] [solver_node]: 求解器返回结果: []
[INFO] [1753422405.411604402] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4070000648498535, 4.61899995803833, 1.9579999446868896])
[INFO] [1753422405.413074289] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40700006 4.61899996 1.95799994]
[INFO] [1753422405.415860044] [solver_node]: 求解器返回结果: []
[INFO] [1753422405.512925860] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4070000648498535, 4.61899995803833, 1.9579999446868896])
[INFO] [1753422405.514427139] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40700006 4.61899996 1.95799994]
[INFO] [1753422405.518832672] [solver_node]: 求解器返回结果: []
[INFO] [1753422405.611527772] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4070000648498535, 4.61899995803833, 1.8799999952316284])
[INFO] [1753422405.613064412] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40700006 4.61899996 1.88      ]
[INFO] [1753422405.616062299] [solver_node]: 求解器返回结果: []
[INFO] [1753422405.711028519] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4070000648498535, 4.61899995803833, 1.8799999952316284])
[INFO] [1753422405.712478533] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40700006 4.61899996 1.88      ]
[INFO] [1753422405.715159070] [solver_node]: 求解器返回结果: []
[INFO] [1753422405.810845529] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4070000648498535, 4.61899995803833, 1.8799999952316284])
[INFO] [1753422405.812347672] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40700006 4.61899996 1.88      ]
[INFO] [1753422405.815043217] [solver_node]: 求解器返回结果: []
[INFO] [1753422405.910439526] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4070000648498535, 4.61899995803833, 1.8799999952316284])
[INFO] [1753422405.912130249] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40700006 4.61899996 1.88      ]
[INFO] [1753422405.914941700] [solver_node]: 求解器返回结果: []
[INFO] [1753422406.010986407] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4070000648498535, 4.61899995803833, 1.8799999952316284])
[INFO] [1753422406.012526087] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40700006 4.61899996 1.88      ]
[INFO] [1753422406.015415108] [solver_node]: 求解器返回结果: []
[INFO] [1753422406.110493395] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4070000648498535, 4.61899995803833, 1.0720000267028809])
[INFO] [1753422406.111971186] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40700006 4.61899996 1.07200003]
[INFO] [1753422406.114797742] [solver_node]: 求解器返回结果: []
[INFO] [1753422406.210593548] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4070000648498535, 4.61899995803833, 1.0720000267028809])
[INFO] [1753422406.212201294] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40700006 4.61899996 1.07200003]
[INFO] [1753422406.214989416] [solver_node]: 求解器返回结果: []
[INFO] [1753422406.311189903] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4070000648498535, 4.61899995803833, 1.0720000267028809])
[INFO] [1753422406.312686735] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40700006 4.61899996 1.07200003]
[INFO] [1753422406.315646029] [solver_node]: 求解器返回结果: []
[INFO] [1753422406.410759485] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4070000648498535, 4.61899995803833, 1.0720000267028809])
[INFO] [1753422406.412305085] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40700006 4.61899996 1.07200003]
[INFO] [1753422406.416475093] [solver_node]: 求解器返回结果: []
[INFO] [1753422406.510763347] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4070000648498535, 4.61899995803833, 1.0720000267028809])
[INFO] [1753422406.512238258] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40700006 4.61899996 1.07200003]
[INFO] [1753422406.514972652] [solver_node]: 求解器返回结果: []
[INFO] [1753422406.611380695] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4070000648498535, 4.61899995803833, 0.23800000548362732])
[INFO] [1753422406.612888439] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40700006 4.61899996 0.23800001]
[WARN] [1753422406.614016526] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422406.614792799] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422406.615612368] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422406.710713408] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4070000648498535, 4.63700008392334, 0.23800000548362732])
[INFO] [1753422406.712140126] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40700006 4.63700008 0.23800001]
[WARN] [1753422406.713206580] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422406.713951524] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422406.714799574] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422406.814402340] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.505000114440918, 4.639999866485596, 0.11900000274181366])
[INFO] [1753422406.816848183] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.50500011 4.63999987 0.119     ]
[WARN] [1753422406.818270869] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422406.819091622] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422406.819923960] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422406.910445895] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.545000076293945, 4.639999866485596, 0.11900000274181366])
[INFO] [1753422406.911963367] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.54500008 4.63999987 0.119     ]
[WARN] [1753422406.913075839] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422406.913834255] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422406.914680096] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422407.012237508] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.565999984741211, 4.64300012588501, 0.11900000274181366])
[INFO] [1753422407.013764132] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.56599998 4.64300013 0.119     ]
[WARN] [1753422407.015100736] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422407.015875120] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422407.016718690] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422407.111355657] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.565999984741211, 4.64300012588501, 0.1679999977350235])
[INFO] [1753422407.112777383] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.56599998 4.64300013 0.168     ]
[WARN] [1753422407.113873022] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422407.114626158] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422407.115478784] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422407.214609765] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.565999984741211, 4.64300012588501, 0.23499999940395355])
[INFO] [1753422407.216590095] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.56599998 4.64300013 0.235     ]
[WARN] [1753422407.218163536] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422407.219638671] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422407.220568482] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422407.310402884] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.565999984741211, 4.64300012588501, 0.23499999940395355])
[INFO] [1753422407.311876867] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.56599998 4.64300013 0.235     ]
[WARN] [1753422407.312969626] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422407.313713066] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422407.314530875] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422407.412455591] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.565999984741211, 4.64300012588501, 0.23499999940395355])
[INFO] [1753422407.416004914] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.56599998 4.64300013 0.235     ]
[WARN] [1753422407.417121065] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422407.417856441] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422407.418687050] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422407.511487210] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.565999984741211, 4.64300012588501, 0.23499999940395355])
[INFO] [1753422407.514447304] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.56599998 4.64300013 0.235     ]
[WARN] [1753422407.516491187] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422407.517274692] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422407.518382107] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422407.610914038] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.565999984741211, 4.64300012588501, 0.23499999940395355])
[INFO] [1753422407.612466358] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.56599998 4.64300013 0.235     ]
[WARN] [1753422407.613636847] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422407.614437088] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422407.615333811] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422407.710490564] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.565999984741211, 4.64300012588501, 0.23499999940395355])
[INFO] [1753422407.711988580] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.56599998 4.64300013 0.235     ]
[WARN] [1753422407.713105179] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422407.713914925] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422407.714797375] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422407.812685226] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.585999965667725, 4.6479997634887695, 0.23499999940395355])
[INFO] [1753422407.814202858] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.58599997 4.64799976 0.235     ]
[WARN] [1753422407.815364611] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422407.816146483] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422407.817002949] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422407.910471411] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.570000171661377, 4.646999835968018, 0.23499999940395355])
[INFO] [1753422407.912023956] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.57000017 4.64699984 0.235     ]
[WARN] [1753422407.913131563] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422407.913891163] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422407.914740557] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422408.012878366] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.561999797821045, 4.646999835968018, 0.23499999940395355])
[INFO] [1753422408.014705060] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.5619998  4.64699984 0.235     ]
[WARN] [1753422408.016009824] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422408.016964948] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422408.017834310] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422408.110499492] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.561999797821045, 4.645999908447266, 0.23499999940395355])
[INFO] [1753422408.111999524] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.5619998  4.64599991 0.235     ]
[WARN] [1753422408.113110171] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422408.113862827] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422408.114710941] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422408.212352260] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.421999931335449, 4.644999980926514, 0.23499999940395355])
[INFO] [1753422408.214694357] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.42199993 4.64499998 0.235     ]
[WARN] [1753422408.215996657] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422408.216771905] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422408.217585554] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422408.310432404] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.333000183105469, 4.644000053405762, 0.23499999940395355])
[INFO] [1753422408.311910067] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.33300018 4.64400005 0.235     ]
[WARN] [1753422408.313010346] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422408.313768698] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422408.314640813] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422408.411093115] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.318999767303467, 4.64300012588501, 0.23499999940395355])
[INFO] [1753422408.412716317] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.31899977 4.64300013 0.235     ]
[WARN] [1753422408.414006680] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422408.414971212] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422408.415873535] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422408.510573353] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.318999767303467, 4.64300012588501, 0.23499999940395355])
[INFO] [1753422408.512470896] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.31899977 4.64300013 0.235     ]
[WARN] [1753422408.513764364] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422408.515337677] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422408.516287617] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422408.611795675] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.318999767303467, 4.640999794006348, 0.23600000143051147])
[INFO] [1753422408.613585505] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.31899977 4.64099979 0.236     ]
[WARN] [1753422408.615797391] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422408.616689730] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422408.617566388] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422408.710559226] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.447000026702881, 4.638999938964844, 0.23600000143051147])
[INFO] [1753422408.712237469] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.44700003 4.63899994 0.236     ]
[WARN] [1753422408.713345044] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422408.714094948] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422408.714950486] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422408.815178803] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.447000026702881, 4.63700008392334, 0.23600000143051147])
[INFO] [1753422408.816698707] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.44700003 4.63700008 0.236     ]
[WARN] [1753422408.817800779] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422408.818638076] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422408.819472334] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422408.911986249] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.504000186920166, 4.63700008392334, 0.23800000548362732])
[INFO] [1753422408.913485256] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.50400019 4.63700008 0.23800001]
[WARN] [1753422408.914588128] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422408.915346288] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422408.916179265] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422409.012494316] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.504000186920166, 4.635000228881836, 0.23899999260902405])
[INFO] [1753422409.014267090] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.50400019 4.63500023 0.23899999]
[WARN] [1753422409.015500748] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422409.017049932] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422409.017958623] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422409.111498641] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4720001220703125, 4.631999969482422, 0.23899999260902405])
[INFO] [1753422409.112964784] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.47200012 4.63199997 0.23899999]
[WARN] [1753422409.114065159] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422409.114817879] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422409.115628200] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422409.211909363] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.433000087738037, 4.631999969482422, 0.23999999463558197])
[INFO] [1753422409.213460980] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.43300009 4.63199997 0.23999999]
[WARN] [1753422409.214616204] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422409.215451294] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422409.216335217] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422409.312753631] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.433000087738037, 4.630000114440918, 0.23600000143051147])
[INFO] [1753422409.314324672] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.43300009 4.63000011 0.236     ]
[WARN] [1753422409.315902785] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422409.316757907] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422409.317874187] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422409.412687767] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.418000221252441, 4.627999782562256, 0.18000000715255737])
[INFO] [1753422409.414382011] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41800022 4.62799978 0.18000001]
[WARN] [1753422409.415643349] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422409.416455782] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422409.417349049] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422409.511292915] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.415999889373779, 4.625999927520752, 0.18000000715255737])
[INFO] [1753422409.512816051] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41599989 4.62599993 0.18000001]
[WARN] [1753422409.513973356] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422409.514803293] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422409.515667567] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422409.616185012] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.414000034332275, 4.625999927520752, 0.08399999886751175])
[WARN] [1753422409.617233802] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422409.710627097] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.414000034332275, 4.625, 0.08399999886751175])
[WARN] [1753422409.711728176] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422409.811317633] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.413000106811523, 4.625, 0.08399999886751175])
[WARN] [1753422409.812394136] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422409.912743033] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4120001792907715, 4.624000072479248, 0.08399999886751175])
[WARN] [1753422409.913736621] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422410.014133968] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.4120001792907715, 4.624000072479248, 0.08399999886751175])
[WARN] [1753422410.015861684] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422410.111626549] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.410999774932861, 4.624000072479248, 0.08399999886751175])
[WARN] [1753422410.112666539] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422410.212458210] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.410999774932861, 4.623000144958496, 1.812000036239624])
[INFO] [1753422410.214343305] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.41099977 4.62300014 1.81200004]
[INFO] [1753422410.218834472] [solver_node]: 求解器返回结果: []
[INFO] [1753422410.310657718] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.409999847412109, 4.622000217437744, 1.812000036239624])
[INFO] [1753422410.312268024] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40999985 4.62200022 1.81200004]
[INFO] [1753422410.315187030] [solver_node]: 求解器返回结果: []
[INFO] [1753422410.413843924] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.409999847412109, 4.619999885559082, 1.812000036239624])
[INFO] [1753422410.415470902] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40999985 4.61999989 1.81200004]
[INFO] [1753422410.418442773] [solver_node]: 求解器返回结果: []
[INFO] [1753422410.511277689] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.406000137329102, 4.619999885559082, 1.812000036239624])
[INFO] [1753422410.512768600] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40600014 4.61999989 1.81200004]
[INFO] [1753422410.517018834] [solver_node]: 求解器返回结果: []
[INFO] [1753422410.612826164] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.406000137329102, 4.61899995803833, 1.812000036239624])
[INFO] [1753422410.616548899] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.40600014 4.61899996 1.81200004]
[INFO] [1753422410.619601411] [solver_node]: 求解器返回结果: []
[INFO] [1753422410.710384635] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.309999942779541, 4.617000102996826, 1.812000036239624])
[INFO] [1753422410.711827386] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.30999994 4.6170001  1.81200004]
[INFO] [1753422410.714436849] [solver_node]: 求解器返回结果: []
[INFO] [1753422410.814292840] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.138000011444092, 4.617000102996826, 1.9529999494552612])
[INFO] [1753422410.816233457] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.13800001 4.6170001  1.95299995]
[INFO] [1753422410.819729147] [solver_node]: 求解器返回结果: []
[INFO] [1753422410.911354181] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.138000011444092, 4.617000102996826, 1.9529999494552612])
[INFO] [1753422410.912919174] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.13800001 4.6170001  1.95299995]
[INFO] [1753422410.915722753] [solver_node]: 求解器返回结果: []
[INFO] [1753422411.014540515] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.928999900817871, 4.617000102996826, 1.9529999494552612])
[INFO] [1753422411.016725745] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.9289999  4.6170001  1.95299995]
[INFO] [1753422411.022032577] [solver_node]: 求解器返回结果: []
[INFO] [1753422411.110516138] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.803999900817871, 4.617000102996826, 1.9529999494552612])
[INFO] [1753422411.111981737] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.8039999  4.6170001  1.95299995]
[INFO] [1753422411.114728643] [solver_node]: 求解器返回结果: []
[INFO] [1753422411.212268874] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.7230000495910645, 4.617000102996826, 1.9529999494552612])
[INFO] [1753422411.214069872] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.72300005 4.6170001  1.95299995]
[INFO] [1753422411.217233523] [solver_node]: 求解器返回结果: []
[INFO] [1753422411.310772679] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.7230000495910645, 4.617000102996826, 1.9529999494552612])
[INFO] [1753422411.312602573] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.72300005 4.6170001  1.95299995]
[INFO] [1753422411.315450473] [solver_node]: 求解器返回结果: []
[INFO] [1753422411.413239446] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.660999774932861, 4.622000217437744, 1.9529999494552612])
[INFO] [1753422411.415282017] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.66099977 4.62200022 1.95299995]
[INFO] [1753422411.418399651] [solver_node]: 求解器返回结果: []
[INFO] [1753422411.510698876] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.668000221252441, 4.625999927520752, 1.9529999494552612])
[INFO] [1753422411.512208060] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.66800022 4.62599993 1.95299995]
[INFO] [1753422411.514971670] [solver_node]: 求解器返回结果: []
[INFO] [1753422411.611380966] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.5879998207092285, 4.625999927520752, 1.9529999494552612])
[INFO] [1753422411.613730008] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.58799982 4.62599993 1.95299995]
[INFO] [1753422411.623175871] [solver_node]: 求解器返回结果: []
[INFO] [1753422411.710542320] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.581999778747559, 4.626999855041504, 1.9529999494552612])
[INFO] [1753422411.712019568] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.58199978 4.62699986 1.95299995]
[INFO] [1753422411.714764617] [solver_node]: 求解器返回结果: []
[INFO] [1753422411.813644622] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.581999778747559, 4.626999855041504, 1.9529999494552612])
[INFO] [1753422411.818955773] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.58199978 4.62699986 1.95299995]
[INFO] [1753422411.822490184] [solver_node]: 求解器返回结果: []
[INFO] [1753422411.915397710] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.59499979019165, 4.627999782562256, 1.9529999494552612])
[INFO] [1753422411.916944079] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.59499979 4.62799978 1.95299995]
[INFO] [1753422411.919856652] [solver_node]: 求解器返回结果: []
[INFO] [1753422412.016324254] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.630000114440918, 4.611999988555908, 1.9529999494552612])
[INFO] [1753422412.018198437] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.63000011 4.61199999 1.95299995]
[INFO] [1753422412.021267174] [solver_node]: 求解器返回结果: []
[INFO] [1753422412.110731844] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.5980000495910645, 4.611999988555908, 1.9529999494552612])
[INFO] [1753422412.112371175] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.59800005 4.61199999 1.95299995]
[INFO] [1753422412.115331141] [solver_node]: 求解器返回结果: []
[INFO] [1753422412.212993329] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.5980000495910645, 4.559000015258789, 1.9529999494552612])
[INFO] [1753422412.214763414] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.59800005 4.55900002 1.95299995]
[INFO] [1753422412.217940441] [solver_node]: 求解器返回结果: []
[INFO] [1753422412.310620091] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.630000114440918, 4.559000015258789, 1.9529999494552612])
[INFO] [1753422412.312205309] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.63000011 4.55900002 1.95299995]
[INFO] [1753422412.315091450] [solver_node]: 求解器返回结果: []
[INFO] [1753422412.410977951] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.636000156402588, 4.434999942779541, 1.9529999494552612])
[INFO] [1753422412.414123810] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.63600016 4.43499994 1.95299995]
[INFO] [1753422412.417641260] [solver_node]: 求解器返回结果: []
[INFO] [1753422412.510587188] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.642000198364258, 4.434999942779541, 1.9529999494552612])
[INFO] [1753422412.512258231] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.6420002  4.43499994 1.95299995]
[INFO] [1753422412.515184053] [solver_node]: 求解器返回结果: []
[INFO] [1753422412.612824256] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.642000198364258, 4.406000137329102, 1.9529999494552612])
[INFO] [1753422412.615213554] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.6420002  4.40600014 1.95299995]
[INFO] [1753422412.619063331] [solver_node]: 求解器返回结果: []
[INFO] [1753422412.712036396] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.642000198364258, 4.406000137329102, 1.9529999494552612])
[INFO] [1753422412.713826834] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.6420002  4.40600014 1.95299995]
[INFO] [1753422412.717140567] [solver_node]: 求解器返回结果: []
[INFO] [1753422412.810937617] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.642000198364258, 4.406000137329102, 1.9529999494552612])
[INFO] [1753422412.814298712] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.6420002  4.40600014 1.95299995]
[INFO] [1753422412.818458448] [solver_node]: 求解器返回结果: []
[INFO] [1753422412.912624370] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.642000198364258, 4.406000137329102, 1.9529999494552612])
[INFO] [1753422412.914431320] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.6420002  4.40600014 1.95299995]
[INFO] [1753422412.917781022] [solver_node]: 求解器返回结果: []
[INFO] [1753422413.010987308] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.642000198364258, 4.406000137329102, 1.9529999494552612])
[INFO] [1753422413.014038764] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.6420002  4.40600014 1.95299995]
[INFO] [1753422413.017701177] [solver_node]: 求解器返回结果: []
[INFO] [1753422413.112496457] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.6519999504089355, 4.388999938964844, 1.9529999494552612])
[INFO] [1753422413.114097323] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.65199995 4.38899994 1.95299995]
[INFO] [1753422413.117664182] [solver_node]: 求解器返回结果: []
[INFO] [1753422413.210503869] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.6519999504089355, 4.388999938964844, 1.9529999494552612])
[INFO] [1753422413.212843374] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.65199995 4.38899994 1.95299995]
[INFO] [1753422413.219596989] [solver_node]: 求解器返回结果: []
[INFO] [1753422413.310417177] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.6519999504089355, 3.88700008392334, 1.9529999494552612])
[INFO] [1753422413.312014171] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.65199995 3.88700008 1.95299995]
[INFO] [1753422413.314993625] [solver_node]: 求解器返回结果: []
[INFO] [1753422413.410928865] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.6519999504089355, 3.385999917984009, 1.9529999494552612])
[INFO] [1753422413.414246759] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.65199995 3.38599992 1.95299995]
[INFO] [1753422413.419836957] [solver_node]: 求解器返回结果: []
[INFO] [1753422413.510822973] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.656000137329102, 2.884999990463257, 1.9529999494552612])
[INFO] [1753422413.513167054] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.65600014 2.88499999 1.95299995]
[INFO] [1753422413.516869500] [solver_node]: 求解器返回结果: []
[INFO] [1753422413.611211331] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.671000003814697, 2.884999990463257, 1.9529999494552612])
[INFO] [1753422413.614187521] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.671      2.88499999 1.95299995]
[INFO] [1753422413.619254732] [solver_node]: 求解器返回结果: []
[INFO] [1753422413.712052402] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.710000038146973, 2.884999990463257, 1.9529999494552612])
[INFO] [1753422413.714082141] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.71000004 2.88499999 1.95299995]
[INFO] [1753422413.717518757] [solver_node]: 求解器返回结果: []
[INFO] [1753422413.810731732] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.710000038146973, 2.884999990463257, 1.9529999494552612])
[INFO] [1753422413.812244116] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.71000004 2.88499999 1.95299995]
[INFO] [1753422413.814982990] [solver_node]: 求解器返回结果: []
[INFO] [1753422413.910907861] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.710000038146973, 2.88700008392334, 1.9529999494552612])
[INFO] [1753422413.912403157] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.71000004 2.88700008 1.95299995]
[INFO] [1753422413.915495574] [solver_node]: 求解器返回结果: []
[INFO] [1753422414.011188441] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.665999889373779, 2.890000104904175, 1.9529999494552612])
[INFO] [1753422414.012733178] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.66599989 2.8900001  1.95299995]
[INFO] [1753422414.015635895] [solver_node]: 求解器返回结果: []
[INFO] [1753422414.111302650] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.552000045776367, 2.890000104904175, 1.9529999494552612])
[INFO] [1753422414.112820634] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.55200005 2.8900001  1.95299995]
[INFO] [1753422414.116107231] [solver_node]: 求解器返回结果: []
[INFO] [1753422414.212235148] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.4120001792907715, 2.8919999599456787, 1.9529999494552612])
[INFO] [1753422414.213663403] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.41200018 2.89199996 1.95299995]
[INFO] [1753422414.216419045] [solver_node]: 求解器返回结果: []
[INFO] [1753422414.311165685] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.4120001792907715, 2.8949999809265137, 1.9529999494552612])
[INFO] [1753422414.312719029] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.41200018 2.89499998 1.95299995]
[INFO] [1753422414.315585842] [solver_node]: 求解器返回结果: []
[INFO] [1753422414.410921518] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.4120001792907715, 2.8970000743865967, 1.9529999494552612])
[INFO] [1753422414.412578673] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.41200018 2.89700007 1.95299995]
[INFO] [1753422414.416426306] [solver_node]: 求解器返回结果: []
[INFO] [1753422414.511291445] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.353000164031982, 2.8970000743865967, 1.9529999494552612])
[INFO] [1753422414.513261374] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.35300016 2.89700007 1.95299995]
[INFO] [1753422414.516625029] [solver_node]: 求解器返回结果: []
[INFO] [1753422414.610953932] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.353000164031982, 2.8980000019073486, 1.9529999494552612])
[INFO] [1753422414.612401003] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.35300016 2.898      1.95299995]
[INFO] [1753422414.615102084] [solver_node]: 求解器返回结果: []
[INFO] [1753422414.711372756] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.349999904632568, 2.8980000019073486, 1.9529999494552612])
[INFO] [1753422414.712827602] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.3499999  2.898      1.95299995]
[INFO] [1753422414.715545740] [solver_node]: 求解器返回结果: []
[INFO] [1753422414.810994090] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.7139999866485596, 2.8980000019073486, 1.9529999494552612])
[INFO] [1753422414.812459497] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 3.71399999 2.898      1.95299995]
[INFO] [1753422414.816659426] [solver_node]: 求解器返回结果: []
[INFO] [1753422414.911791834] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.065000057220459, 2.8980000019073486, 2.884000062942505])
[INFO] [1753422414.913244569] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 3.06500006 2.898      2.88400006]
[INFO] [1753422414.916099317] [solver_node]: 求解器返回结果: []
[INFO] [1753422415.011080170] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.4110000133514404, 2.8980000019073486, 2.884000062942505])
[INFO] [1753422415.012601898] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.41100001 2.898      2.88400006]
[INFO] [1753422415.015588937] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422415.016591934] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422415.017377967] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422415.018104830] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422415.018907535] [solver_node]: 求解器返回结果: [((7.833192171335945, 7.835192171335946), (5.580980724189042, 5.582980724189043), 2.2481425457708513), ((2.162807828664054, 2.164807828664054), (2.417019275810957, 2.4190192758109568), -0.8934501078189419), ((7.9365244074611105, 7.938524407461111), (2.49285662725951, 2.4948566272595096), 0.8308372741178482), ((2.0594755925388886, 2.0614755925388883), (5.50514337274049, 5.507143372740491), -2.310755379471945), ((2.4170192758109565, 2.4190192758109563), (5.8351921713359465, 5.837192171335947), -2.4642464346138384), ((7.578980724189042, 7.580980724189042), (2.162807828664054, 2.164807828664054), 0.6773462189759548), ((7.50314337274049, 7.50514337274049), (5.938524407461112, 5.940524407461113), 2.401633600912745), ((2.4928566272595107, 2.4948566272595105), (2.0594755925388877, 2.0614755925388875), -0.7399590526770481)]
[INFO] [1753422415.113065971] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.4110000133514404, 2.8980000019073486, 2.884000062942505])
[INFO] [1753422415.114618292] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.41100001 2.898      2.88400006]
[INFO] [1753422415.117597395] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422415.118410276] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422415.119245750] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422415.119955013] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422415.120707893] [solver_node]: 求解器返回结果: [((7.833192171335945, 7.835192171335946), (5.580980724189042, 5.582980724189043), 2.2481425457708513), ((2.162807828664054, 2.164807828664054), (2.417019275810957, 2.4190192758109568), -0.8934501078189419), ((7.9365244074611105, 7.938524407461111), (2.49285662725951, 2.4948566272595096), 0.8308372741178482), ((2.0594755925388886, 2.0614755925388883), (5.50514337274049, 5.507143372740491), -2.310755379471945), ((2.4170192758109565, 2.4190192758109563), (5.8351921713359465, 5.837192171335947), -2.4642464346138384), ((7.578980724189042, 7.580980724189042), (2.162807828664054, 2.164807828664054), 0.6773462189759548), ((7.50314337274049, 7.50514337274049), (5.938524407461112, 5.940524407461113), 2.401633600912745), ((2.4928566272595107, 2.4948566272595105), (2.0594755925388877, 2.0614755925388875), -0.7399590526770481)]
[INFO] [1753422415.213065651] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.378000020980835, 2.8980000019073486, 2.884000062942505])
[INFO] [1753422415.214542610] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.37800002 2.898      2.88400006]
[INFO] [1753422415.217574002] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422415.218379683] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422415.219117107] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422415.219812129] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422415.220554897] [solver_node]: 求解器返回结果: [((7.847981482653908, 7.8499814826539085), (5.567377477013474, 5.569377477013474), 2.2418005966154473), ((2.1480185173460917, 2.1500185173460915), (2.430622522986527, 2.432622522986527), -0.899792056974346), ((7.9505601535608585, 7.952560153560859), (2.5038482422312707, 2.5058482422312705), 0.8364453131575802), ((2.0454398464391406, 2.0474398464391403), (5.49415175776873, 5.496151757768731), -2.305147340432213), ((2.4306225229865266, 2.4326225229865264), (5.8499814826539085, 5.851981482653909), -2.4705883837692424), ((7.565377477013472, 7.567377477013473), (2.1480185173460917, 2.1500185173460915), 0.6710042698205506), ((7.492151757768728, 7.494151757768729), (5.952560153560859, 5.95456015356086), 2.4072416399524768), ((2.5038482422312707, 2.5058482422312705), (2.0454398464391406, 2.0474398464391403), -0.7343510136373163)]
[INFO] [1753422415.310729569] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.3570001125335693, 2.8980000019073486, 2.884000062942505])
[INFO] [1753422415.312195104] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.35700011 2.898      2.88400006]
[INFO] [1753422415.315180575] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422415.315986352] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422415.316726336] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422415.317530609] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422415.318302625] [solver_node]: 求解器返回结果: [((7.857516642046081, 7.859516642046081), (5.558700395374944, 5.560700395374945), 2.2377312691800495), ((2.1384833579539184, 2.140483357953918), (2.439299604625056, 2.4412996046250557), -0.9038613844097436), ((7.959600554688246, 7.961600554688246), (2.51085988224998, 2.51285988224998), 0.8400438859813408), ((2.0363994453117535, 2.0383994453117533), (5.487140117750019, 5.489140117750019), -2.3015487676084523), ((2.4392996046250555, 2.4412996046250552), (5.859516642046081, 5.861516642046082), -2.47465771120464), ((7.556700395374943, 7.558700395374943), (2.1384833579539184, 2.140483357953918), 0.6669349423851529), ((7.485140117750019, 7.48714011775002), (5.961600554688246, 5.963600554688247), 2.4108402127762374), ((2.5108598822499806, 2.5128598822499804), (2.0363994453117535, 2.0383994453117533), -0.7307524408135558)]
[INFO] [1753422415.411442288] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.25600004196167, 2.8980000019073486, 3.119999885559082])
[INFO] [1753422415.412925775] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.25600004 2.898      3.11999989]
[INFO] [1753422415.415848461] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422415.416668638] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422415.417393870] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422415.418108093] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422415.418919950] [solver_node]: 求解器返回结果: [((7.851722886818245, 7.853722886818246), (5.44732549192059, 5.4493254919205905), 2.183675712913847), ((2.144277113181753, 2.146277113181753), (2.550674508079409, 2.552674508079409), -0.9579169406759458), ((8.004285970591063, 8.006285970591062), (2.7232453655466284, 2.725245365546628), 0.8576801398030431), ((1.991714029408937, 1.9937140294089368), (5.2747546344533704, 5.276754634453371), -2.28391251378675), ((2.550674508079408, 2.552674508079408), (5.853722886818246, 5.8557228868182465), -2.528713267470842), ((7.44532549192059, 7.447325491920591), (2.144277113181754, 2.1462771131817537), 0.6128793861189509), ((7.272754634453371, 7.274754634453371), (6.006285970591063, 6.008285970591063), 2.4284764665979397), ((2.7232453655466284, 2.725245365546628), (1.991714029408937, 1.9937140294089368), -0.7131161869918533)]
[INFO] [1753422415.510489243] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.25600004196167, 5.449999809265137, 3.119999885559082])
[INFO] [1753422415.511987675] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.25600004 5.44999981 3.11999989]
[INFO] [1753422415.515321442] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422415.516192532] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422415.516932836] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422415.517680819] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422415.518467076] [solver_node]: 求解器返回结果: [((2.3343671231471017, 2.3363671231471015), (5.073942664999405, 5.075942664999405), -1.0972924178839447), ((7.661632876852896, 7.663632876852897), (2.9240573350005947, 2.9260573350005945), 2.044300235705848), ((7.851722886818245, 7.853722886818246), (3.359802114185515, 3.361802114185515), 2.183675712913847), ((2.144277113181753, 2.146277113181753), (4.638197885814483, 4.640197885814484), -0.9579169406759458), ((4.638197885814483, 4.640197885814484), (5.853722886818246, 5.8557228868182465), -2.528713267470842), ((5.357802114185516, 5.359802114185516), (2.144277113181754, 2.1462771131817537), 0.6128793861189509), ((6.832200581567974, 6.834200581567974), (5.629087407299797, 5.631087407299797), 2.6917156623373852), ((3.163799418432026, 3.1657994184320257), (2.368912592700203, 2.370912592700203), -0.449876991252408)]
[INFO] [1753422415.613701631] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.1419999599456787, 2.924999952316284, 3.119999885559082])
[INFO] [1753422415.615243680] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.14199996 2.92499995 3.11999989]
[INFO] [1753422415.618352321] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422415.620010308] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422415.621418626] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422415.622210451] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422415.623027812] [solver_node]: 求解器返回结果: [((7.912519015722702, 7.9145190157227026), (5.380304135180263, 5.382304135180264), 2.1609641620635855), ((2.0834809842772977, 2.0854809842772974), (2.6176958648197366, 2.6196958648197364), -0.9806284915262076), ((8.050666832110451, 8.05266683211045), (2.7730699809087094, 2.775069980908709), 0.8823467947145662), ((1.9453331678895482, 1.947333167889548), (5.22493001909129, 5.226930019091291), -2.259245858875227), ((2.6176958648197357, 2.6196958648197355), (5.914519015722702, 5.916519015722702), -2.551424818321104), ((7.3783041351802625, 7.380304135180263), (2.0834809842772977, 2.0854809842772974), 0.5901678352686891), ((7.222930019091289, 7.22493001909129), (6.052666832110451, 6.054666832110452), 2.453143121509463), ((2.7730699809087094, 2.775069980908709), (1.9453331678895487, 1.9473331678895485), -0.6884495320803303)]
[INFO] [1753422415.710414553] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.1419999599456787, 2.924999952316284, 3.119999885559082])
[INFO] [1753422415.712057308] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.14199996 2.92499995 3.11999989]
[INFO] [1753422415.715275744] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422415.716196659] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422415.716964900] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422415.717706515] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422415.718540773] [solver_node]: 求解器返回结果: [((7.912519015722702, 7.9145190157227026), (5.380304135180263, 5.382304135180264), 2.1609641620635855), ((2.0834809842772977, 2.0854809842772974), (2.6176958648197366, 2.6196958648197364), -0.9806284915262076), ((8.050666832110451, 8.05266683211045), (2.7730699809087094, 2.775069980908709), 0.8823467947145662), ((1.9453331678895482, 1.947333167889548), (5.22493001909129, 5.226930019091291), -2.259245858875227), ((2.6176958648197357, 2.6196958648197355), (5.914519015722702, 5.916519015722702), -2.551424818321104), ((7.3783041351802625, 7.380304135180263), (2.0834809842772977, 2.0854809842772974), 0.5901678352686891), ((7.222930019091289, 7.22493001909129), (6.052666832110451, 6.054666832110452), 2.453143121509463), ((2.7730699809087094, 2.775069980908709), (1.9453331678895487, 1.9473331678895485), -0.6884495320803303)]
[INFO] [1753422415.811007941] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2330000400543213, 3.499000072479248, 3.119999885559082])
[INFO] [1753422415.812450372] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.23300004 3.49900007 3.11999989]
[INFO] [1753422415.815432707] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422415.816245524] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422415.817112646] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422415.817832758] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422415.818589286] [solver_node]: 求解器返回结果: [((7.863749053414421, 7.865749053414421), (4.9451611321348965, 4.947161132134897), 2.179150504719892), ((2.1322509465855783, 2.134250946585578), (3.0528388678651033, 3.054838867865103), -0.9624421488699011), ((7.881500657256212, 7.883500657256213), (2.8914871596276663, 2.893487159627666), 0.9447335226244187), ((2.114499342743786, 2.116499342743786), (5.106512840372333, 5.108512840372334), -2.1968591309653744), ((3.052838867865103, 3.0548388678651026), (5.865749053414421, 5.867749053414422), -2.5332384756647977), ((6.943161132134896, 6.9451611321348965), (2.1322509465855775, 2.1342509465855772), 0.6083541779249956), ((7.104512840372332, 7.106512840372333), (5.883500657256214, 5.885500657256214), 2.5155298494193152), ((2.8914871596276663, 2.893487159627666), (2.1144993427437866, 2.1164993427437864), -0.6260628041704778)]
[INFO] [1753422415.911461071] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.242000102996826, 3.499000072479248, 3.119999885559082])
[INFO] [1753422415.912911373] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.2420001  3.49900007 3.11999989]
[INFO] [1753422415.915900428] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422415.916768831] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422415.917513327] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422415.918258846] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422415.919137937] [solver_node]: 求解器返回结果: [((7.859028837551882, 7.861028837551883), (4.949289640775301, 4.951289640775301), 2.1809246643813553), ((2.136971162448117, 2.138971162448117), (3.048710359224699, 3.050710359224699), -0.9606679892084379), ((7.876563401524217, 7.878563401524218), (2.8886928368657534, 2.890692836865753), 0.9431908242088105), ((2.1194365984757813, 2.121436598475781), (5.109307163134245, 5.111307163134246), -2.1984018293809826), ((3.048710359224699, 3.050710359224699), (5.861028837551882, 5.863028837551883), -2.5314643160033343), ((6.9472896407753, 6.949289640775301), (2.136971162448117, 2.138971162448117), 0.6101283375864587), ((7.107307163134245, 7.109307163134246), (5.878563401524218, 5.880563401524219), 2.513987151003707), ((2.8886928368657534, 2.890692836865753), (2.1194365984757817, 2.1214365984757815), -0.6276055025860862)]
[INFO] [1753422416.012113404] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.242000102996826, 4.623000144958496, 3.119999885559082])
[INFO] [1753422416.013646621] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.2420001  4.62300014 3.11999989]
[INFO] [1753422416.017099718] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422416.017995449] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422416.018836298] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422416.019593210] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422416.020416876] [solver_node]: 求解器返回结果: [((2.5283600094603083, 2.530360009460308), (4.759939735102775, 4.761939735102776), -1.3185089543368749), ((2.4610026253362345, 2.4630026253362343), (4.7188725778818315, 4.720872577881832), -1.9165029234911328), ((7.46763999053969, 7.469639990539691), (3.238060264897225, 3.2400602648972248), 1.8230836992529182), ((7.534997374663765, 7.536997374663765), (3.279127422118169, 3.281127422118169), 1.2250897300986598), ((7.859028837551882, 7.861028837551883), (4.0280878538617975, 4.030087853861798), 2.1809246643813553), ((2.136971162448117, 2.138971162448117), (3.9699121461382028, 3.9719121461382025), -0.9606679892084379), ((7.713178063528862, 7.715178063528863), (3.0799803904229925, 3.0819803904229923), 1.0597413869592431), ((2.2828219364711355, 2.2848219364711353), (4.918019609577008, 4.920019609577008), -2.08185126663055), ((3.969912146138201, 3.9719121461382008), (5.861028837551882, 5.863028837551883), -2.5314643160033343), ((6.026087853861797, 6.0280878538617975), (2.136971162448117, 2.138971162448117), 0.6101283375864587), ((6.916019609577007, 6.918019609577008), (5.715178063528864, 5.7171780635288645), 2.6305377137541397), ((3.0799803904229925, 3.0819803904229923), (2.2828219364711364, 2.284821936471136), -0.5110549398356535)]
[INFO] [1753422416.110594173] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.252000093460083, 4.623000144958496, 3.119999885559082])
[INFO] [1753422416.112135165] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.25200009 4.62300014 3.11999989]
[INFO] [1753422416.115568422] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422416.116398647] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422416.117128743] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422416.117827670] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422416.118618406] [solver_node]: 求解器返回结果: [((2.5380434492193515, 2.5400434492193513), (4.759939735102775, 4.761939735102776), -1.3185089543368749), ((2.4704109664070093, 2.472410966407009), (4.7188725778818315, 4.720872577881832), -1.9165029234911328), ((7.457956550780648, 7.459956550780649), (3.238060264897225, 3.2400602648972248), 1.8230836992529182), ((7.52558903359299, 7.5275890335929905), (3.279127422118169, 3.281127422118169), 1.2250897300986598), ((7.853805754965091, 7.8558057549650915), (4.033942286722363, 4.0359422867223635), 2.1828907885557274), ((2.142194245034909, 2.144194245034909), (3.964057713277636, 3.966057713277636), -0.9587018650340657), ((7.706418724023673, 7.708418724023674), (3.077727041594779, 3.079727041594779), 1.0582059676527944), ((2.289581275976325, 2.2915812759763248), (4.92027295840522, 4.9222729584052205), -2.0833866859369987), ((3.9640577132776365, 3.9660577132776362), (5.855805754965091, 5.857805754965091), -2.5294981918289623), ((6.031942286722363, 6.033942286722364), (2.1421942450349087, 2.1441942450349085), 0.6120944617608308), ((6.91827295840522, 6.920272958405221), (5.708418724023675, 5.7104187240236755), 2.629002294447691), ((3.0777270415947795, 3.0797270415947793), (2.2895812759763254, 2.291581275976325), -0.5125903591421022)]
[INFO] [1753422416.211293932] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.252000093460083, 4.636000156402588, 3.119999885559082])
[INFO] [1753422416.212937711] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.25200009 4.63600016 3.11999989]
[INFO] [1753422416.216720447] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422416.218817803] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422416.219547163] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422416.220271050] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422416.221075067] [solver_node]: 求解器返回结果: [((2.534660855629424, 2.5366608556294237), (4.765398754269884, 4.767398754269885), -1.3134521090034994), ((2.4660491634913204, 2.46804916349132), (4.723520192072089, 4.725520192072089), -1.9214149750853373), ((7.461339144370576, 7.463339144370576), (3.2326012457301156, 3.2346012457301154), 1.8281405445862937), ((7.529950836508679, 7.531950836508679), (3.274479807927911, 3.276479807927911), 1.2201776785044558), ((7.853805754965091, 7.8558057549650915), (4.023302474520891, 4.025302474520892), 2.1828907885557274), ((2.142194245034909, 2.144194245034909), (3.974697525479108, 3.976697525479108), -0.9587018650340657), ((7.704986217048762, 7.706986217048763), (3.0793715995479762, 3.081371599547976), 1.059326072100656), ((2.291013782951237, 2.293013782951237), (4.918628400452023, 4.920628400452023), -2.082266581489137), ((3.974697525479108, 3.976697525479108), (5.855805754965091, 5.857805754965091), -2.5294981918289623), ((6.021302474520891, 6.023302474520892), (2.1421942450349087, 2.1441942450349085), 0.6120944617608308), ((6.916628400452022, 6.918628400452023), (5.7069862170487635, 5.708986217048764), 2.630122398895553), ((3.079371599547977, 3.081371599547977), (2.2910137829512363, 2.293013782951236), -0.5114702546942402)]
[INFO] [1753422416.310463003] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.252000093460083, 4.636000156402588, 3.119999885559082])
[INFO] [1753422416.312048925] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.25200009 4.63600016 3.11999989]
[INFO] [1753422416.315390596] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422416.316237109] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422416.316973925] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422416.317696436] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422416.318503429] [solver_node]: 求解器返回结果: [((2.534660855629424, 2.5366608556294237), (4.765398754269884, 4.767398754269885), -1.3134521090034994), ((2.4660491634913204, 2.46804916349132), (4.723520192072089, 4.725520192072089), -1.9214149750853373), ((7.461339144370576, 7.463339144370576), (3.2326012457301156, 3.2346012457301154), 1.8281405445862937), ((7.529950836508679, 7.531950836508679), (3.274479807927911, 3.276479807927911), 1.2201776785044558), ((7.853805754965091, 7.8558057549650915), (4.023302474520891, 4.025302474520892), 2.1828907885557274), ((2.142194245034909, 2.144194245034909), (3.974697525479108, 3.976697525479108), -0.9587018650340657), ((7.704986217048762, 7.706986217048763), (3.0793715995479762, 3.081371599547976), 1.059326072100656), ((2.291013782951237, 2.293013782951237), (4.918628400452023, 4.920628400452023), -2.082266581489137), ((3.974697525479108, 3.976697525479108), (5.855805754965091, 5.857805754965091), -2.5294981918289623), ((6.021302474520891, 6.023302474520892), (2.1421942450349087, 2.1441942450349085), 0.6120944617608308), ((6.916628400452022, 6.918628400452023), (5.7069862170487635, 5.708986217048764), 2.630122398895553), ((3.079371599547977, 3.081371599547977), (2.2910137829512363, 2.293013782951236), -0.5114702546942402)]
[INFO] [1753422416.413647199] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.252000093460083, 4.65500020980835, 3.119999885559082])
[INFO] [1753422416.415317475] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.25200009 4.65500021 3.11999989]
[INFO] [1753422416.418891598] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422416.420770166] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422416.421555334] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422416.422992805] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422416.423837719] [solver_node]: 求解器返回结果: [((2.5297159549495576, 2.5317159549495574), (4.77334102414194, 4.775341024141941), -1.3062278039738846), ((2.459718182359703, 2.4617181823597027), (4.730293064621592, 4.732293064621593), -1.9284284630678723), ((7.4662840450504415, 7.468284045050442), (3.2246589758580595, 3.2266589758580593), 1.835364849615908), ((7.536281817640296, 7.538281817640296), (3.2677069353784076, 3.2697069353784074), 1.2131641905219213), ((7.853805754965091, 7.8558057549650915), (4.007751949744461, 4.009751949744461), 2.1828907885557274), ((2.142194245034909, 2.144194245034909), (3.990248050255538, 3.992248050255538), -0.9587018650340657), ((7.702907917246896, 7.704907917246897), (3.081756540054273, 3.0837565400542726), 1.0609551478456045), ((2.293092082753103, 2.295092082753103), (4.9162434599457265, 4.918243459945727), -2.0806375057441886), ((3.990248050255538, 3.992248050255538), (5.855805754965091, 5.857805754965091), -2.5294981918289623), ((6.005751949744461, 6.007751949744462), (2.1421942450349087, 2.1441942450349085), 0.6120944617608308), ((6.914243459945726, 6.9162434599457265), (5.7049079172468975, 5.706907917246898), 2.6317514746405015), ((3.0817565400542737, 3.0837565400542735), (2.2930920827531027, 2.2950920827531025), -0.5098411789492918)]
[INFO] [1753422416.510932647] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.252000093460083, 4.691999912261963, 3.119999885559082])
[INFO] [1753422416.512424262] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.25200009 4.69199991 3.11999989]
[INFO] [1753422416.516005970] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422416.517798584] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422416.519251222] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422416.520627156] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422416.522247286] [solver_node]: 求解器返回结果: [((2.520088085236127, 2.5220880852361267), (4.7886868254391874, 4.790686825439188), -1.2926816893727455), ((2.4475329142050177, 2.4495329142050175), (4.74341306655319, 4.745413066553191), -1.9415667645194166), ((7.475911914763873, 7.477911914763873), (3.2093131745608123, 3.211313174560812), 1.8489109642170478), ((7.548467085794981, 7.550467085794982), (3.25458693344681, 3.2565869334468096), 1.2000258890703759), ((7.853805754965091, 7.8558057549650915), (3.9774696775087937, 3.9794696775087934), 2.1828907885557274), ((2.142194245034909, 2.144194245034909), (4.020530322491205, 4.022530322491206), -0.9587018650340657), ((7.698912443236828, 7.700912443236828), (3.086338142075438, 3.088338142075438), 1.064100507035994), ((2.297087556763172, 2.2990875567631717), (4.911661857924563, 4.913661857924564), -2.077492146553799), ((4.020530322491205, 4.022530322491206), (5.855805754965091, 5.857805754965091), -2.5294981918289623), ((5.975469677508793, 5.977469677508794), (2.1421942450349087, 2.1441942450349085), 0.6120944617608308), ((6.9096618579245614, 6.911661857924562), (5.700912443236827, 5.702912443236828), 2.6348968338308905), ((3.086338142075438, 3.088338142075438), (2.2970875567631714, 2.2990875567631712), -0.5066958197589028)]
[INFO] [1753422416.611582773] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.121000051498413, 4.691999912261963, 0.257999986410141])
[INFO] [1753422416.613221304] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.12100005 4.69199991 0.25799999]
[WARN] [1753422416.614494067] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422416.615350917] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422416.616247736] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422416.711147501] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.121000051498413, 4.660999774932861, 0.2750000059604645])
[INFO] [1753422416.712592715] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.12100005 4.66099977 0.27500001]
[WARN] [1753422416.713776516] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422416.714539092] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422416.715372038] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422416.811914365] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.315999984741211, 4.659999847412109, 0.2939999997615814])
[INFO] [1753422416.813434270] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.31599998 4.65999985 0.294     ]
[WARN] [1753422416.814565269] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422416.815396519] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422416.818261348] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422416.910990315] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.496000051498413, 4.656000137329102, 0.2939999997615814])
[INFO] [1753422416.912409161] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.49600005 4.65600014 0.294     ]
[WARN] [1753422416.913496160] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422416.914247791] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422416.915097793] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422417.012776881] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.6630001068115234, 4.656000137329102, 0.3149999976158142])
[INFO] [1753422417.014268081] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.66300011 4.65600014 0.315     ]
[WARN] [1753422417.015757616] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422417.016528544] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422417.017373426] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422417.111321108] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.742000102996826, 4.4720001220703125, 0.3400000035762787])
[INFO] [1753422417.112791635] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7420001  4.47200012 0.34      ]
[WARN] [1753422417.113900267] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422417.114692379] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422417.115532845] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422417.212137223] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.742000102996826, 4.317999839782715, 0.3400000035762787])
[INFO] [1753422417.213680232] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7420001  4.31799984 0.34      ]
[WARN] [1753422417.214984131] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422417.216320319] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422417.217224818] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422417.311787009] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.765000104904175, 4.2129998207092285, 0.33899998664855957])
[INFO] [1753422417.313412324] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7650001  4.21299982 0.33899999]
[WARN] [1753422417.314801153] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422417.315662899] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422417.316978031] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422417.413003965] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.765000104904175, 4.2129998207092285, 0.33899998664855957])
[INFO] [1753422417.414638399] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7650001  4.21299982 0.33899999]
[WARN] [1753422417.416146559] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422417.417494203] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422417.418393390] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422417.511160279] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7639999389648438, 4.2129998207092285, 0.3089999854564667])
[INFO] [1753422417.513423015] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.76399994 4.21299982 0.30899999]
[WARN] [1753422417.514656737] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422417.515496659] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422417.516310404] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422417.613130211] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7639999389648438, 4.230999946594238, 0.26600000262260437])
[INFO] [1753422417.614752837] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.76399994 4.23099995 0.266     ]
[WARN] [1753422417.615934270] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422417.616734799] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422417.617567648] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422417.715695546] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7060000896453857, 4.230999946594238, 0.24699999392032623])
[INFO] [1753422417.717186618] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.70600009 4.23099995 0.24699999]
[WARN] [1753422417.718304946] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422417.719080098] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422417.719911764] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422417.810533295] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7060000896453857, 4.48799991607666, 0.24699999392032623])
[INFO] [1753422417.812183314] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.70600009 4.48799992 0.24699999]
[WARN] [1753422417.813379115] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422417.814825706] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422417.815982722] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422417.910889560] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7060000896453857, 4.730000019073486, 0.24300000071525574])
[INFO] [1753422417.912828001] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.70600009 4.73000002 0.243     ]
[WARN] [1753422417.914222335] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422417.915212948] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422417.916129159] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422418.010847481] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.757999897003174, 4.953999996185303, 0.24300000071525574])
[INFO] [1753422418.012367545] [solver_node]: 调用求解器前，distances shape: (4,), values: [      nan 2.7579999 4.954     0.243    ]
[WARN] [1753422418.014826829] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422418.015657247] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422418.016506033] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422418.111922066] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.757999897003174, 4.979000091552734, 0.28200000524520874])
[INFO] [1753422418.114128321] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7579999  4.97900009 0.28200001]
[WARN] [1753422418.116035529] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422418.117005918] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422418.117944466] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422418.211647375] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.757999897003174, 4.979000091552734, 0.28200000524520874])
[INFO] [1753422418.213676314] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7579999  4.97900009 0.28200001]
[WARN] [1753422418.216013228] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422418.216852669] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422418.217698191] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422418.312042522] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.757999897003174, 4.953999996185303, 0.28200000524520874])
[INFO] [1753422418.316012910] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7579999  4.954      0.28200001]
[WARN] [1753422418.319822463] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422418.321481218] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422418.322404085] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422418.413624734] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.757999897003174, 4.869999885559082, 0.28200000524520874])
[INFO] [1753422418.416048210] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7579999  4.86999989 0.28200001]
[WARN] [1753422418.417211722] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422418.417955738] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422418.418804364] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422418.511395090] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.757999897003174, 4.801000118255615, 0.28200000524520874])
[INFO] [1753422418.513404124] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.7579999  4.80100012 0.28200001]
[WARN] [1753422418.514873403] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422418.515748174] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422418.516675586] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422418.612379209] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.7260000705718994, 4.801000118255615, 0.3400000035762787])
[INFO] [1753422418.614014924] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.72600007 4.80100012 0.34      ]
[WARN] [1753422418.615239078] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422418.617041228] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422418.618942804] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422418.711755295] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.936000108718872, 4.701000213623047, 0.3400000035762787])
[INFO] [1753422418.713519140] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.93600011 4.70100021 0.34      ]
[WARN] [1753422418.714827616] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422418.715652049] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422418.716525220] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422418.810479558] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.936000108718872, 4.677000045776367, 0.3400000035762787])
[INFO] [1753422418.811986758] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.93600011 4.67700005 0.34      ]
[WARN] [1753422418.813103614] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422418.813876174] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422418.814727456] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422418.913524042] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.1630001068115234, 4.685999870300293, 0.3619999885559082])
[INFO] [1753422418.915135628] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 3.16300011 4.68599987 0.36199999]
[WARN] [1753422418.916274180] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422418.917062996] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422418.917902470] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422419.011533250] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.546999931335449, 4.6519999504089355, 0.3619999885559082])
[INFO] [1753422419.013026850] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 3.54699993 4.65199995 0.36199999]
[WARN] [1753422419.014136793] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422419.015032076] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422419.015868798] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422419.112193972] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.7290000915527344, 4.6519999504089355, 0.3970000147819519])
[INFO] [1753422419.113681747] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 3.72900009 4.65199995 0.39700001]
[WARN] [1753422419.115520730] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422419.116303467] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422419.118745278] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422419.213839962] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.7290000915527344, 4.631999969482422, 0.4300000071525574])
[INFO] [1753422419.216167179] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 3.72900009 4.63199997 0.43000001]
[WARN] [1753422419.218036851] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422419.219817113] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422419.222175691] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422419.314081891] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.6429998874664307, 4.631999969482422, 0.44200000166893005])
[INFO] [1753422419.315979979] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 3.64299989 4.63199997 0.442     ]
[WARN] [1753422419.317102947] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422419.317841811] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422419.318658724] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422419.410881059] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.7809998989105225, 4.626999855041504, 0.44200000166893005])
[INFO] [1753422419.412367746] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 3.7809999  4.62699986 0.442     ]
[WARN] [1753422419.413465722] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422419.414202473] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422419.415059099] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422419.511144940] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.8489999771118164, 4.626999855041504, 0.44200000166893005])
[INFO] [1753422419.512914578] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 3.84899998 4.62699986 0.442     ]
[WARN] [1753422419.514082858] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422419.514868027] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422419.516516030] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422419.610480194] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.8239998817443848, 4.626999855041504, 0.4230000078678131])
[INFO] [1753422419.611923584] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 3.82399988 4.62699986 0.42300001]
[WARN] [1753422419.612990743] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422419.613726886] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422419.614532727] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422419.713890862] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.8239998817443848, 4.626999855041504, 0.382999986410141])
[INFO] [1753422419.715570833] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 3.82399988 4.62699986 0.38299999]
[WARN] [1753422419.716681065] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422419.717425560] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422419.718989337] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422419.811397340] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.756999969482422, 4.626999855041504, 0.3440000116825104])
[INFO] [1753422419.812842779] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 3.75699997 4.62699986 0.34400001]
[WARN] [1753422419.813910962] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422419.814644225] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422419.815498515] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422419.911710151] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.819999933242798, 2.992000102996826, 0.3440000116825104])
[INFO] [1753422419.914335934] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 3.81999993 2.9920001  0.34400001]
[WARN] [1753422419.915507671] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422419.916261959] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422419.917158682] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422420.012313335] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.7679998874664307, 2.992000102996826, 0.3149999976158142])
[INFO] [1753422420.013881752] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 3.76799989 2.9920001  0.315     ]
[WARN] [1753422420.018797568] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422420.020739721] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422420.022042181] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422420.111751216] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.7679998874664307, 2.992000102996826, 0.2160000056028366])
[INFO] [1753422420.114364871] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 3.76799989 2.9920001  0.21600001]
[WARN] [1753422420.116007082] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422420.118151223] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422420.119072683] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422420.210834849] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.7679998874664307, 2.992000102996826, 0.2160000056028366])
[INFO] [1753422420.212564806] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 3.76799989 2.9920001  0.21600001]
[WARN] [1753422420.213726846] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422420.214518127] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422420.215442627] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422420.313919175] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.694000005722046, 4.626999855041504, 0.2160000056028366])
[INFO] [1753422420.318234882] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 3.69400001 4.62699986 0.21600001]
[WARN] [1753422420.320247405] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422420.321049662] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422420.321933521] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422420.413291070] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.61899995803833, 4.626999855041504, 0.2160000056028366])
[INFO] [1753422420.415454572] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 3.61899996 4.62699986 0.21600001]
[WARN] [1753422420.417357140] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422420.418210310] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422420.419115002] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422420.512036744] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.61899995803833, 1.25, 0.2160000056028366])
[INFO] [1753422420.513567625] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 3.61899996 1.25       0.21600001]
[WARN] [1753422420.518226827] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422420.521728630] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422420.522982576] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422420.611149114] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.61899995803833, 1.25, 2.99399995803833])
[INFO] [1753422420.612739452] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 3.61899996 1.25       2.99399996]
[INFO] [1753422420.615645113] [solver_node]: 求解器返回结果: []
[INFO] [1753422420.714049116] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.61899995803833, 1.25, 2.99399995803833])
[INFO] [1753422420.715732768] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 3.61899996 1.25       2.99399996]
[INFO] [1753422420.718631741] [solver_node]: 求解器返回结果: []
[INFO] [1753422420.812605602] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2799999713897705, 0.8740000128746033, 2.99399995803833])
[INFO] [1753422420.815239546] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.27999997 0.87400001 2.99399996]
[INFO] [1753422420.820298117] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422420.822074827] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422420.822836795] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422420.823896785] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422420.824668930] [solver_node]: 求解器返回结果: [((8.484125273946063, 8.486125273946062), (6.953668352809239, 6.95566835280924), 1.9795362376851342), ((1.511874726053937, 1.5138747260539367), (1.0443316471907609, 1.0463316471907607), -1.162056415904659), ((9.078242637408152, 9.080242637408151), (2.0000219543452693, 2.002021954345269), 0.5850398247690878), ((0.9177573625918471, 0.9197573625918471), (5.9979780456547305, 5.999978045654731), -2.5565528288207053), ((1.0443316471907607, 1.0463316471907604), (6.486125273946063, 6.488125273946063), -2.7328527426995555), ((8.95166835280924, 8.953668352809238), (1.5118747260539367, 1.5138747260539365), 0.40873991089023776), ((7.99597804565473, 7.9979780456547305), (7.080242637408153, 7.082242637408154), 2.1558361515639843), ((2.0000219543452693, 2.002021954345269), (0.9177573625918469, 0.9197573625918469), -0.9857565020258086)]
[INFO] [1753422420.910840610] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2799999713897705, 0.8740000128746033, 2.99399995803833])
[INFO] [1753422420.912368354] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.27999997 0.87400001 2.99399996]
[INFO] [1753422420.915718441] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422420.916779039] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422420.917594993] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422420.918509988] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422420.919289428] [solver_node]: 求解器返回结果: [((8.484125273946063, 8.486125273946062), (6.953668352809239, 6.95566835280924), 1.9795362376851342), ((1.511874726053937, 1.5138747260539367), (1.0443316471907609, 1.0463316471907607), -1.162056415904659), ((9.078242637408152, 9.080242637408151), (2.0000219543452693, 2.002021954345269), 0.5850398247690878), ((0.9177573625918471, 0.9197573625918471), (5.9979780456547305, 5.999978045654731), -2.5565528288207053), ((1.0443316471907607, 1.0463316471907604), (6.486125273946063, 6.488125273946063), -2.7328527426995555), ((8.95166835280924, 8.953668352809238), (1.5118747260539367, 1.5138747260539365), 0.40873991089023776), ((7.99597804565473, 7.9979780456547305), (7.080242637408153, 7.082242637408154), 2.1558361515639843), ((2.0000219543452693, 2.002021954345269), (0.9177573625918469, 0.9197573625918469), -0.9857565020258086)]
[INFO] [1753422421.011763130] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2799999713897705, 0.5230000019073486, 2.99399995803833])
[INFO] [1753422421.013226777] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.27999997 0.523      2.99399996]
[INFO] [1753422421.016214584] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422421.017032169] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422421.017741784] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422421.018445319] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422421.019219960] [solver_node]: 求解器返回结果: [((8.484125273946063, 8.486125273946062), (7.275753817496118, 7.2777538174961185), 1.9795362376851342), ((1.511874726053937, 1.5138747260539367), (0.7222461825038814, 0.7242461825038814), -1.162056415904659), ((9.288628743408376, 9.290628743408375), (1.5978918583900839, 1.5998918583900836), 0.4384621095514234), ((0.7073712565916236, 0.7093712565916236), (6.400108141609915, 6.402108141609916), -2.7031305440383697), ((0.7222461825038814, 0.7242461825038814), (6.486125273946063, 6.488125273946063), -2.7328527426995555), ((9.273753817496118, 9.275753817496117), (1.5118747260539367, 1.5138747260539365), 0.40873991089023776), ((8.398108141609915, 8.400108141609914), (7.2906287434083765, 7.292628743408377), 2.00925843634632), ((1.597891858390084, 1.5998918583900839), (0.7073712565916234, 0.7093712565916234), -1.1323342172434732)]
[INFO] [1753422421.110384994] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2799999713897705, 0.19599999487400055, 4.252999782562256])
[INFO] [1753422421.111854433] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.27999997 0.19599999 4.25299978]
[WARN] [1753422421.112955193] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422421.113713129] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422421.114521882] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422421.210492234] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2799999713897705, 0.19599999487400055, 4.252999782562256])
[INFO] [1753422421.212009578] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.27999997 0.19599999 4.25299978]
[WARN] [1753422421.213167747] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422421.214120791] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422421.215019658] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422421.310558289] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.9269999861717224, 0.11900000274181366, 4.252999782562256])
[INFO] [1753422421.312166643] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.92699999 0.119      4.25299978]
[WARN] [1753422421.313327180] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422421.314128285] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422421.315795904] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422421.412549601] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.9269999861717224, 0.11900000274181366, 4.252999782562256])
[INFO] [1753422421.415744261] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.92699999 0.119      4.25299978]
[WARN] [1753422421.419016682] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422421.419895133] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422421.421222713] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422421.510620030] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.9269999861717224, 0.11900000274181366, 4.252999782562256])
[INFO] [1753422421.512138238] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.92699999 0.119      4.25299978]
[WARN] [1753422421.513266870] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422421.514031814] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422421.514892824] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422421.610986155] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.9269999861717224, 0.1469999998807907, 2.8310000896453857])
[INFO] [1753422421.614379507] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.92699999 0.147      2.83100009]
[WARN] [1753422421.615601005] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422421.616401886] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422421.617253744] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422421.710846510] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.492000102996826, 0.05299999937415123, 2.8310000896453857])
[WARN] [1753422421.711917668] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422421.810707568] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.492000102996826, 0.05299999937415123, 2.8310000896453857])
[WARN] [1753422421.812014732] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422421.911392357] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.492000102996826, 0.05299999937415123, 2.8310000896453857])
[WARN] [1753422421.912475004] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422422.011131269] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.390000104904175, 0.05299999937415123, 2.8310000896453857])
[WARN] [1753422422.012219004] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422422.112703181] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.2929999828338623, 0.05299999937415123, 2.8310000896453857])
[WARN] [1753422422.113758211] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422422.211581307] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.184000015258789, 0.05299999937415123, 3.742000102996826])
[WARN] [1753422422.212778741] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422422.311500800] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.184000015258789, 0.05299999937415123, 3.742000102996826])
[WARN] [1753422422.312567639] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422422.412322744] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.1710000038146973, 0.05299999937415123, 3.742000102996826])
[WARN] [1753422422.413439568] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422422.511990424] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.1700000762939453, 0.05299999937415123, 3.742000102996826])
[WARN] [1753422422.513083855] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422422.612647148] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.1630001068115234, 0.05299999937415123, 3.742000102996826])
[WARN] [1753422422.613758148] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422422.711428633] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.1579999923706055, 0.05299999937415123, 3.742000102996826])
[WARN] [1753422422.712490544] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422422.812211408] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.1579999923706055, 0.05299999937415123, 3.742000102996826])
[WARN] [1753422422.813297255] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422422.911058335] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.1579999923706055, 0.05299999937415123, 3.742000102996826])
[WARN] [1753422422.912237496] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422423.011507151] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.0759999752044678, 0.05299999937415123, 3.742000102996826])
[WARN] [1753422423.012864012] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422423.111439765] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.015000104904175, 0.05299999937415123, 3.742000102996826])
[WARN] [1753422423.112544076] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422423.211014835] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.015000104904175, 0.05299999937415123, 3.742000102996826])
[WARN] [1753422423.212241261] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422423.311318434] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.984999895095825, 0.05299999937415123, 3.742000102996826])
[WARN] [1753422423.312419417] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422423.414164805] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.984999895095825, 0.05299999937415123, 0.2160000056028366])
[WARN] [1753422423.415305246] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422423.511549238] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.0179998874664307, 0.05299999937415123, 0.2160000056028366])
[WARN] [1753422423.512586316] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422423.611621247] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.0179998874664307, 0.05299999937415123, 0.2160000056028366])
[WARN] [1753422423.612801528] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422423.712017359] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.0179998874664307, 0.05299999937415123, 0.2160000056028366])
[WARN] [1753422423.713064933] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422423.811477227] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 3.0490000247955322, 0.05299999937415123, 0.2160000056028366])
[WARN] [1753422423.812709381] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422423.910856293] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.500999927520752, 0.05299999937415123, 0.2160000056028366])
[WARN] [1753422423.911930620] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753422424.019570502] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.500999927520752, 2.75600004196167, 0.2160000056028366])
[INFO] [1753422424.021060101] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.50099993 2.75600004 0.21600001]
[WARN] [1753422424.022150428] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422424.022957837] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422424.024246569] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422424.111143259] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.9359999895095825, 2.75600004196167, 2.187999963760376])
[INFO] [1753422424.112825887] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.93599999 2.75600004 2.18799996]
[INFO] [1753422424.115838015] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422424.116654384] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422424.117386784] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422424.118087119] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422424.118931841] [solver_node]: 求解器返回结果: [((8.233360747489131, 8.23536074748913), (5.734245374965503, 5.736245374965503), 2.2685601530671606), ((1.7626392525108685, 1.7646392525108683), (2.2637546250344975, 2.2657546250344973), -0.8730325005226326), ((8.190786175836372, 8.192786175836371), (2.07141030838901, 2.07341030838901), 0.8954344989525174), ((1.8052138241636269, 1.8072138241636266), (5.92658969161099, 5.92858969161099), -2.2461581546372758), ((2.263754625034497, 2.265754625034497), (6.235360747489131, 6.237360747489132), -2.443828827317529), ((7.732245374965502, 7.734245374965503), (1.7626392525108683, 1.764639252510868), 0.6977638262722641), ((7.924589691610989, 7.92658969161099), (6.192786175836372, 6.194786175836373), 2.466230825747414), ((2.0714103083890105, 2.0734103083890103), (1.805213824163627, 1.8072138241636269), -0.6753618278423792)]
[INFO] [1753422424.215349981] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.340000033378601, 2.75600004196167, 2.187999963760376])
[INFO] [1753422424.219465301] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.34000003 2.75600004 2.18799996]
[INFO] [1753422424.225007370] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422424.226036832] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422424.226829073] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422424.228789050] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422424.229562795] [solver_node]: 求解器返回结果: [((8.531690013580855, 8.533690013580854), (5.429151418070156, 5.431151418070157), 2.1098317830855633), ((1.4643099864191447, 1.4663099864191445), (2.5688485819298434, 2.5708485819298432), -1.0317608705042296), ((8.529940677886227, 8.531940677886226), (2.230310850329711, 2.2323108503297107), 1.0247058785224747), ((1.466059322113773, 1.4680593221137728), (5.7676891496702885, 5.769689149670289), -2.1168867750673184), ((2.568848581929843, 2.570848581929843), (6.533690013580855, 6.535690013580855), -2.602557197299126), ((7.427151418070156, 7.429151418070156), (1.4643099864191451, 1.466309986419145), 0.5390354562906672), ((7.765689149670288, 7.7676891496702885), (6.531940677886227, 6.5339406778862275), 2.5955022053173713), ((2.230310850329711, 2.2323108503297107), (1.466059322113773, 1.4680593221137728), -0.5460904482724218)]
[INFO] [1753422424.310401917] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.3029999732971191, 2.75600004196167, 2.187999963760376])
[INFO] [1753422424.311971038] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.30299997 2.75600004 2.18799996]
[INFO] [1753422424.314864604] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422424.315678989] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422424.316400860] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422424.317110155] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422424.317868603] [solver_node]: 求解器返回结果: [((8.553946926515408, 8.555946926515407), (5.410217934955726, 5.412217934955726), 2.0987697686055378), ((1.4420530734845909, 1.4440530734845907), (2.5877820650442738, 2.5897820650442736), -1.0428228849842553), ((8.554010021145304, 8.556010021145303), (2.23981041284007, 2.2418104128400698), 1.0335150983299721), ((1.4419899788546964, 1.4439899788546962), (5.75818958715993, 5.760189587159931), -2.108077555259821), ((2.5877820650442738, 2.5897820650442736), (6.555946926515409, 6.55794692651541), -2.613619211779152), ((7.408217934955725, 7.410217934955726), (1.4420530734845913, 1.444053073484591), 0.5279734418106413), ((7.75618958715993, 7.75818958715993), (6.556010021145303, 6.558010021145304), 2.6043114251248687), ((2.23981041284007, 2.2418104128400698), (1.4419899788546968, 1.4439899788546966), -0.5372812284649245)]
[INFO] [1753422424.410567593] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.3029999732971191, 2.75600004196167, 2.187999963760376])
[INFO] [1753422424.414139445] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.30299997 2.75600004 2.18799996]
[INFO] [1753422424.417404282] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422424.418575411] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422424.419353891] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422424.420059570] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422424.420846659] [solver_node]: 求解器返回结果: [((8.553946926515408, 8.555946926515407), (5.410217934955726, 5.412217934955726), 2.0987697686055378), ((1.4420530734845909, 1.4440530734845907), (2.5877820650442738, 2.5897820650442736), -1.0428228849842553), ((8.554010021145304, 8.556010021145303), (2.23981041284007, 2.2418104128400698), 1.0335150983299721), ((1.4419899788546964, 1.4439899788546962), (5.75818958715993, 5.760189587159931), -2.108077555259821), ((2.5877820650442738, 2.5897820650442736), (6.555946926515409, 6.55794692651541), -2.613619211779152), ((7.408217934955725, 7.410217934955726), (1.4420530734845913, 1.444053073484591), 0.5279734418106413), ((7.75618958715993, 7.75818958715993), (6.556010021145303, 6.558010021145304), 2.6043114251248687), ((2.23981041284007, 2.2418104128400698), (1.4419899788546968, 1.4439899788546966), -0.5372812284649245)]
[INFO] [1753422424.510422382] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2690000534057617, 1.3550000190734863, 2.187999963760376])
[INFO] [1753422424.512012688] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26900005 1.35500002 2.18799996]
[INFO] [1753422424.515109330] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422424.515976836] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422424.516715700] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422424.517449923] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422424.518223380] [solver_node]: 求解器返回结果: [((8.574814270332665, 8.576814270332664), (6.610311733445622, 6.6123117334456225), 2.0884772376302974), ((1.421185729667335, 1.4231857296673347), (1.3876882665543777, 1.3896882665543775), -1.0531154159594958), ((8.871713513463945, 8.873713513463944), (1.8528826863322874, 1.8548826863322871), 0.7508634280698376), ((1.1242864865360556, 1.1262864865360553), (6.145117313667711, 6.147117313667712), -2.3907292255199555), ((1.3876882665543777, 1.3896882665543775), (6.576814270332664, 6.578814270332665), -2.6239117427543923), ((8.608311733445623, 8.610311733445622), (1.4211857296673354, 1.4231857296673351), 0.5176809108354009), ((8.143117313667712, 8.145117313667711), (6.873713513463944, 6.875713513463944), 2.321659754864734), ((1.8528826863322874, 1.8548826863322871), (1.1242864865360558, 1.1262864865360556), -0.8199328987250589)]
[INFO] [1753422424.611988440] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2680000066757202, 1.3550000190734863, 2.187999963760376])
[INFO] [1753422424.613725053] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26800001 1.35500002 2.18799996]
[INFO] [1753422424.617527310] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422424.618418433] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422424.619313492] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422424.620419563] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422424.621226428] [solver_node]: 求解器返回结果: [((8.575434099794784, 8.577434099794782), (6.610014142130907, 6.612014142130907), 2.088172652717579), ((1.4205659002052164, 1.4225659002052162), (1.3879858578690936, 1.3899858578690933), -1.053420000872214), ((8.872065490538322, 8.874065490538321), (1.853339542347875, 1.8553395423478747), 0.7511401724634257), ((1.123934509461678, 1.1259345094616777), (6.144660457652123, 6.146660457652124), -2.3904524811263674), ((1.3879858578690936, 1.3899858578690933), (6.577434099794783, 6.579434099794784), -2.624216327667111), ((8.608014142130907, 8.610014142130906), (1.4205659002052164, 1.4225659002052162), 0.5173763259226825), ((8.142660457652125, 8.144660457652124), (6.874065490538322, 6.8760654905383225), 2.3219364992583222), ((1.8533395423478751, 1.855339542347875), (1.123934509461678, 1.1259345094616777), -0.819656154331471)]
[INFO] [1753422424.710719270] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1799999475479126, 1.3550000190734863, 1.1950000524520874])
[INFO] [1753422424.712197221] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.17999995 1.35500002 1.19500005]
[INFO] [1753422424.715500651] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422424.716369886] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422424.717110893] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422424.717841597] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422424.718725488] [solver_node]: 求解器返回结果: [((8.842774264539669, 8.844774264539668), (6.8440185650047765, 6.846018565004777), 2.2980604554171453), ((1.1532257354603321, 1.155225735460332), (1.1539814349952235, 1.1559814349952233), -0.8435321981726478), ((8.904222820748453, 8.906222820748452), (1.198394538189414, 1.2003945381894139), 0.7761470989144996), ((1.091777179251546, 1.0937771792515458), (6.799605461810586, 6.801605461810587), -2.3654455546752935), ((1.1539814349952235, 1.1559814349952233), (6.8447742645396685, 6.846774264539669), -2.4143285249675444), ((8.842018565004777, 8.844018565004776), (1.153225735460332, 1.1552257354603317), 0.7272641286222488), ((8.797605461810585, 8.799605461810584), (6.906222820748454, 6.908222820748454), 2.346943425709396), ((1.198394538189414, 1.2003945381894139), (1.091777179251546, 1.0937771792515458), -0.794649227880397)]
[INFO] [1753422424.813192643] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1799999475479126, 1.3550000190734863, 1.1950000524520874])
[INFO] [1753422424.815080843] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.17999995 1.35500002 1.19500005]
[INFO] [1753422424.818194125] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422424.820091157] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422424.820925223] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422424.821692695] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422424.822480904] [solver_node]: 求解器返回结果: [((8.842774264539669, 8.844774264539668), (6.8440185650047765, 6.846018565004777), 2.2980604554171453), ((1.1532257354603321, 1.155225735460332), (1.1539814349952235, 1.1559814349952233), -0.8435321981726478), ((8.904222820748453, 8.906222820748452), (1.198394538189414, 1.2003945381894139), 0.7761470989144996), ((1.091777179251546, 1.0937771792515458), (6.799605461810586, 6.801605461810587), -2.3654455546752935), ((1.1539814349952235, 1.1559814349952233), (6.8447742645396685, 6.846774264539669), -2.4143285249675444), ((8.842018565004777, 8.844018565004776), (1.153225735460332, 1.1552257354603317), 0.7272641286222488), ((8.797605461810585, 8.799605461810584), (6.906222820748454, 6.908222820748454), 2.346943425709396), ((1.198394538189414, 1.2003945381894139), (1.091777179251546, 1.0937771792515458), -0.794649227880397)]
[INFO] [1753422424.912015187] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1799999475479126, 0.9869999885559082, 1.1950000524520874])
[INFO] [1753422424.913499378] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.17999995 0.98699999 1.19500005]
[INFO] [1753422424.916299597] [solver_node]: 求解器返回结果: []
[INFO] [1753422425.011469552] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1319999694824219, 0.9869999885559082, 1.1950000524520874])
[INFO] [1753422425.014096135] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.13199997 0.98699999 1.19500005]
[INFO] [1753422425.017462479] [solver_node]: 求解器返回结果: []
[INFO] [1753422425.111194739] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1319999694824219, 0.9869999885559082, 1.1950000524520874])
[INFO] [1753422425.113174685] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.13199997 0.98699999 1.19500005]
[INFO] [1753422425.115986489] [solver_node]: 求解器返回结果: []
[INFO] [1753422425.211078970] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1319999694824219, 0.9869999885559082, 1.1950000524520874])
[INFO] [1753422425.212925058] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.13199997 0.98699999 1.19500005]
[INFO] [1753422425.218555897] [solver_node]: 求解器返回结果: []
[INFO] [1753422425.310779422] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1319999694824219, 0.9869999885559082, 1.1950000524520874])
[INFO] [1753422425.312196700] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.13199997 0.98699999 1.19500005]
[INFO] [1753422425.314963702] [solver_node]: 求解器返回结果: []
[INFO] [1753422425.411869278] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1319999694824219, 0.9869999885559082, 1.1950000524520874])
[INFO] [1753422425.417156270] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.13199997 0.98699999 1.19500005]
[INFO] [1753422425.420551094] [solver_node]: 求解器返回结果: []
[INFO] [1753422425.510825618] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1319999694824219, 0.9869999885559082, 1.1950000524520874])
[INFO] [1753422425.512384435] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.13199997 0.98699999 1.19500005]
[INFO] [1753422425.515681593] [solver_node]: 求解器返回结果: []
[INFO] [1753422425.611140962] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1319999694824219, 0.9869999885559082, 1.1950000524520874])
[INFO] [1753422425.614441224] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.13199997 0.98699999 1.19500005]
[INFO] [1753422425.617967571] [solver_node]: 求解器返回结果: []
[INFO] [1753422425.710792676] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1319999694824219, 0.7440000176429749, 1.1950000524520874])
[INFO] [1753422425.712227042] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.13199997 0.74400002 1.19500005]
[INFO] [1753422425.714932316] [solver_node]: 求解器返回结果: []
[INFO] [1753422425.810893840] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1319999694824219, 0.7440000176429749, 1.1950000524520874])
[INFO] [1753422425.812391887] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.13199997 0.74400002 1.19500005]
[INFO] [1753422425.817747649] [solver_node]: 求解器返回结果: []
[INFO] [1753422425.910962235] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1319999694824219, 0.7440000176429749, 1.1950000524520874])
[INFO] [1753422425.912432122] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.13199997 0.74400002 1.19500005]
[INFO] [1753422425.915180596] [solver_node]: 求解器返回结果: []
[INFO] [1753422426.011924569] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1319999694824219, 0.6060000061988831, 1.1950000524520874])
[INFO] [1753422426.015480100] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.13199997 0.60600001 1.19500005]
[INFO] [1753422426.019131250] [solver_node]: 求解器返回结果: []
[INFO] [1753422426.110811916] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1319999694824219, 0.6060000061988831, 1.1950000524520874])
[INFO] [1753422426.112423662] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.13199997 0.60600001 1.19500005]
[INFO] [1753422426.115382093] [solver_node]: 求解器返回结果: []
[INFO] [1753422426.210609298] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1319999694824219, 0.6060000061988831, 1.1950000524520874])
[INFO] [1753422426.212216436] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.13199997 0.60600001 1.19500005]
[INFO] [1753422426.219814613] [solver_node]: 求解器返回结果: []
[INFO] [1753422426.310684670] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.0099999904632568, 0.6320000290870667, 1.1950000524520874])
[INFO] [1753422426.312727465] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.00999999 0.63200003 1.19500005]
[INFO] [1753422426.315508804] [solver_node]: 求解器返回结果: []
[INFO] [1753422426.410624775] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8740000128746033, 0.6320000290870667, 1.1950000524520874])
[INFO] [1753422426.412144679] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.87400001 0.63200003 1.19500005]
[INFO] [1753422426.415882583] [solver_node]: 求解器返回结果: []
[INFO] [1753422426.510516207] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8740000128746033, 0.9900000095367432, 1.1950000524520874])
[INFO] [1753422426.512205139] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.87400001 0.99000001 1.19500005]
[INFO] [1753422426.515811936] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422426.516967640] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422426.517746441] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422426.518467640] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422426.519301418] [solver_node]: 求解器返回结果: [((8.972985320479154, 8.974985320479153), (6.996640468456773, 6.998640468456774), 2.1708225941616606), ((1.023014679520847, 1.0250146795208468), (1.001359531543226, 1.0033595315432258), -0.9707700594281323), ((9.13996813292876, 9.141968132928758), (1.1766504416032932, 1.178650441603293), 0.7522346377060165), ((0.856031867071241, 0.858031867071241), (6.821349558396706, 6.823349558396707), -2.3893580158837766), ((1.001359531543226, 1.0033595315432258), (6.974985320479153, 6.976985320479153), -2.5415663862230287), ((8.994640468456774, 8.996640468456773), (1.023014679520847, 1.0250146795208468), 0.6000262673667643), ((8.819349558396707, 8.821349558396706), (7.141968132928759, 7.14396813292876), 2.323030964500913), ((1.1766504416032932, 1.178650441603293), (0.8560318670712407, 0.8580318670712407), -0.8185616890888802)]
[INFO] [1753422426.611030565] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.8740000128746033, 1.2120000123977661, 1.1950000524520874])
[INFO] [1753422426.612614630] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.87400001 1.21200001 1.19500005]
[INFO] [1753422426.616346710] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422426.618752073] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422426.619603931] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422426.620404748] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422426.621233853] [solver_node]: 求解器返回结果: [((8.972985320479154, 8.974985320479153), (6.813419252279721, 6.815419252279722), 2.1708225941616606), ((1.023014679520847, 1.0250146795208468), (1.184580747720278, 1.1865807477202779), -0.9707700594281323), ((9.072282893956896, 9.074282893956894), (1.2448396450148187, 1.2468396450148185), 0.8300063419625197), ((0.923717106043105, 0.925717106043105), (6.753160354985181, 6.755160354985182), -2.3115863116272735), ((1.1845807477202777, 1.1865807477202774), (6.974985320479153, 6.976985320479153), -2.5415663862230287), ((8.811419252279721, 8.81341925227972), (1.023014679520847, 1.0250146795208468), 0.6000262673667643), ((8.751160354985181, 8.75316035498518), (7.0742828939568945, 7.076282893956895), 2.400802668757416), ((1.2448396450148187, 1.2468396450148185), (0.9237171060431052, 0.9257171060431052), -0.7407899848323768)]
[INFO] [1753422426.710527589] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.18700000643730164, 1.2120000123977661, 1.1950000524520874])
[INFO] [1753422426.712056005] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.18700001 1.21200001 1.19500005]
[WARN] [1753422426.713156956] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422426.713927501] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422426.714790335] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422426.810396140] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.18700000643730164, 1.2120000123977661, 1.1950000524520874])
[INFO] [1753422426.811973390] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.18700001 1.21200001 1.19500005]
[WARN] [1753422426.813132486] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422426.814017049] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422426.815046351] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422426.911172839] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.18700000643730164, 1.2100000381469727, 4.869999885559082])
[INFO] [1753422426.912703976] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.18700001 1.21000004 4.86999989]
[WARN] [1753422426.914005955] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422426.914953048] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422426.915884587] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422427.010747049] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.18700000643730164, 1.2100000381469727, 4.869999885559082])
[INFO] [1753422427.012765524] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.18700001 1.21000004 4.86999989]
[WARN] [1753422427.015421420] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422427.017206418] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422427.018221128] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422427.110563504] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.18700000643730164, 1.2100000381469727, 4.867000102996826])
[INFO] [1753422427.112090321] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.18700001 1.21000004 4.8670001 ]
[WARN] [1753422427.113207881] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422427.113967705] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422427.114826891] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422427.210966789] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.18700000643730164, 1.2100000381469727, 4.861999988555908])
[INFO] [1753422427.212697513] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.18700001 1.21000004 4.86199999]
[WARN] [1753422427.214076583] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753422427.215054107] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753422427.216041744] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753422427.310963696] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2750000953674316, 1.2100000381469727, 4.85699987411499])
[INFO] [1753422427.312487728] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.2750001  1.21000004 4.85699987]
[INFO] [1753422427.315616275] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422427.316471365] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422427.317209973] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422427.317939076] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422427.319098685] [solver_node]: 求解器返回结果: [((7.604338594885401, 7.606338594885401), (6.669112971758438, 6.671112971758439), 2.0098784211873237), ((2.3916614051145975, 2.3936614051145972), (1.328887028241561, 1.3308870282415608), -1.1317142324024694), ((8.719233726826928, 8.721233726826927), (2.6682446202629846, 2.6702446202629844), 0.5008298927524066), ((1.2767662731730718, 1.2787662731730716), (5.3297553797370165, 5.331755379737017), -2.6407627608373865), ((1.328887028241561, 1.3308870282415608), (5.606338594885402, 5.608338594885403), -2.702510559197366), ((8.667112971758439, 8.669112971758437), (2.3916614051145983, 2.393661405114598), 0.43908209439242735), ((7.327755379737014, 7.329755379737015), (6.721233726826928, 6.723233726826929), 2.071626219547303), ((2.6682446202629833, 2.670244620262983), (1.2767662731730711, 1.278766273173071), -1.06996643404249)]
[INFO] [1753422427.411465126] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2750000953674316, 1.9529999494552612, 4.85699987411499])
[INFO] [1753422427.413653269] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.2750001  1.95299995 4.85699987]
[INFO] [1753422427.423499942] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422427.424534364] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422427.425318572] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422427.426029915] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422427.426827532] [solver_node]: 求解器返回结果: [((7.604338594885401, 7.606338594885401), (5.99659235713749, 5.998592357137491), 2.0098784211873237), ((2.3916614051145975, 2.3936614051145972), (2.00140764286251, 2.0034076428625096), -1.1317142324024694), ((8.322556584954414, 8.324556584954413), (3.417083095625989, 3.419083095625989), 0.681946052263942), ((1.6734434150455852, 1.675443415045585), (4.58091690437401, 4.58291690437401), -2.459646601325851), ((2.0014076428625094, 2.003407642862509), (5.606338594885402, 5.608338594885403), -2.702510559197366), ((7.994592357137489, 7.99659235713749), (2.3916614051145983, 2.393661405114598), 0.43908209439242735), ((6.57891690437401, 6.580916904374011), (6.324556584954415, 6.326556584954416), 2.2527423790588386), ((3.417083095625989, 3.419083095625989), (1.673443415045585, 1.6754434150455848), -0.8888502745309546)]
[INFO] [1753422427.511718871] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2750000953674316, 1.9529999494552612, 4.85699987411499])
[INFO] [1753422427.513226295] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.2750001  1.95299995 4.85699987]
[INFO] [1753422427.516500061] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422427.517400528] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422427.518190336] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422427.518987537] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422427.519794498] [solver_node]: 求解器返回结果: [((7.604338594885401, 7.606338594885401), (5.99659235713749, 5.998592357137491), 2.0098784211873237), ((2.3916614051145975, 2.3936614051145972), (2.00140764286251, 2.0034076428625096), -1.1317142324024694), ((8.322556584954414, 8.324556584954413), (3.417083095625989, 3.419083095625989), 0.681946052263942), ((1.6734434150455852, 1.675443415045585), (4.58091690437401, 4.58291690437401), -2.459646601325851), ((2.0014076428625094, 2.003407642862509), (5.606338594885402, 5.608338594885403), -2.702510559197366), ((7.994592357137489, 7.99659235713749), (2.3916614051145983, 2.393661405114598), 0.43908209439242735), ((6.57891690437401, 6.580916904374011), (6.324556584954415, 6.326556584954416), 2.2527423790588386), ((3.417083095625989, 3.419083095625989), (1.673443415045585, 1.6754434150455848), -0.8888502745309546)]
[INFO] [1753422427.610950418] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2750000953674316, 1.9529999494552612, 4.85699987411499])
[INFO] [1753422427.612459282] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.2750001  1.95299995 4.85699987]
[INFO] [1753422427.615580276] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422427.616436103] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422427.617326554] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422427.618218348] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422427.619301860] [solver_node]: 求解器返回结果: [((7.604338594885401, 7.606338594885401), (5.99659235713749, 5.998592357137491), 2.0098784211873237), ((2.3916614051145975, 2.3936614051145972), (2.00140764286251, 2.0034076428625096), -1.1317142324024694), ((8.322556584954414, 8.324556584954413), (3.417083095625989, 3.419083095625989), 0.681946052263942), ((1.6734434150455852, 1.675443415045585), (4.58091690437401, 4.58291690437401), -2.459646601325851), ((2.0014076428625094, 2.003407642862509), (5.606338594885402, 5.608338594885403), -2.702510559197366), ((7.994592357137489, 7.99659235713749), (2.3916614051145983, 2.393661405114598), 0.43908209439242735), ((6.57891690437401, 6.580916904374011), (6.324556584954415, 6.326556584954416), 2.2527423790588386), ((3.417083095625989, 3.419083095625989), (1.673443415045585, 1.6754434150455848), -0.8888502745309546)]
[INFO] [1753422427.712370396] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2750000953674316, 1.9529999494552612, 4.85699987411499])
[INFO] [1753422427.714108481] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.2750001  1.95299995 4.85699987]
[INFO] [1753422427.717639724] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422427.718519582] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422427.719383185] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422427.720126144] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422427.720912369] [solver_node]: 求解器返回结果: [((7.604338594885401, 7.606338594885401), (5.99659235713749, 5.998592357137491), 2.0098784211873237), ((2.3916614051145975, 2.3936614051145972), (2.00140764286251, 2.0034076428625096), -1.1317142324024694), ((8.322556584954414, 8.324556584954413), (3.417083095625989, 3.419083095625989), 0.681946052263942), ((1.6734434150455852, 1.675443415045585), (4.58091690437401, 4.58291690437401), -2.459646601325851), ((2.0014076428625094, 2.003407642862509), (5.606338594885402, 5.608338594885403), -2.702510559197366), ((7.994592357137489, 7.99659235713749), (2.3916614051145983, 2.393661405114598), 0.43908209439242735), ((6.57891690437401, 6.580916904374011), (6.324556584954415, 6.326556584954416), 2.2527423790588386), ((3.417083095625989, 3.419083095625989), (1.673443415045585, 1.6754434150455848), -0.8888502745309546)]
[INFO] [1753422427.810736997] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2750000953674316, 1.9529999494552612, 4.85699987411499])
[INFO] [1753422427.817056555] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.2750001  1.95299995 4.85699987]
[INFO] [1753422427.821990612] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422427.822968168] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422427.823746873] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422427.824909042] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422427.825769828] [solver_node]: 求解器返回结果: [((7.604338594885401, 7.606338594885401), (5.99659235713749, 5.998592357137491), 2.0098784211873237), ((2.3916614051145975, 2.3936614051145972), (2.00140764286251, 2.0034076428625096), -1.1317142324024694), ((8.322556584954414, 8.324556584954413), (3.417083095625989, 3.419083095625989), 0.681946052263942), ((1.6734434150455852, 1.675443415045585), (4.58091690437401, 4.58291690437401), -2.459646601325851), ((2.0014076428625094, 2.003407642862509), (5.606338594885402, 5.608338594885403), -2.702510559197366), ((7.994592357137489, 7.99659235713749), (2.3916614051145983, 2.393661405114598), 0.43908209439242735), ((6.57891690437401, 6.580916904374011), (6.324556584954415, 6.326556584954416), 2.2527423790588386), ((3.417083095625989, 3.419083095625989), (1.673443415045585, 1.6754434150455848), -0.8888502745309546)]
[INFO] [1753422427.912960959] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2750000953674316, 1.9529999494552612, 4.85699987411499])
[INFO] [1753422427.914487104] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.2750001  1.95299995 4.85699987]
[INFO] [1753422427.917661315] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422427.918564054] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422427.919392360] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422427.920160952] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422427.920958537] [solver_node]: 求解器返回结果: [((7.604338594885401, 7.606338594885401), (5.99659235713749, 5.998592357137491), 2.0098784211873237), ((2.3916614051145975, 2.3936614051145972), (2.00140764286251, 2.0034076428625096), -1.1317142324024694), ((8.322556584954414, 8.324556584954413), (3.417083095625989, 3.419083095625989), 0.681946052263942), ((1.6734434150455852, 1.675443415045585), (4.58091690437401, 4.58291690437401), -2.459646601325851), ((2.0014076428625094, 2.003407642862509), (5.606338594885402, 5.608338594885403), -2.702510559197366), ((7.994592357137489, 7.99659235713749), (2.3916614051145983, 2.393661405114598), 0.43908209439242735), ((6.57891690437401, 6.580916904374011), (6.324556584954415, 6.326556584954416), 2.2527423790588386), ((3.417083095625989, 3.419083095625989), (1.673443415045585, 1.6754434150455848), -0.8888502745309546)]
[INFO] [1753422428.011128964] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2750000953674316, 1.9529999494552612, 4.85699987411499])
[INFO] [1753422428.012805384] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.2750001  1.95299995 4.85699987]
[INFO] [1753422428.016854910] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422428.018273596] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422428.019190159] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422428.020216165] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422428.021112440] [solver_node]: 求解器返回结果: [((7.604338594885401, 7.606338594885401), (5.99659235713749, 5.998592357137491), 2.0098784211873237), ((2.3916614051145975, 2.3936614051145972), (2.00140764286251, 2.0034076428625096), -1.1317142324024694), ((8.322556584954414, 8.324556584954413), (3.417083095625989, 3.419083095625989), 0.681946052263942), ((1.6734434150455852, 1.675443415045585), (4.58091690437401, 4.58291690437401), -2.459646601325851), ((2.0014076428625094, 2.003407642862509), (5.606338594885402, 5.608338594885403), -2.702510559197366), ((7.994592357137489, 7.99659235713749), (2.3916614051145983, 2.393661405114598), 0.43908209439242735), ((6.57891690437401, 6.580916904374011), (6.324556584954415, 6.326556584954416), 2.2527423790588386), ((3.417083095625989, 3.419083095625989), (1.673443415045585, 1.6754434150455848), -0.8888502745309546)]
[INFO] [1753422428.110598597] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2750000953674316, 1.9529999494552612, 4.85699987411499])
[INFO] [1753422428.112163174] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.2750001  1.95299995 4.85699987]
[INFO] [1753422428.115182855] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422428.116017368] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422428.116771688] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422428.117508568] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422428.118890069] [solver_node]: 求解器返回结果: [((7.604338594885401, 7.606338594885401), (5.99659235713749, 5.998592357137491), 2.0098784211873237), ((2.3916614051145975, 2.3936614051145972), (2.00140764286251, 2.0034076428625096), -1.1317142324024694), ((8.322556584954414, 8.324556584954413), (3.417083095625989, 3.419083095625989), 0.681946052263942), ((1.6734434150455852, 1.675443415045585), (4.58091690437401, 4.58291690437401), -2.459646601325851), ((2.0014076428625094, 2.003407642862509), (5.606338594885402, 5.608338594885403), -2.702510559197366), ((7.994592357137489, 7.99659235713749), (2.3916614051145983, 2.393661405114598), 0.43908209439242735), ((6.57891690437401, 6.580916904374011), (6.324556584954415, 6.326556584954416), 2.2527423790588386), ((3.417083095625989, 3.419083095625989), (1.673443415045585, 1.6754434150455848), -0.8888502745309546)]
[INFO] [1753422428.210480911] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2750000953674316, 1.9529999494552612, 4.85699987411499])
[INFO] [1753422428.212171187] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.2750001  1.95299995 4.85699987]
[INFO] [1753422428.216997210] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422428.219810389] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422428.220728393] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422428.221519802] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422428.222312906] [solver_node]: 求解器返回结果: [((7.604338594885401, 7.606338594885401), (5.99659235713749, 5.998592357137491), 2.0098784211873237), ((2.3916614051145975, 2.3936614051145972), (2.00140764286251, 2.0034076428625096), -1.1317142324024694), ((8.322556584954414, 8.324556584954413), (3.417083095625989, 3.419083095625989), 0.681946052263942), ((1.6734434150455852, 1.675443415045585), (4.58091690437401, 4.58291690437401), -2.459646601325851), ((2.0014076428625094, 2.003407642862509), (5.606338594885402, 5.608338594885403), -2.702510559197366), ((7.994592357137489, 7.99659235713749), (2.3916614051145983, 2.393661405114598), 0.43908209439242735), ((6.57891690437401, 6.580916904374011), (6.324556584954415, 6.326556584954416), 2.2527423790588386), ((3.417083095625989, 3.419083095625989), (1.673443415045585, 1.6754434150455848), -0.8888502745309546)]
[INFO] [1753422428.311544978] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2750000953674316, 1.9529999494552612, 4.85699987411499])
[INFO] [1753422428.312997969] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.2750001  1.95299995 4.85699987]
[INFO] [1753422428.315908239] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422428.316717088] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422428.317596947] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422428.318338178] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422428.319154132] [solver_node]: 求解器返回结果: [((7.604338594885401, 7.606338594885401), (5.99659235713749, 5.998592357137491), 2.0098784211873237), ((2.3916614051145975, 2.3936614051145972), (2.00140764286251, 2.0034076428625096), -1.1317142324024694), ((8.322556584954414, 8.324556584954413), (3.417083095625989, 3.419083095625989), 0.681946052263942), ((1.6734434150455852, 1.675443415045585), (4.58091690437401, 4.58291690437401), -2.459646601325851), ((2.0014076428625094, 2.003407642862509), (5.606338594885402, 5.608338594885403), -2.702510559197366), ((7.994592357137489, 7.99659235713749), (2.3916614051145983, 2.393661405114598), 0.43908209439242735), ((6.57891690437401, 6.580916904374011), (6.324556584954415, 6.326556584954416), 2.2527423790588386), ((3.417083095625989, 3.419083095625989), (1.673443415045585, 1.6754434150455848), -0.8888502745309546)]
[INFO] [1753422428.410407750] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2750000953674316, 1.9529999494552612, 4.85699987411499])
[INFO] [1753422428.411908006] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.2750001  1.95299995 4.85699987]
[INFO] [1753422428.414890822] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422428.416198914] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422428.417074868] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422428.417912230] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422428.418836730] [solver_node]: 求解器返回结果: [((7.604338594885401, 7.606338594885401), (5.99659235713749, 5.998592357137491), 2.0098784211873237), ((2.3916614051145975, 2.3936614051145972), (2.00140764286251, 2.0034076428625096), -1.1317142324024694), ((8.322556584954414, 8.324556584954413), (3.417083095625989, 3.419083095625989), 0.681946052263942), ((1.6734434150455852, 1.675443415045585), (4.58091690437401, 4.58291690437401), -2.459646601325851), ((2.0014076428625094, 2.003407642862509), (5.606338594885402, 5.608338594885403), -2.702510559197366), ((7.994592357137489, 7.99659235713749), (2.3916614051145983, 2.393661405114598), 0.43908209439242735), ((6.57891690437401, 6.580916904374011), (6.324556584954415, 6.326556584954416), 2.2527423790588386), ((3.417083095625989, 3.419083095625989), (1.673443415045585, 1.6754434150455848), -0.8888502745309546)]
[INFO] [1753422428.512532288] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2750000953674316, 1.9529999494552612, 4.85699987411499])
[INFO] [1753422428.514010207] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.2750001  1.95299995 4.85699987]
[INFO] [1753422428.517145954] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422428.518008724] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422428.518852742] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422428.519589718] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422428.520360838] [solver_node]: 求解器返回结果: [((7.604338594885401, 7.606338594885401), (5.99659235713749, 5.998592357137491), 2.0098784211873237), ((2.3916614051145975, 2.3936614051145972), (2.00140764286251, 2.0034076428625096), -1.1317142324024694), ((8.322556584954414, 8.324556584954413), (3.417083095625989, 3.419083095625989), 0.681946052263942), ((1.6734434150455852, 1.675443415045585), (4.58091690437401, 4.58291690437401), -2.459646601325851), ((2.0014076428625094, 2.003407642862509), (5.606338594885402, 5.608338594885403), -2.702510559197366), ((7.994592357137489, 7.99659235713749), (2.3916614051145983, 2.393661405114598), 0.43908209439242735), ((6.57891690437401, 6.580916904374011), (6.324556584954415, 6.326556584954416), 2.2527423790588386), ((3.417083095625989, 3.419083095625989), (1.673443415045585, 1.6754434150455848), -0.8888502745309546)]
[INFO] [1753422428.611043597] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2750000953674316, 1.9529999494552612, 4.85699987411499])
[INFO] [1753422428.612627567] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.2750001  1.95299995 4.85699987]
[INFO] [1753422428.615727696] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422428.616736358] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422428.617903711] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422428.619836296] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422428.620770524] [solver_node]: 求解器返回结果: [((7.604338594885401, 7.606338594885401), (5.99659235713749, 5.998592357137491), 2.0098784211873237), ((2.3916614051145975, 2.3936614051145972), (2.00140764286251, 2.0034076428625096), -1.1317142324024694), ((8.322556584954414, 8.324556584954413), (3.417083095625989, 3.419083095625989), 0.681946052263942), ((1.6734434150455852, 1.675443415045585), (4.58091690437401, 4.58291690437401), -2.459646601325851), ((2.0014076428625094, 2.003407642862509), (5.606338594885402, 5.608338594885403), -2.702510559197366), ((7.994592357137489, 7.99659235713749), (2.3916614051145983, 2.393661405114598), 0.43908209439242735), ((6.57891690437401, 6.580916904374011), (6.324556584954415, 6.326556584954416), 2.2527423790588386), ((3.417083095625989, 3.419083095625989), (1.673443415045585, 1.6754434150455848), -0.8888502745309546)]
[INFO] [1753422428.710712786] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2750000953674316, 1.9529999494552612, 4.85699987411499])
[INFO] [1753422428.712220594] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.2750001  1.95299995 4.85699987]
[INFO] [1753422428.715207794] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422428.716041924] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422428.716831732] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422428.717575812] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422428.718392950] [solver_node]: 求解器返回结果: [((7.604338594885401, 7.606338594885401), (5.99659235713749, 5.998592357137491), 2.0098784211873237), ((2.3916614051145975, 2.3936614051145972), (2.00140764286251, 2.0034076428625096), -1.1317142324024694), ((8.322556584954414, 8.324556584954413), (3.417083095625989, 3.419083095625989), 0.681946052263942), ((1.6734434150455852, 1.675443415045585), (4.58091690437401, 4.58291690437401), -2.459646601325851), ((2.0014076428625094, 2.003407642862509), (5.606338594885402, 5.608338594885403), -2.702510559197366), ((7.994592357137489, 7.99659235713749), (2.3916614051145983, 2.393661405114598), 0.43908209439242735), ((6.57891690437401, 6.580916904374011), (6.324556584954415, 6.326556584954416), 2.2527423790588386), ((3.417083095625989, 3.419083095625989), (1.673443415045585, 1.6754434150455848), -0.8888502745309546)]
[INFO] [1753422428.811033446] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2750000953674316, 1.9529999494552612, 4.85699987411499])
[INFO] [1753422428.812549350] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.2750001  1.95299995 4.85699987]
[INFO] [1753422428.815577190] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422428.816570523] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422428.817295531] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422428.818197022] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422428.819071056] [solver_node]: 求解器返回结果: [((7.604338594885401, 7.606338594885401), (5.99659235713749, 5.998592357137491), 2.0098784211873237), ((2.3916614051145975, 2.3936614051145972), (2.00140764286251, 2.0034076428625096), -1.1317142324024694), ((8.322556584954414, 8.324556584954413), (3.417083095625989, 3.419083095625989), 0.681946052263942), ((1.6734434150455852, 1.675443415045585), (4.58091690437401, 4.58291690437401), -2.459646601325851), ((2.0014076428625094, 2.003407642862509), (5.606338594885402, 5.608338594885403), -2.702510559197366), ((7.994592357137489, 7.99659235713749), (2.3916614051145983, 2.393661405114598), 0.43908209439242735), ((6.57891690437401, 6.580916904374011), (6.324556584954415, 6.326556584954416), 2.2527423790588386), ((3.417083095625989, 3.419083095625989), (1.673443415045585, 1.6754434150455848), -0.8888502745309546)]
[INFO] [1753422428.910542888] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.246999979019165, 1.9529999494552612, 4.860000133514404])
[INFO] [1753422428.912055048] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.24699998 1.95299995 4.86000013]
[INFO] [1753422428.914911492] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422428.915689525] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422428.916416612] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422428.917110963] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422428.917851235] [solver_node]: 求解器返回结果: [((7.624457248400498, 7.626457248400499), (5.991367378778176, 5.993367378778177), 2.005191141666831), ((2.371542751599503, 2.3735427515995027), (2.006632621221823, 2.008632621221823), -1.136401511922962), ((8.330271530981316, 8.332271530981314), (3.4378213167755662, 3.439821316775566), 0.6868531281562249), ((1.6657284690186849, 1.6677284690186847), (4.560178683224433, 4.562178683224434), -2.454739525433568), ((2.006632621221823, 2.008632621221823), (5.626457248400497, 5.6284572484004975), -2.7071978387178586), ((7.989367378778176, 7.991367378778176), (2.3715427515995016, 2.3735427515995013), 0.43439481487193454), ((6.558178683224432, 6.560178683224433), (6.332271530981315, 6.334271530981316), 2.2576494549511215), ((3.4378213167755662, 3.439821316775566), (1.6657284690186849, 1.6677284690186847), -0.8839431986386718)]
[INFO] [1753422429.011779086] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.246000051498413, 1.9520000219345093, 4.860000133514404])
[INFO] [1753422429.013651830] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.24600005 1.95200002 4.86000013]
[INFO] [1753422429.016565364] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422429.017352293] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422429.018063732] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422429.018763523] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422429.019513043] [solver_node]: 求解器返回结果: [((7.625187223713856, 7.6271872237138565), (5.9920972283352, 5.9940972283352005), 2.0050314116812187), ((2.3708127762861424, 2.372812776286142), (2.0059027716647995, 2.0079027716647992), -1.1365612419085747), ((8.330983743696365, 8.332983743696364), (3.4376730025223234, 3.439673002522323), 0.6868144285681548), ((1.6650162563036353, 1.667016256303635), (4.560326997477676, 4.562326997477677), -2.4547782250216383), ((2.005902771664799, 2.007902771664799), (5.627187223713857, 5.629187223713858), -2.707357568703471), ((7.990097228335199, 7.9920972283352), (2.3708127762861424, 2.372812776286142), 0.4342350848863219), ((6.558326997477676, 6.560326997477676), (6.3329837436963645, 6.334983743696365), 2.2576107553630513), ((3.4376730025223234, 3.439673002522323), (1.6650162563036348, 1.6670162563036346), -0.8839818982267419)]
[INFO] [1753422429.110455072] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.244999885559082, 1.9520000219345093, 4.861000061035156])
[INFO] [1753422429.111903391] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.24499989 1.95200002 4.86100006]
[INFO] [1753422429.114784860] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422429.115591245] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422429.116347229] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422429.117054892] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422429.117817724] [solver_node]: 求解器返回结果: [((7.625835525086928, 7.627835525086929), (5.9918378884971695, 5.99383788849717), 2.0047975693868167), ((2.370164474913071, 2.372164474913071), (2.00616211150283, 2.0081621115028296), -1.1367950842029764), ((8.331261763660525, 8.333261763660524), (3.438983317379845, 3.4409833173798448), 0.6869908648775551), ((1.6647382363394763, 1.666738236339476), (4.559016682620155, 4.5610166826201555), -2.454601788712238), ((2.00616211150283, 2.0081621115028296), (5.627835525086929, 5.629835525086929), -2.707591410997873), ((7.98983788849717, 7.99183788849717), (2.3701644749130706, 2.3721644749130704), 0.4340012425919202), ((6.557016682620154, 6.559016682620155), (6.333261763660524, 6.335261763660525), 2.2577871916724517), ((3.4389833173798454, 3.440983317379845), (1.6647382363394758, 1.6667382363394756), -0.8838054619173413)]
[INFO] [1753422429.211196701] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.244999885559082, 1.9520000219345093, 4.861000061035156])
[INFO] [1753422429.212715005] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.24499989 1.95200002 4.86100006]
[INFO] [1753422429.215678364] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422429.216470285] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422429.217181820] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422429.217879051] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422429.218626715] [solver_node]: 求解器返回结果: [((7.625835525086928, 7.627835525086929), (5.9918378884971695, 5.99383788849717), 2.0047975693868167), ((2.370164474913071, 2.372164474913071), (2.00616211150283, 2.0081621115028296), -1.1367950842029764), ((8.331261763660525, 8.333261763660524), (3.438983317379845, 3.4409833173798448), 0.6869908648775551), ((1.6647382363394763, 1.666738236339476), (4.559016682620155, 4.5610166826201555), -2.454601788712238), ((2.00616211150283, 2.0081621115028296), (5.627835525086929, 5.629835525086929), -2.707591410997873), ((7.98983788849717, 7.99183788849717), (2.3701644749130706, 2.3721644749130704), 0.4340012425919202), ((6.557016682620154, 6.559016682620155), (6.333261763660524, 6.335261763660525), 2.2577871916724517), ((3.4389833173798454, 3.440983317379845), (1.6647382363394758, 1.6667382363394756), -0.8838054619173413)]
[INFO] [1753422429.310489307] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.244999885559082, 1.9520000219345093, 4.861000061035156])
[INFO] [1753422429.312014236] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.24499989 1.95200002 4.86100006]
[INFO] [1753422429.315810668] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422429.316745632] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422429.318036732] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422429.318826765] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422429.319588061] [solver_node]: 求解器返回结果: [((7.625835525086928, 7.627835525086929), (5.9918378884971695, 5.99383788849717), 2.0047975693868167), ((2.370164474913071, 2.372164474913071), (2.00616211150283, 2.0081621115028296), -1.1367950842029764), ((8.331261763660525, 8.333261763660524), (3.438983317379845, 3.4409833173798448), 0.6869908648775551), ((1.6647382363394763, 1.666738236339476), (4.559016682620155, 4.5610166826201555), -2.454601788712238), ((2.00616211150283, 2.0081621115028296), (5.627835525086929, 5.629835525086929), -2.707591410997873), ((7.98983788849717, 7.99183788849717), (2.3701644749130706, 2.3721644749130704), 0.4340012425919202), ((6.557016682620154, 6.559016682620155), (6.333261763660524, 6.335261763660525), 2.2577871916724517), ((3.4389833173798454, 3.440983317379845), (1.6647382363394758, 1.6667382363394756), -0.8838054619173413)]
[INFO] [1753422429.410963539] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.244999885559082, 1.9520000219345093, 4.861000061035156])
[INFO] [1753422429.413386022] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.24499989 1.95200002 4.86100006]
[INFO] [1753422429.416605611] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422429.417428732] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422429.418159372] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422429.418890459] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422429.419647787] [solver_node]: 求解器返回结果: [((7.625835525086928, 7.627835525086929), (5.9918378884971695, 5.99383788849717), 2.0047975693868167), ((2.370164474913071, 2.372164474913071), (2.00616211150283, 2.0081621115028296), -1.1367950842029764), ((8.331261763660525, 8.333261763660524), (3.438983317379845, 3.4409833173798448), 0.6869908648775551), ((1.6647382363394763, 1.666738236339476), (4.559016682620155, 4.5610166826201555), -2.454601788712238), ((2.00616211150283, 2.0081621115028296), (5.627835525086929, 5.629835525086929), -2.707591410997873), ((7.98983788849717, 7.99183788849717), (2.3701644749130706, 2.3721644749130704), 0.4340012425919202), ((6.557016682620154, 6.559016682620155), (6.333261763660524, 6.335261763660525), 2.2577871916724517), ((3.4389833173798454, 3.440983317379845), (1.6647382363394758, 1.6667382363394756), -0.8838054619173413)]
[INFO] [1753422429.511585262] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.244999885559082, 1.9559999704360962, 4.861000061035156])
[INFO] [1753422429.513572600] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.24499989 1.95599997 4.86100006]
[INFO] [1753422429.516850685] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422429.517697967] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422429.518577090] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422429.519398164] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422429.520196965] [solver_node]: 求解器返回结果: [((7.625835525086928, 7.627835525086929), (5.988208773314466, 5.990208773314467), 2.0047975693868167), ((2.370164474913071, 2.372164474913071), (2.0097912266855333, 2.011791226685533), -1.1367950842029764), ((8.329526910567223, 8.331526910567222), (3.442277344496098, 3.444277344496098), 0.6878506538921347), ((1.666473089432778, 1.6684730894327777), (4.555722655503899, 4.5577226555039), -2.4537419996976584), ((2.0097912266855333, 2.011791226685533), (5.627835525086929, 5.629835525086929), -2.707591410997873), ((7.986208773314465, 7.988208773314466), (2.3701644749130706, 2.3721644749130704), 0.4340012425919202), ((6.553722655503901, 6.555722655503902), (6.331526910567222, 6.3335269105672225), 2.2586469806870313), ((3.4422773444960986, 3.4442773444960983), (1.666473089432778, 1.6684730894327777), -0.8829456729027618)]
[INFO] [1753422429.611632252] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.244999885559082, 1.9559999704360962, 4.861000061035156])
[INFO] [1753422429.613198909] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.24499989 1.95599997 4.86100006]
[INFO] [1753422429.616184701] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422429.616975982] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422429.617685821] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422429.618399084] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422429.619204733] [solver_node]: 求解器返回结果: [((7.625835525086928, 7.627835525086929), (5.988208773314466, 5.990208773314467), 2.0047975693868167), ((2.370164474913071, 2.372164474913071), (2.0097912266855333, 2.011791226685533), -1.1367950842029764), ((8.329526910567223, 8.331526910567222), (3.442277344496098, 3.444277344496098), 0.6878506538921347), ((1.666473089432778, 1.6684730894327777), (4.555722655503899, 4.5577226555039), -2.4537419996976584), ((2.0097912266855333, 2.011791226685533), (5.627835525086929, 5.629835525086929), -2.707591410997873), ((7.986208773314465, 7.988208773314466), (2.3701644749130706, 2.3721644749130704), 0.4340012425919202), ((6.553722655503901, 6.555722655503902), (6.331526910567222, 6.3335269105672225), 2.2586469806870313), ((3.4422773444960986, 3.4442773444960983), (1.666473089432778, 1.6684730894327777), -0.8829456729027618)]
[INFO] [1753422429.712367801] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.244999885559082, 1.9559999704360962, 4.861000061035156])
[INFO] [1753422429.713942714] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.24499989 1.95599997 4.86100006]
[INFO] [1753422429.716976859] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422429.717802733] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422429.718544124] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422429.719284076] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422429.720042108] [solver_node]: 求解器返回结果: [((7.625835525086928, 7.627835525086929), (5.988208773314466, 5.990208773314467), 2.0047975693868167), ((2.370164474913071, 2.372164474913071), (2.0097912266855333, 2.011791226685533), -1.1367950842029764), ((8.329526910567223, 8.331526910567222), (3.442277344496098, 3.444277344496098), 0.6878506538921347), ((1.666473089432778, 1.6684730894327777), (4.555722655503899, 4.5577226555039), -2.4537419996976584), ((2.0097912266855333, 2.011791226685533), (5.627835525086929, 5.629835525086929), -2.707591410997873), ((7.986208773314465, 7.988208773314466), (2.3701644749130706, 2.3721644749130704), 0.4340012425919202), ((6.553722655503901, 6.555722655503902), (6.331526910567222, 6.3335269105672225), 2.2586469806870313), ((3.4422773444960986, 3.4442773444960983), (1.666473089432778, 1.6684730894327777), -0.8829456729027618)]
[INFO] [1753422429.810621409] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.244999885559082, 1.9559999704360962, 4.861000061035156])
[INFO] [1753422429.812287877] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.24499989 1.95599997 4.86100006]
[INFO] [1753422429.815286276] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422429.816105430] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422429.816846822] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422429.818882417] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422429.819902023] [solver_node]: 求解器返回结果: [((7.625835525086928, 7.627835525086929), (5.988208773314466, 5.990208773314467), 2.0047975693868167), ((2.370164474913071, 2.372164474913071), (2.0097912266855333, 2.011791226685533), -1.1367950842029764), ((8.329526910567223, 8.331526910567222), (3.442277344496098, 3.444277344496098), 0.6878506538921347), ((1.666473089432778, 1.6684730894327777), (4.555722655503899, 4.5577226555039), -2.4537419996976584), ((2.0097912266855333, 2.011791226685533), (5.627835525086929, 5.629835525086929), -2.707591410997873), ((7.986208773314465, 7.988208773314466), (2.3701644749130706, 2.3721644749130704), 0.4340012425919202), ((6.553722655503901, 6.555722655503902), (6.331526910567222, 6.3335269105672225), 2.2586469806870313), ((3.4422773444960986, 3.4442773444960983), (1.666473089432778, 1.6684730894327777), -0.8829456729027618)]
[INFO] [1753422429.912141807] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.244999885559082, 1.9559999704360962, 4.861000061035156])
[INFO] [1753422429.913666127] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.24499989 1.95599997 4.86100006]
[INFO] [1753422429.916742801] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422429.917580003] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422429.918353491] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422429.919153380] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422429.919954933] [solver_node]: 求解器返回结果: [((7.625835525086928, 7.627835525086929), (5.988208773314466, 5.990208773314467), 2.0047975693868167), ((2.370164474913071, 2.372164474913071), (2.0097912266855333, 2.011791226685533), -1.1367950842029764), ((8.329526910567223, 8.331526910567222), (3.442277344496098, 3.444277344496098), 0.6878506538921347), ((1.666473089432778, 1.6684730894327777), (4.555722655503899, 4.5577226555039), -2.4537419996976584), ((2.0097912266855333, 2.011791226685533), (5.627835525086929, 5.629835525086929), -2.707591410997873), ((7.986208773314465, 7.988208773314466), (2.3701644749130706, 2.3721644749130704), 0.4340012425919202), ((6.553722655503901, 6.555722655503902), (6.331526910567222, 6.3335269105672225), 2.2586469806870313), ((3.4422773444960986, 3.4442773444960983), (1.666473089432778, 1.6684730894327777), -0.8829456729027618)]
[INFO] [1753422430.010540058] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.244999885559082, 1.9539999961853027, 4.861000061035156])
[INFO] [1753422430.012083803] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.24499989 1.954      4.86100006]
[INFO] [1753422430.015084155] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422430.015937293] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422430.016722846] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422430.017478094] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422430.018296095] [solver_node]: 求解器返回结果: [((7.625835525086928, 7.627835525086929), (5.990023330905818, 5.992023330905819), 2.0047975693868167), ((2.370164474913071, 2.372164474913071), (2.0079766690941816, 2.0099766690941814), -1.1367950842029764), ((8.330393876955856, 8.332393876955855), (3.440631230269691, 3.442631230269691), 0.6874209111149776), ((1.6656061230441441, 1.667606123044144), (4.557368769730309, 4.55936876973031), -2.4541717424748155), ((2.0079766690941816, 2.0099766690941814), (5.627835525086929, 5.629835525086929), -2.707591410997873), ((7.9880233309058175, 7.990023330905818), (2.3701644749130706, 2.3721644749130704), 0.4340012425919202), ((6.5553687697303085, 6.557368769730309), (6.332393876955856, 6.334393876955857), 2.258217237909874), ((3.440631230269691, 3.442631230269691), (1.6656061230441437, 1.6676061230441435), -0.8833754156799188)]
[INFO] [1753422430.112064041] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.244999885559082, 1.9539999961853027, 4.861000061035156])
[INFO] [1753422430.113584074] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.24499989 1.954      4.86100006]
[INFO] [1753422430.117226839] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422430.118110666] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422430.118866906] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422430.119867983] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422430.120799875] [solver_node]: 求解器返回结果: [((7.625835525086928, 7.627835525086929), (5.990023330905818, 5.992023330905819), 2.0047975693868167), ((2.370164474913071, 2.372164474913071), (2.0079766690941816, 2.0099766690941814), -1.1367950842029764), ((8.330393876955856, 8.332393876955855), (3.440631230269691, 3.442631230269691), 0.6874209111149776), ((1.6656061230441441, 1.667606123044144), (4.557368769730309, 4.55936876973031), -2.4541717424748155), ((2.0079766690941816, 2.0099766690941814), (5.627835525086929, 5.629835525086929), -2.707591410997873), ((7.9880233309058175, 7.990023330905818), (2.3701644749130706, 2.3721644749130704), 0.4340012425919202), ((6.5553687697303085, 6.557368769730309), (6.332393876955856, 6.334393876955857), 2.258217237909874), ((3.440631230269691, 3.442631230269691), (1.6656061230441437, 1.6676061230441435), -0.8833754156799188)]
[INFO] [1753422430.210465174] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.244999885559082, 1.9539999961853027, 4.861000061035156])
[INFO] [1753422430.212062200] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.24499989 1.954      4.86100006]
[INFO] [1753422430.215210427] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422430.216059405] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422430.216768668] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422430.217463499] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422430.218212922] [solver_node]: 求解器返回结果: [((7.625835525086928, 7.627835525086929), (5.990023330905818, 5.992023330905819), 2.0047975693868167), ((2.370164474913071, 2.372164474913071), (2.0079766690941816, 2.0099766690941814), -1.1367950842029764), ((8.330393876955856, 8.332393876955855), (3.440631230269691, 3.442631230269691), 0.6874209111149776), ((1.6656061230441441, 1.667606123044144), (4.557368769730309, 4.55936876973031), -2.4541717424748155), ((2.0079766690941816, 2.0099766690941814), (5.627835525086929, 5.629835525086929), -2.707591410997873), ((7.9880233309058175, 7.990023330905818), (2.3701644749130706, 2.3721644749130704), 0.4340012425919202), ((6.5553687697303085, 6.557368769730309), (6.332393876955856, 6.334393876955857), 2.258217237909874), ((3.440631230269691, 3.442631230269691), (1.6656061230441437, 1.6676061230441435), -0.8833754156799188)]
[INFO] [1753422430.311861026] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.244999885559082, 1.9539999961853027, 4.861000061035156])
[INFO] [1753422430.313670312] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.24499989 1.954      4.86100006]
[INFO] [1753422430.316642759] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422430.317477401] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422430.318319243] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422430.319068571] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422430.319827883] [solver_node]: 求解器返回结果: [((7.625835525086928, 7.627835525086929), (5.990023330905818, 5.992023330905819), 2.0047975693868167), ((2.370164474913071, 2.372164474913071), (2.0079766690941816, 2.0099766690941814), -1.1367950842029764), ((8.330393876955856, 8.332393876955855), (3.440631230269691, 3.442631230269691), 0.6874209111149776), ((1.6656061230441441, 1.667606123044144), (4.557368769730309, 4.55936876973031), -2.4541717424748155), ((2.0079766690941816, 2.0099766690941814), (5.627835525086929, 5.629835525086929), -2.707591410997873), ((7.9880233309058175, 7.990023330905818), (2.3701644749130706, 2.3721644749130704), 0.4340012425919202), ((6.5553687697303085, 6.557368769730309), (6.332393876955856, 6.334393876955857), 2.258217237909874), ((3.440631230269691, 3.442631230269691), (1.6656061230441437, 1.6676061230441435), -0.8833754156799188)]
[INFO] [1753422430.412958984] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.244999885559082, 1.9539999961853027, 4.861000061035156])
[INFO] [1753422430.414513769] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.24499989 1.954      4.86100006]
[INFO] [1753422430.417683116] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422430.418557599] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422430.419405137] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422430.420175073] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422430.420966002] [solver_node]: 求解器返回结果: [((7.625835525086928, 7.627835525086929), (5.990023330905818, 5.992023330905819), 2.0047975693868167), ((2.370164474913071, 2.372164474913071), (2.0079766690941816, 2.0099766690941814), -1.1367950842029764), ((8.330393876955856, 8.332393876955855), (3.440631230269691, 3.442631230269691), 0.6874209111149776), ((1.6656061230441441, 1.667606123044144), (4.557368769730309, 4.55936876973031), -2.4541717424748155), ((2.0079766690941816, 2.0099766690941814), (5.627835525086929, 5.629835525086929), -2.707591410997873), ((7.9880233309058175, 7.990023330905818), (2.3701644749130706, 2.3721644749130704), 0.4340012425919202), ((6.5553687697303085, 6.557368769730309), (6.332393876955856, 6.334393876955857), 2.258217237909874), ((3.440631230269691, 3.442631230269691), (1.6656061230441437, 1.6676061230441435), -0.8833754156799188)]
[INFO] [1753422430.511089710] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.244999885559082, 1.9539999961853027, 4.861000061035156])
[INFO] [1753422430.512551085] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.24499989 1.954      4.86100006]
[INFO] [1753422430.515512428] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422430.516336510] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422430.517292018] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422430.520290834] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422430.521436266] [solver_node]: 求解器返回结果: [((7.625835525086928, 7.627835525086929), (5.990023330905818, 5.992023330905819), 2.0047975693868167), ((2.370164474913071, 2.372164474913071), (2.0079766690941816, 2.0099766690941814), -1.1367950842029764), ((8.330393876955856, 8.332393876955855), (3.440631230269691, 3.442631230269691), 0.6874209111149776), ((1.6656061230441441, 1.667606123044144), (4.557368769730309, 4.55936876973031), -2.4541717424748155), ((2.0079766690941816, 2.0099766690941814), (5.627835525086929, 5.629835525086929), -2.707591410997873), ((7.9880233309058175, 7.990023330905818), (2.3701644749130706, 2.3721644749130704), 0.4340012425919202), ((6.5553687697303085, 6.557368769730309), (6.332393876955856, 6.334393876955857), 2.258217237909874), ((3.440631230269691, 3.442631230269691), (1.6656061230441437, 1.6676061230441435), -0.8833754156799188)]
[INFO] [1753422430.612751744] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.244999885559082, 1.9539999961853027, 4.861000061035156])
[INFO] [1753422430.614209567] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.24499989 1.954      4.86100006]
[INFO] [1753422430.617265408] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422430.618081233] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422430.618848642] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422430.619577201] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422430.620367522] [solver_node]: 求解器返回结果: [((7.625835525086928, 7.627835525086929), (5.990023330905818, 5.992023330905819), 2.0047975693868167), ((2.370164474913071, 2.372164474913071), (2.0079766690941816, 2.0099766690941814), -1.1367950842029764), ((8.330393876955856, 8.332393876955855), (3.440631230269691, 3.442631230269691), 0.6874209111149776), ((1.6656061230441441, 1.667606123044144), (4.557368769730309, 4.55936876973031), -2.4541717424748155), ((2.0079766690941816, 2.0099766690941814), (5.627835525086929, 5.629835525086929), -2.707591410997873), ((7.9880233309058175, 7.990023330905818), (2.3701644749130706, 2.3721644749130704), 0.4340012425919202), ((6.5553687697303085, 6.557368769730309), (6.332393876955856, 6.334393876955857), 2.258217237909874), ((3.440631230269691, 3.442631230269691), (1.6656061230441437, 1.6676061230441435), -0.8833754156799188)]
[INFO] [1753422430.710378140] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.244999885559082, 1.9539999961853027, 4.861000061035156])
[INFO] [1753422430.711876476] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.24499989 1.954      4.86100006]
[INFO] [1753422430.714814490] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422430.715680781] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422430.716427805] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422430.717161036] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422430.717961853] [solver_node]: 求解器返回结果: [((7.625835525086928, 7.627835525086929), (5.990023330905818, 5.992023330905819), 2.0047975693868167), ((2.370164474913071, 2.372164474913071), (2.0079766690941816, 2.0099766690941814), -1.1367950842029764), ((8.330393876955856, 8.332393876955855), (3.440631230269691, 3.442631230269691), 0.6874209111149776), ((1.6656061230441441, 1.667606123044144), (4.557368769730309, 4.55936876973031), -2.4541717424748155), ((2.0079766690941816, 2.0099766690941814), (5.627835525086929, 5.629835525086929), -2.707591410997873), ((7.9880233309058175, 7.990023330905818), (2.3701644749130706, 2.3721644749130704), 0.4340012425919202), ((6.5553687697303085, 6.557368769730309), (6.332393876955856, 6.334393876955857), 2.258217237909874), ((3.440631230269691, 3.442631230269691), (1.6656061230441437, 1.6676061230441435), -0.8833754156799188)]
[INFO] [1753422430.810658128] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.244999885559082, 1.9539999961853027, 4.861000061035156])
[INFO] [1753422430.812229426] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.24499989 1.954      4.86100006]
[INFO] [1753422430.815458710] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422430.817148570] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422430.817958475] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422430.818709723] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422430.819490124] [solver_node]: 求解器返回结果: [((7.625835525086928, 7.627835525086929), (5.990023330905818, 5.992023330905819), 2.0047975693868167), ((2.370164474913071, 2.372164474913071), (2.0079766690941816, 2.0099766690941814), -1.1367950842029764), ((8.330393876955856, 8.332393876955855), (3.440631230269691, 3.442631230269691), 0.6874209111149776), ((1.6656061230441441, 1.667606123044144), (4.557368769730309, 4.55936876973031), -2.4541717424748155), ((2.0079766690941816, 2.0099766690941814), (5.627835525086929, 5.629835525086929), -2.707591410997873), ((7.9880233309058175, 7.990023330905818), (2.3701644749130706, 2.3721644749130704), 0.4340012425919202), ((6.5553687697303085, 6.557368769730309), (6.332393876955856, 6.334393876955857), 2.258217237909874), ((3.440631230269691, 3.442631230269691), (1.6656061230441437, 1.6676061230441435), -0.8833754156799188)]
[INFO] [1753422430.912141182] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.247999906539917, 1.9539999961853027, 4.860000133514404])
[INFO] [1753422430.913675007] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.24799991 1.954      4.86000013]
[INFO] [1753422430.916658686] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422430.917474032] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422430.918235168] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422430.918959375] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422430.919713503] [solver_node]: 求解器返回结果: [((7.623727441781271, 7.6257274417812715), (5.990637580460112, 5.992637580460113), 2.0053508479819966), ((2.3722725582187283, 2.374272558218728), (2.007362419539887, 2.0093624195398867), -1.1362418056077968), ((8.329559270323726, 8.331559270323725), (3.437969608043179, 3.439969608043179), 0.6868918230902543), ((1.6664407296762738, 1.6684407296762735), (4.560030391956821, 4.562030391956822), -2.454700830499539), ((2.0073624195398865, 2.0093624195398863), (5.6257274417812715, 5.627727441781272), -2.707038132402693), ((7.988637580460112, 7.990637580460112), (2.372272558218729, 2.374272558218729), 0.4345545211871), ((6.55803039195682, 6.560030391956821), (6.331559270323726, 6.333559270323726), 2.257688149885151), ((3.437969608043179, 3.439969608043179), (1.666440729676274, 1.6684407296762738), -0.8839045037046422)]
[INFO] [1753422431.012186254] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.256999969482422, 1.9529999494552612, 4.857999801635742])
[INFO] [1753422431.013675917] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.25699997 1.95299995 4.8579998 ]
[INFO] [1753422431.016737358] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422431.018517556] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422431.019335462] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422431.020204056] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422431.020971784] [solver_node]: 求解器返回结果: [((7.6173324037911705, 7.619332403791171), (5.993307183635404, 5.995307183635405), 2.0069359403540017), ((2.37866759620883, 2.3806675962088297), (2.004692816364596, 2.0066928163645956), -1.1346567132357914), ((8.327500922970035, 8.329500922970034), (3.429807980093135, 3.4318079800931347), 0.6850938300737526), ((1.6684990770299657, 1.6704990770299655), (4.568192019906863, 4.570192019906863), -2.4564988235160405), ((2.004692816364596, 2.0066928163645956), (5.61933240379117, 5.621332403791171), -2.705453040030688), ((7.991307183635404, 7.993307183635404), (2.3786675962088286, 2.3806675962088284), 0.43613961355910524), ((6.566192019906864, 6.568192019906864), (6.329500922970035, 6.331500922970036), 2.255890156868649), ((3.429807980093135, 3.4318079800931347), (1.6684990770299657, 1.6704990770299655), -0.8857024967211439)]
[INFO] [1753422431.111394476] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2720000743865967, 1.9529999494552612, 4.857999801635742])
[INFO] [1753422431.112903628] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.27200007 1.95299995 4.8579998 ]
[INFO] [1753422431.115899820] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422431.116734302] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422431.117476365] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422431.118205277] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422431.119017230] [solver_node]: 求解器返回结果: [((7.606429933896697, 7.608429933896698), (5.99597458578354, 5.997974585783541), 2.009326276940996), ((2.389570066103302, 2.3915700661033017), (2.0020254142164595, 2.0040254142164593), -1.132266376648797), ((8.323376842118824, 8.325376842118823), (3.4197249946672708, 3.4217249946672705), 0.6824689939747826), ((1.6726231578811763, 1.674623157881176), (4.578275005332729, 4.580275005332729), -2.4591236596150106), ((2.002025414216459, 2.004025414216459), (5.608429933896698, 5.6104299338966985), -2.7030627034436936), ((7.99397458578354, 7.99597458578354), (2.389570066103302, 2.3915700661033017), 0.43852995014609947), ((6.576275005332729, 6.5782750053327295), (6.325376842118823, 6.327376842118824), 2.253265320769679), ((3.4197249946672708, 3.4217249946672705), (1.672623157881177, 1.6746231578811768), -0.8883273328201141)]
[INFO] [1753422431.212490419] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2939999103546143, 1.9529999494552612, 4.854000091552734])
[INFO] [1753422431.214093205] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.29399991 1.95299995 4.85400009]
[INFO] [1753422431.217801124] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422431.218729368] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422431.219507048] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422431.220255288] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422431.221035625] [solver_node]: 求解器返回结果: [((7.590853544250916, 7.592853544250917), (6.000234781929191, 6.002234781929191), 2.0131228866626056), ((2.405146455749082, 2.4071464557490816), (1.9977652180708092, 1.999765218070809), -1.1284697669271877), ((8.317396699709498, 8.319396699709497), (3.4025008555952616, 3.4045008555952614), 0.6786497251603465), ((1.6786033002905016, 1.6806033002905014), (4.595499144404737, 4.597499144404738), -2.4629429284294466), ((1.9977652180708088, 1.9997652180708085), (5.592853544250916, 5.594853544250917), -2.699266093722084), ((7.99823478192919, 8.00023478192919), (2.4051464557490827, 2.4071464557490825), 0.44232655986770897), ((6.5934991444047375, 6.595499144404738), (6.319396699709498, 6.321396699709498), 2.249446051955243), ((3.4025008555952625, 3.4045008555952623), (1.6786033002905019, 1.6806033002905016), -0.8921466016345502)]
[INFO] [1753422431.312209436] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2939999103546143, 1.9529999494552612, 4.8480000495910645])
[INFO] [1753422431.314006850] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.29399991 1.95299995 4.84800005]
[INFO] [1753422431.317283368] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422431.318142010] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422431.318923563] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422431.319693499] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422431.320757106] [solver_node]: 求解器返回结果: [((7.591372203123165, 7.593372203123166), (6.000743346880513, 6.002743346880513), 2.0135744011627006), ((2.404627796876835, 2.4066277968768346), (1.9972566531194873, 1.999256653119487), -1.1280182524270923), ((8.317396699709498, 8.319396699709497), (3.3987343398569663, 3.400734339856966), 0.6786497251603465), ((1.6786033002905016, 1.6806033002905014), (4.599265660143033, 4.601265660143033), -2.4629429284294466), ((1.9972566531194869, 1.9992566531194866), (5.593372203123165, 5.595372203123166), -2.6988145792219886), ((7.998743346880512, 8.000743346880512), (2.404627796876835, 2.4066277968768346), 0.44277807436780436), ((6.597265660143033, 6.5992656601430335), (6.319396699709498, 6.321396699709498), 2.249446051955243), ((3.398734339856967, 3.400734339856967), (1.6786033002905019, 1.6806033002905016), -0.8921466016345502)]
[INFO] [1753422431.410442822] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2939999103546143, 1.9529999494552612, 4.8480000495910645])
[INFO] [1753422431.412017031] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.29399991 1.95299995 4.84800005]
[INFO] [1753422431.415145610] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422431.416027869] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422431.416798125] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422431.417563037] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422431.418371183] [solver_node]: 求解器返回结果: [((7.591372203123165, 7.593372203123166), (6.000743346880513, 6.002743346880513), 2.0135744011627006), ((2.404627796876835, 2.4066277968768346), (1.9972566531194873, 1.999256653119487), -1.1280182524270923), ((8.317396699709498, 8.319396699709497), (3.3987343398569663, 3.400734339856966), 0.6786497251603465), ((1.6786033002905016, 1.6806033002905014), (4.599265660143033, 4.601265660143033), -2.4629429284294466), ((1.9972566531194869, 1.9992566531194866), (5.593372203123165, 5.595372203123166), -2.6988145792219886), ((7.998743346880512, 8.000743346880512), (2.404627796876835, 2.4066277968768346), 0.44277807436780436), ((6.597265660143033, 6.5992656601430335), (6.319396699709498, 6.321396699709498), 2.249446051955243), ((3.398734339856967, 3.400734339856967), (1.6786033002905019, 1.6806033002905016), -0.8921466016345502)]
[INFO] [1753422431.510583128] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2939999103546143, 1.9479999542236328, 4.8480000495910645])
[INFO] [1753422431.512132953] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.29399991 1.94799995 4.84800005]
[INFO] [1753422431.515777095] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422431.519821117] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422431.523924852] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422431.526956661] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422431.528720314] [solver_node]: 求解器返回结果: [((7.591372203123165, 7.593372203123166), (6.005261166981652, 6.007261166981652), 2.0135744011627006), ((2.404627796876835, 2.4066277968768346), (1.992738833018348, 1.9947388330183478), -1.1280182524270923), ((8.319617676290882, 8.321617676290881), (3.3946030699759335, 3.3966030699759333), 0.6775774883867651), ((1.676382323709118, 1.6783823237091178), (4.603396930024064, 4.605396930024065), -2.464015165203028), ((1.9927388330183475, 1.9947388330183473), (5.593372203123165, 5.595372203123166), -2.6988145792219886), ((8.003261166981652, 8.00526116698165), (2.404627796876835, 2.4066277968768346), 0.44277807436780436), ((6.601396930024065, 6.603396930024066), (6.321617676290882, 6.3236176762908825), 2.2483738151816617), ((3.394603069975934, 3.3966030699759338), (1.6763823237091184, 1.6783823237091182), -0.8932188384081314)]
[INFO] [1753422431.610998417] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2939999103546143, 1.9479999542236328, 4.8480000495910645])
[INFO] [1753422431.612583602] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.29399991 1.94799995 4.84800005]
[INFO] [1753422431.615508240] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422431.616315298] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422431.617027377] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422431.617736384] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422431.618542609] [solver_node]: 求解器返回结果: [((7.591372203123165, 7.593372203123166), (6.005261166981652, 6.007261166981652), 2.0135744011627006), ((2.404627796876835, 2.4066277968768346), (1.992738833018348, 1.9947388330183478), -1.1280182524270923), ((8.319617676290882, 8.321617676290881), (3.3946030699759335, 3.3966030699759333), 0.6775774883867651), ((1.676382323709118, 1.6783823237091178), (4.603396930024064, 4.605396930024065), -2.464015165203028), ((1.9927388330183475, 1.9947388330183473), (5.593372203123165, 5.595372203123166), -2.6988145792219886), ((8.003261166981652, 8.00526116698165), (2.404627796876835, 2.4066277968768346), 0.44277807436780436), ((6.601396930024065, 6.603396930024066), (6.321617676290882, 6.3236176762908825), 2.2483738151816617), ((3.394603069975934, 3.3966030699759338), (1.6763823237091184, 1.6783823237091182), -0.8932188384081314)]
[INFO] [1753422431.712765093] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2939999103546143, 1.9479999542236328, 4.8480000495910645])
[INFO] [1753422431.714308710] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.29399991 1.94799995 4.84800005]
[INFO] [1753422431.719010634] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422431.720089761] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422431.721030165] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422431.722089004] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422431.723429384] [solver_node]: 求解器返回结果: [((7.591372203123165, 7.593372203123166), (6.005261166981652, 6.007261166981652), 2.0135744011627006), ((2.404627796876835, 2.4066277968768346), (1.992738833018348, 1.9947388330183478), -1.1280182524270923), ((8.319617676290882, 8.321617676290881), (3.3946030699759335, 3.3966030699759333), 0.6775774883867651), ((1.676382323709118, 1.6783823237091178), (4.603396930024064, 4.605396930024065), -2.464015165203028), ((1.9927388330183475, 1.9947388330183473), (5.593372203123165, 5.595372203123166), -2.6988145792219886), ((8.003261166981652, 8.00526116698165), (2.404627796876835, 2.4066277968768346), 0.44277807436780436), ((6.601396930024065, 6.603396930024066), (6.321617676290882, 6.3236176762908825), 2.2483738151816617), ((3.394603069975934, 3.3966030699759338), (1.6763823237091184, 1.6783823237091182), -0.8932188384081314)]
[INFO] [1753422431.810843948] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2939999103546143, 1.9479999542236328, 4.8480000495910645])
[INFO] [1753422431.812331660] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.29399991 1.94799995 4.84800005]
[INFO] [1753422431.815378316] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422431.816213278] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422431.816951342] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422431.817673533] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422431.818427053] [solver_node]: 求解器返回结果: [((7.591372203123165, 7.593372203123166), (6.005261166981652, 6.007261166981652), 2.0135744011627006), ((2.404627796876835, 2.4066277968768346), (1.992738833018348, 1.9947388330183478), -1.1280182524270923), ((8.319617676290882, 8.321617676290881), (3.3946030699759335, 3.3966030699759333), 0.6775774883867651), ((1.676382323709118, 1.6783823237091178), (4.603396930024064, 4.605396930024065), -2.464015165203028), ((1.9927388330183475, 1.9947388330183473), (5.593372203123165, 5.595372203123166), -2.6988145792219886), ((8.003261166981652, 8.00526116698165), (2.404627796876835, 2.4066277968768346), 0.44277807436780436), ((6.601396930024065, 6.603396930024066), (6.321617676290882, 6.3236176762908825), 2.2483738151816617), ((3.394603069975934, 3.3966030699759338), (1.6763823237091184, 1.6783823237091182), -0.8932188384081314)]
[INFO] [1753422431.913830619] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2939999103546143, 1.9479999542236328, 4.8480000495910645])
[INFO] [1753422431.916023658] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.29399991 1.94799995 4.84800005]
[INFO] [1753422431.919274255] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422431.920164802] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422431.920950642] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422431.921672866] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422431.922445426] [solver_node]: 求解器返回结果: [((7.591372203123165, 7.593372203123166), (6.005261166981652, 6.007261166981652), 2.0135744011627006), ((2.404627796876835, 2.4066277968768346), (1.992738833018348, 1.9947388330183478), -1.1280182524270923), ((8.319617676290882, 8.321617676290881), (3.3946030699759335, 3.3966030699759333), 0.6775774883867651), ((1.676382323709118, 1.6783823237091178), (4.603396930024064, 4.605396930024065), -2.464015165203028), ((1.9927388330183475, 1.9947388330183473), (5.593372203123165, 5.595372203123166), -2.6988145792219886), ((8.003261166981652, 8.00526116698165), (2.404627796876835, 2.4066277968768346), 0.44277807436780436), ((6.601396930024065, 6.603396930024066), (6.321617676290882, 6.3236176762908825), 2.2483738151816617), ((3.394603069975934, 3.3966030699759338), (1.6763823237091184, 1.6783823237091182), -0.8932188384081314)]
[INFO] [1753422432.010545860] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2939999103546143, 1.940999984741211, 4.8480000495910645])
[INFO] [1753422432.012002691] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.29399991 1.94099998 4.84800005]
[INFO] [1753422432.014979171] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422432.015759635] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422432.016492451] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422432.017440759] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422432.018220456] [solver_node]: 求解器返回结果: [((7.591372203123165, 7.593372203123166), (6.01158609358058, 6.013586093580581), 2.0135744011627006), ((2.404627796876835, 2.4066277968768346), (1.9864139064194188, 1.9884139064194186), -1.1280182524270923), ((8.32273673351881, 8.324736733518808), (3.3888007337788695, 3.3908007337788693), 0.6760732477579636), ((1.6732632664811895, 1.6752632664811893), (4.60919926622113, 4.6111992662211305), -2.4655194058318295), ((1.9864139064194182, 1.988413906419418), (5.593372203123165, 5.595372203123166), -2.6988145792219886), ((8.009586093580582, 8.011586093580581), (2.404627796876835, 2.4066277968768346), 0.44277807436780436), ((6.60719926622113, 6.609199266221131), (6.32473673351881, 6.3267367335188105), 2.24686957455286), ((3.3888007337788695, 3.3908007337788693), (1.6732632664811902, 1.67526326648119), -0.8947230790369328)]
[INFO] [1753422432.112109110] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2939999103546143, 1.940999984741211, 4.8480000495910645])
[INFO] [1753422432.113790778] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.29399991 1.94099998 4.84800005]
[INFO] [1753422432.117164770] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422432.118082485] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422432.118913927] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422432.119700152] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422432.120500393] [solver_node]: 求解器返回结果: [((7.591372203123165, 7.593372203123166), (6.01158609358058, 6.013586093580581), 2.0135744011627006), ((2.404627796876835, 2.4066277968768346), (1.9864139064194188, 1.9884139064194186), -1.1280182524270923), ((8.32273673351881, 8.324736733518808), (3.3888007337788695, 3.3908007337788693), 0.6760732477579636), ((1.6732632664811895, 1.6752632664811893), (4.60919926622113, 4.6111992662211305), -2.4655194058318295), ((1.9864139064194182, 1.988413906419418), (5.593372203123165, 5.595372203123166), -2.6988145792219886), ((8.009586093580582, 8.011586093580581), (2.404627796876835, 2.4066277968768346), 0.44277807436780436), ((6.60719926622113, 6.609199266221131), (6.32473673351881, 6.3267367335188105), 2.24686957455286), ((3.3888007337788695, 3.3908007337788693), (1.6732632664811902, 1.67526326648119), -0.8947230790369328)]
[INFO] [1753422432.210544901] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2939999103546143, 1.940999984741211, 4.8480000495910645])
[INFO] [1753422432.212142215] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.29399991 1.94099998 4.84800005]
[INFO] [1753422432.215141735] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422432.215942488] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422432.216669383] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422432.217395735] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422432.218156391] [solver_node]: 求解器返回结果: [((7.591372203123165, 7.593372203123166), (6.01158609358058, 6.013586093580581), 2.0135744011627006), ((2.404627796876835, 2.4066277968768346), (1.9864139064194188, 1.9884139064194186), -1.1280182524270923), ((8.32273673351881, 8.324736733518808), (3.3888007337788695, 3.3908007337788693), 0.6760732477579636), ((1.6732632664811895, 1.6752632664811893), (4.60919926622113, 4.6111992662211305), -2.4655194058318295), ((1.9864139064194182, 1.988413906419418), (5.593372203123165, 5.595372203123166), -2.6988145792219886), ((8.009586093580582, 8.011586093580581), (2.404627796876835, 2.4066277968768346), 0.44277807436780436), ((6.60719926622113, 6.609199266221131), (6.32473673351881, 6.3267367335188105), 2.24686957455286), ((3.3888007337788695, 3.3908007337788693), (1.6732632664811902, 1.67526326648119), -0.8947230790369328)]
[INFO] [1753422432.311020479] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2939999103546143, 1.940999984741211, 4.8480000495910645])
[INFO] [1753422432.312819910] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.29399991 1.94099998 4.84800005]
[INFO] [1753422432.316263503] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422432.317192195] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422432.318180664] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422432.318987849] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422432.319806554] [solver_node]: 求解器返回结果: [((7.591372203123165, 7.593372203123166), (6.01158609358058, 6.013586093580581), 2.0135744011627006), ((2.404627796876835, 2.4066277968768346), (1.9864139064194188, 1.9884139064194186), -1.1280182524270923), ((8.32273673351881, 8.324736733518808), (3.3888007337788695, 3.3908007337788693), 0.6760732477579636), ((1.6732632664811895, 1.6752632664811893), (4.60919926622113, 4.6111992662211305), -2.4655194058318295), ((1.9864139064194182, 1.988413906419418), (5.593372203123165, 5.595372203123166), -2.6988145792219886), ((8.009586093580582, 8.011586093580581), (2.404627796876835, 2.4066277968768346), 0.44277807436780436), ((6.60719926622113, 6.609199266221131), (6.32473673351881, 6.3267367335188105), 2.24686957455286), ((3.3888007337788695, 3.3908007337788693), (1.6732632664811902, 1.67526326648119), -0.8947230790369328)]
[INFO] [1753422432.410414211] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2939999103546143, 1.940999984741211, 4.8480000495910645])
[INFO] [1753422432.411860162] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.29399991 1.94099998 4.84800005]
[INFO] [1753422432.414795872] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422432.415657907] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422432.416452643] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422432.417232244] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422432.418038085] [solver_node]: 求解器返回结果: [((7.591372203123165, 7.593372203123166), (6.01158609358058, 6.013586093580581), 2.0135744011627006), ((2.404627796876835, 2.4066277968768346), (1.9864139064194188, 1.9884139064194186), -1.1280182524270923), ((8.32273673351881, 8.324736733518808), (3.3888007337788695, 3.3908007337788693), 0.6760732477579636), ((1.6732632664811895, 1.6752632664811893), (4.60919926622113, 4.6111992662211305), -2.4655194058318295), ((1.9864139064194182, 1.988413906419418), (5.593372203123165, 5.595372203123166), -2.6988145792219886), ((8.009586093580582, 8.011586093580581), (2.404627796876835, 2.4066277968768346), 0.44277807436780436), ((6.60719926622113, 6.609199266221131), (6.32473673351881, 6.3267367335188105), 2.24686957455286), ((3.3888007337788695, 3.3908007337788693), (1.6732632664811902, 1.67526326648119), -0.8947230790369328)]
[INFO] [1753422432.510712538] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2939999103546143, 1.940999984741211, 4.8480000495910645])
[INFO] [1753422432.512787430] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.29399991 1.94099998 4.84800005]
[INFO] [1753422432.517532427] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422432.520162211] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422432.521050390] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422432.521860903] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422432.522661112] [solver_node]: 求解器返回结果: [((7.591372203123165, 7.593372203123166), (6.01158609358058, 6.013586093580581), 2.0135744011627006), ((2.404627796876835, 2.4066277968768346), (1.9864139064194188, 1.9884139064194186), -1.1280182524270923), ((8.32273673351881, 8.324736733518808), (3.3888007337788695, 3.3908007337788693), 0.6760732477579636), ((1.6732632664811895, 1.6752632664811893), (4.60919926622113, 4.6111992662211305), -2.4655194058318295), ((1.9864139064194182, 1.988413906419418), (5.593372203123165, 5.595372203123166), -2.6988145792219886), ((8.009586093580582, 8.011586093580581), (2.404627796876835, 2.4066277968768346), 0.44277807436780436), ((6.60719926622113, 6.609199266221131), (6.32473673351881, 6.3267367335188105), 2.24686957455286), ((3.3888007337788695, 3.3908007337788693), (1.6732632664811902, 1.67526326648119), -0.8947230790369328)]
[INFO] [1753422432.610695370] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2939999103546143, 2.88100004196167, 4.8480000495910645])
[INFO] [1753422432.612312044] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.29399991 2.88100004 4.84800005]
[INFO] [1753422432.615752693] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422432.616637960] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422432.617404152] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422432.618134920] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422432.618989530] [solver_node]: 求解器返回结果: [((2.5824135652435105, 2.5844135652435103), (3.0783699420866384, 3.080369942086638), -1.3240658088199657), ((2.514726111893393, 2.5167261118933926), (3.0849508326495623, 3.086950832649562), -1.9111055377118378), ((7.413586434756488, 7.415586434756489), (4.919630057913362, 4.9216300579133625), 1.8175268447698272), ((7.481273888106606, 7.4832738881066065), (4.9130491673504375, 4.915049167350438), 1.2304871158779556), ((7.591372203123165, 7.593372203123166), (5.162235052859814, 5.164235052859815), 2.0135744011627006), ((2.404627796876835, 2.4066277968768346), (2.8357649471401842, 2.837764947140184), -1.1280182524270923), ((7.991833996001341, 7.993833996001341), (4.000335546904578, 4.002335546904579), 0.8483600746640922), ((2.0041660039986593, 2.006166003998659), (3.9976644530954224, 3.999664453095422), -2.293232578925701), ((2.8357649471401833, 2.837764947140183), (5.593372203123165, 5.595372203123166), -2.6988145792219886), ((7.160235052859815, 7.162235052859816), (2.404627796876835, 2.4066277968768346), 0.44277807436780436), ((5.99566445309542, 5.997664453095421), (5.9938339960013405, 5.995833996001341), 2.419156401458989), ((4.00033554690458, 4.002335546904581), (2.0041660039986584, 2.006166003998658), -0.7224362521308041)]
[INFO] [1753422432.710852029] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2939999103546143, 2.88100004196167, 4.8480000495910645])
[INFO] [1753422432.713001195] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.29399991 2.88100004 4.84800005]
[INFO] [1753422432.717762992] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753422432.718744421] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422432.723233125] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422432.724158904] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753422432.725008555] [solver_node]: 求解器返回结果: [((2.5824135652435105, 2.5844135652435103), (3.0783699420866384, 3.080369942086638), -1.3240658088199657), ((2.514726111893393, 2.5167261118933926), (3.0849508326495623, 3.086950832649562), -1.9111055377118378), ((7.413586434756488, 7.415586434756489), (4.919630057913362, 4.9216300579133625), 1.8175268447698272), ((7.481273888106606, 7.4832738881066065), (4.9130491673504375, 4.915049167350438), 1.2304871158779556), ((7.591372203123165, 7.593372203123166), (5.162235052859814, 5.164235052859815), 2.0135744011627006), ((2.404627796876835, 2.4066277968768346), (2.8357649471401842, 2.837764947140184), -1.1280182524270923), ((7.991833996001341, 7.993833996001341), (4.000335546904578, 4.002335546904579), 0.8483600746640922), ((2.0041660039986593, 2.006166003998659), (3.9976644530954224, 3.999664453095422), -2.293232578925701), ((2.8357649471401833, 2.837764947140183), (5.593372203123165, 5.595372203123166), -2.6988145792219886), ((7.160235052859815, 7.162235052859816), (2.404627796876835, 2.4066277968768346), 0.44277807436780436), ((5.99566445309542, 5.997664453095421), (5.9938339960013405, 5.995833996001341), 2.419156401458989), ((4.00033554690458, 4.002335546904581), (2.0041660039986584, 2.006166003998658), -0.7224362521308041)]
[INFO] [1753422432.810433861] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.069000005722046, 1.2100000381469727, 4.8480000495910645])
[INFO] [1753422432.811973605] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.06900001 1.21000004 4.84800005]
[INFO] [1753422432.815253771] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422432.816201855] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422432.816962000] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422432.817883843] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422432.818824151] [solver_node]: 求解器返回结果: [((7.75787537620228, 7.759875376202281), (6.6435940696208755, 6.645594069620876), 1.9772333547506424), ((2.2381246237977197, 2.2401246237977195), (1.3544059303791238, 1.3564059303791236), -1.1643592988391507), ((8.748842459697158, 8.750842459697157), (2.806181381684194, 2.808181381684194), 0.5335526514235611), ((1.2471575403028419, 1.2491575403028417), (5.191818618315805, 5.193818618315806), -2.608040002166232), ((1.3544059303791236, 1.3564059303791234), (5.759875376202281, 5.761875376202282), -2.735155625634047), ((8.641594069620876, 8.643594069620875), (2.2381246237977193, 2.240124623797719), 0.40643702795574593), ((7.189818618315804, 7.191818618315804), (6.750842459697157, 6.752842459697158), 2.104348978218458), ((2.806181381684194, 2.808181381684194), (1.2471575403028425, 1.2491575403028423), -1.0372436753713352)]
[INFO] [1753422432.911278759] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.069000005722046, 1.2100000381469727, 4.8480000495910645])
[INFO] [1753422432.916038380] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.06900001 1.21000004 4.84800005]
[INFO] [1753422432.919813341] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422432.920716944] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422432.921456352] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422432.922172463] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422432.923046785] [solver_node]: 求解器返回结果: [((7.75787537620228, 7.759875376202281), (6.6435940696208755, 6.645594069620876), 1.9772333547506424), ((2.2381246237977197, 2.2401246237977195), (1.3544059303791238, 1.3564059303791236), -1.1643592988391507), ((8.748842459697158, 8.750842459697157), (2.806181381684194, 2.808181381684194), 0.5335526514235611), ((1.2471575403028419, 1.2491575403028417), (5.191818618315805, 5.193818618315806), -2.608040002166232), ((1.3544059303791236, 1.3564059303791234), (5.759875376202281, 5.761875376202282), -2.735155625634047), ((8.641594069620876, 8.643594069620875), (2.2381246237977193, 2.240124623797719), 0.40643702795574593), ((7.189818618315804, 7.191818618315804), (6.750842459697157, 6.752842459697158), 2.104348978218458), ((2.806181381684194, 2.808181381684194), (1.2471575403028425, 1.2491575403028423), -1.0372436753713352)]
[INFO] [1753422433.010721643] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.063999891281128, 1.2100000381469727, 4.8480000495910645])
[INFO] [1753422433.012191499] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.06399989 1.21000004 4.84800005]
[INFO] [1753422433.015075496] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422433.015886553] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422433.016798573] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422433.017496540] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422433.018249932] [solver_node]: 求解器返回结果: [((7.761672330196387, 7.763672330196387), (6.642970729508884, 6.644970729508884), 1.976412267706377), ((2.2343276698036116, 2.2363276698036114), (1.3550292704911162, 1.357029270491116), -1.1651803858834162), ((8.749622437115956, 8.751622437115955), (2.809804387979318, 2.811804387979318), 0.534395008250665), ((1.2463775628840437, 1.2483775628840434), (5.188195612020683, 5.190195612020684), -2.607197645339128), ((1.355029270491116, 1.3570292704911158), (5.763672330196388, 5.765672330196389), -2.7359767126783128), ((8.640970729508885, 8.642970729508884), (2.2343276698036125, 2.2363276698036123), 0.4056159409114805), ((7.186195612020682, 7.1881956120206825), (6.751622437115956, 6.753622437115957), 2.1051913350455616), ((2.8098043879793204, 2.81180438797932), (1.2463775628840437, 1.2483775628840434), -1.0364013185442313)]
[INFO] [1753422433.112550564] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.059999942779541, 1.2100000381469727, 4.8480000495910645])
[INFO] [1753422433.114274888] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.05999994 1.21000004 4.84800005]
[INFO] [1753422433.117666769] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422433.118587012] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422433.119417334] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422433.120491469] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422433.121329151] [solver_node]: 求解器返回结果: [((7.764712800103666, 7.766712800103667), (6.642472417318451, 6.644472417318451), 1.9757550043695655), ((2.231287199896334, 2.233287199896334), (1.355527582681549, 1.3575275826815487), -1.1658376492202276), ((8.75024863905192, 8.752248639051919), (2.812708692731043, 2.8147086927310427), 0.5350706004767045), ((1.2457513609480815, 1.2477513609480813), (5.185291307268956, 5.187291307268957), -2.6065220531130886), ((1.3555275826815487, 1.3575275826815485), (5.766712800103665, 5.768712800103666), -2.736633976015124), ((8.64047241731845, 8.64247241731845), (2.231287199896333, 2.2332871998963326), 0.4049586775746691), ((7.183291307268957, 7.185291307268957), (6.752248639051919, 6.754248639051919), 2.105866927271601), ((2.812708692731043, 2.8147086927310427), (1.245751360948081, 1.2477513609480808), -1.035725726318192)]
[INFO] [1753422433.210595531] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.058000087738037, 1.2100000381469727, 4.8480000495910645])
[INFO] [1753422433.212042090] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.05800009 1.21000004 4.84800005]
[INFO] [1753422433.215027818] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422433.215953405] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422433.216859569] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422433.217733283] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422433.218716824] [solver_node]: 求解器返回结果: [((7.766233949163195, 7.7682339491631955), (6.642223390565761, 6.644223390565761), 1.9754262533263862), ((2.229766050836805, 2.231766050836805), (1.355776609434239, 1.3577766094342387), -1.166166400263407), ((8.750562471444004, 8.752562471444003), (2.8141627628817267, 2.8161627628817265), 0.5354089549523615), ((1.2454375285559969, 1.2474375285559967), (5.183837237118272, 5.185837237118273), -2.6061836986374316), ((1.355776609434239, 1.3577766094342387), (5.768233949163194, 5.770233949163194), -2.7369627270583035), ((8.640223390565762, 8.64222339056576), (2.2297660508368042, 2.231766050836804), 0.40462992653148966), ((7.181837237118271, 7.183837237118271), (6.752562471444003, 6.754562471444004), 2.1062052817472585), ((2.8141627628817276, 2.8161627628817274), (1.2454375285559967, 1.2474375285559964), -1.0353873718425348)]
[INFO] [1753422433.313299510] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.058000087738037, 1.2100000381469727, 4.8480000495910645])
[INFO] [1753422433.315169886] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.05800009 1.21000004 4.84800005]
[INFO] [1753422433.318763883] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422433.319687550] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422433.320507088] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422433.321894733] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422433.322710591] [solver_node]: 求解器返回结果: [((7.766233949163195, 7.7682339491631955), (6.642223390565761, 6.644223390565761), 1.9754262533263862), ((2.229766050836805, 2.231766050836805), (1.355776609434239, 1.3577766094342387), -1.166166400263407), ((8.750562471444004, 8.752562471444003), (2.8141627628817267, 2.8161627628817265), 0.5354089549523615), ((1.2454375285559969, 1.2474375285559967), (5.183837237118272, 5.185837237118273), -2.6061836986374316), ((1.355776609434239, 1.3577766094342387), (5.768233949163194, 5.770233949163194), -2.7369627270583035), ((8.640223390565762, 8.64222339056576), (2.2297660508368042, 2.231766050836804), 0.40462992653148966), ((7.181837237118271, 7.183837237118271), (6.752562471444003, 6.754562471444004), 2.1062052817472585), ((2.8141627628817276, 2.8161627628817274), (1.2454375285559967, 1.2474375285559964), -1.0353873718425348)]
[INFO] [1753422433.410710480] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.058000087738037, 1.2100000381469727, 4.8480000495910645])
[INFO] [1753422433.412228241] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.05800009 1.21000004 4.84800005]
[INFO] [1753422433.415293938] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422433.416143172] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422433.416869876] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422433.417584931] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422433.418467830] [solver_node]: 求解器返回结果: [((7.766233949163195, 7.7682339491631955), (6.642223390565761, 6.644223390565761), 1.9754262533263862), ((2.229766050836805, 2.231766050836805), (1.355776609434239, 1.3577766094342387), -1.166166400263407), ((8.750562471444004, 8.752562471444003), (2.8141627628817267, 2.8161627628817265), 0.5354089549523615), ((1.2454375285559969, 1.2474375285559967), (5.183837237118272, 5.185837237118273), -2.6061836986374316), ((1.355776609434239, 1.3577766094342387), (5.768233949163194, 5.770233949163194), -2.7369627270583035), ((8.640223390565762, 8.64222339056576), (2.2297660508368042, 2.231766050836804), 0.40462992653148966), ((7.181837237118271, 7.183837237118271), (6.752562471444003, 6.754562471444004), 2.1062052817472585), ((2.8141627628817276, 2.8161627628817274), (1.2454375285559967, 1.2474375285559964), -1.0353873718425348)]
[INFO] [1753422433.511329871] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.058000087738037, 1.2100000381469727, 4.8480000495910645])
[INFO] [1753422433.513216407] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.05800009 1.21000004 4.84800005]
[INFO] [1753422433.518355813] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422433.519417307] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422433.520206732] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422433.520981404] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422433.521799854] [solver_node]: 求解器返回结果: [((7.766233949163195, 7.7682339491631955), (6.642223390565761, 6.644223390565761), 1.9754262533263862), ((2.229766050836805, 2.231766050836805), (1.355776609434239, 1.3577766094342387), -1.166166400263407), ((8.750562471444004, 8.752562471444003), (2.8141627628817267, 2.8161627628817265), 0.5354089549523615), ((1.2454375285559969, 1.2474375285559967), (5.183837237118272, 5.185837237118273), -2.6061836986374316), ((1.355776609434239, 1.3577766094342387), (5.768233949163194, 5.770233949163194), -2.7369627270583035), ((8.640223390565762, 8.64222339056576), (2.2297660508368042, 2.231766050836804), 0.40462992653148966), ((7.181837237118271, 7.183837237118271), (6.752562471444003, 6.754562471444004), 2.1062052817472585), ((2.8141627628817276, 2.8161627628817274), (1.2454375285559967, 1.2474375285559964), -1.0353873718425348)]
[INFO] [1753422433.610690451] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.058000087738037, 1.2100000381469727, 4.8480000495910645])
[INFO] [1753422433.612177906] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.05800009 1.21000004 4.84800005]
[INFO] [1753422433.615209939] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422433.616152935] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422433.616903991] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422433.617676423] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422433.618488729] [solver_node]: 求解器返回结果: [((7.766233949163195, 7.7682339491631955), (6.642223390565761, 6.644223390565761), 1.9754262533263862), ((2.229766050836805, 2.231766050836805), (1.355776609434239, 1.3577766094342387), -1.166166400263407), ((8.750562471444004, 8.752562471444003), (2.8141627628817267, 2.8161627628817265), 0.5354089549523615), ((1.2454375285559969, 1.2474375285559967), (5.183837237118272, 5.185837237118273), -2.6061836986374316), ((1.355776609434239, 1.3577766094342387), (5.768233949163194, 5.770233949163194), -2.7369627270583035), ((8.640223390565762, 8.64222339056576), (2.2297660508368042, 2.231766050836804), 0.40462992653148966), ((7.181837237118271, 7.183837237118271), (6.752562471444003, 6.754562471444004), 2.1062052817472585), ((2.8141627628817276, 2.8161627628817274), (1.2454375285559967, 1.2474375285559964), -1.0353873718425348)]
[INFO] [1753422433.712699823] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.058000087738037, 1.2100000381469727, 4.8480000495910645])
[INFO] [1753422433.714609559] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.05800009 1.21000004 4.84800005]
[INFO] [1753422433.719381917] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422433.721615821] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422433.723407987] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422433.724219908] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422433.725037461] [solver_node]: 求解器返回结果: [((7.766233949163195, 7.7682339491631955), (6.642223390565761, 6.644223390565761), 1.9754262533263862), ((2.229766050836805, 2.231766050836805), (1.355776609434239, 1.3577766094342387), -1.166166400263407), ((8.750562471444004, 8.752562471444003), (2.8141627628817267, 2.8161627628817265), 0.5354089549523615), ((1.2454375285559969, 1.2474375285559967), (5.183837237118272, 5.185837237118273), -2.6061836986374316), ((1.355776609434239, 1.3577766094342387), (5.768233949163194, 5.770233949163194), -2.7369627270583035), ((8.640223390565762, 8.64222339056576), (2.2297660508368042, 2.231766050836804), 0.40462992653148966), ((7.181837237118271, 7.183837237118271), (6.752562471444003, 6.754562471444004), 2.1062052817472585), ((2.8141627628817276, 2.8161627628817274), (1.2454375285559967, 1.2474375285559964), -1.0353873718425348)]
[INFO] [1753422433.810981211] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.058000087738037, 1.2100000381469727, 4.8480000495910645])
[INFO] [1753422433.812544317] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.05800009 1.21000004 4.84800005]
[INFO] [1753422433.815599646] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422433.816440976] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422433.817192256] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422433.817945264] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422433.818768801] [solver_node]: 求解器返回结果: [((7.766233949163195, 7.7682339491631955), (6.642223390565761, 6.644223390565761), 1.9754262533263862), ((2.229766050836805, 2.231766050836805), (1.355776609434239, 1.3577766094342387), -1.166166400263407), ((8.750562471444004, 8.752562471444003), (2.8141627628817267, 2.8161627628817265), 0.5354089549523615), ((1.2454375285559969, 1.2474375285559967), (5.183837237118272, 5.185837237118273), -2.6061836986374316), ((1.355776609434239, 1.3577766094342387), (5.768233949163194, 5.770233949163194), -2.7369627270583035), ((8.640223390565762, 8.64222339056576), (2.2297660508368042, 2.231766050836804), 0.40462992653148966), ((7.181837237118271, 7.183837237118271), (6.752562471444003, 6.754562471444004), 2.1062052817472585), ((2.8141627628817276, 2.8161627628817274), (1.2454375285559967, 1.2474375285559964), -1.0353873718425348)]
[INFO] [1753422433.912625328] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.058000087738037, 1.2100000381469727, 4.8480000495910645])
[INFO] [1753422433.914597466] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.05800009 1.21000004 4.84800005]
[INFO] [1753422433.917589465] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422433.918395339] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422433.919243005] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422433.919945740] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422433.920703996] [solver_node]: 求解器返回结果: [((7.766233949163195, 7.7682339491631955), (6.642223390565761, 6.644223390565761), 1.9754262533263862), ((2.229766050836805, 2.231766050836805), (1.355776609434239, 1.3577766094342387), -1.166166400263407), ((8.750562471444004, 8.752562471444003), (2.8141627628817267, 2.8161627628817265), 0.5354089549523615), ((1.2454375285559969, 1.2474375285559967), (5.183837237118272, 5.185837237118273), -2.6061836986374316), ((1.355776609434239, 1.3577766094342387), (5.768233949163194, 5.770233949163194), -2.7369627270583035), ((8.640223390565762, 8.64222339056576), (2.2297660508368042, 2.231766050836804), 0.40462992653148966), ((7.181837237118271, 7.183837237118271), (6.752562471444003, 6.754562471444004), 2.1062052817472585), ((2.8141627628817276, 2.8161627628817274), (1.2454375285559967, 1.2474375285559964), -1.0353873718425348)]
[INFO] [1753422434.012567648] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.058000087738037, 1.2100000381469727, 4.8480000495910645])
[INFO] [1753422434.016210797] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.05800009 1.21000004 4.84800005]
[INFO] [1753422434.021941736] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422434.023424903] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422434.024565535] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422434.025645910] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422434.026433159] [solver_node]: 求解器返回结果: [((7.766233949163195, 7.7682339491631955), (6.642223390565761, 6.644223390565761), 1.9754262533263862), ((2.229766050836805, 2.231766050836805), (1.355776609434239, 1.3577766094342387), -1.166166400263407), ((8.750562471444004, 8.752562471444003), (2.8141627628817267, 2.8161627628817265), 0.5354089549523615), ((1.2454375285559969, 1.2474375285559967), (5.183837237118272, 5.185837237118273), -2.6061836986374316), ((1.355776609434239, 1.3577766094342387), (5.768233949163194, 5.770233949163194), -2.7369627270583035), ((8.640223390565762, 8.64222339056576), (2.2297660508368042, 2.231766050836804), 0.40462992653148966), ((7.181837237118271, 7.183837237118271), (6.752562471444003, 6.754562471444004), 2.1062052817472585), ((2.8141627628817276, 2.8161627628817274), (1.2454375285559967, 1.2474375285559964), -1.0353873718425348)]
[INFO] [1753422434.112239723] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.058000087738037, 1.2100000381469727, 4.8480000495910645])
[INFO] [1753422434.113848749] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.05800009 1.21000004 4.84800005]
[INFO] [1753422434.116817421] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422434.117619998] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422434.118370350] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422434.119130942] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422434.119861325] [solver_node]: 求解器返回结果: [((7.766233949163195, 7.7682339491631955), (6.642223390565761, 6.644223390565761), 1.9754262533263862), ((2.229766050836805, 2.231766050836805), (1.355776609434239, 1.3577766094342387), -1.166166400263407), ((8.750562471444004, 8.752562471444003), (2.8141627628817267, 2.8161627628817265), 0.5354089549523615), ((1.2454375285559969, 1.2474375285559967), (5.183837237118272, 5.185837237118273), -2.6061836986374316), ((1.355776609434239, 1.3577766094342387), (5.768233949163194, 5.770233949163194), -2.7369627270583035), ((8.640223390565762, 8.64222339056576), (2.2297660508368042, 2.231766050836804), 0.40462992653148966), ((7.181837237118271, 7.183837237118271), (6.752562471444003, 6.754562471444004), 2.1062052817472585), ((2.8141627628817276, 2.8161627628817274), (1.2454375285559967, 1.2474375285559964), -1.0353873718425348)]
[INFO] [1753422434.211132646] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.058000087738037, 1.2100000381469727, 4.8480000495910645])
[INFO] [1753422434.213521241] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.05800009 1.21000004 4.84800005]
[INFO] [1753422434.219906721] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422434.221035353] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422434.222049582] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422434.222856128] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422434.223631088] [solver_node]: 求解器返回结果: [((7.766233949163195, 7.7682339491631955), (6.642223390565761, 6.644223390565761), 1.9754262533263862), ((2.229766050836805, 2.231766050836805), (1.355776609434239, 1.3577766094342387), -1.166166400263407), ((8.750562471444004, 8.752562471444003), (2.8141627628817267, 2.8161627628817265), 0.5354089549523615), ((1.2454375285559969, 1.2474375285559967), (5.183837237118272, 5.185837237118273), -2.6061836986374316), ((1.355776609434239, 1.3577766094342387), (5.768233949163194, 5.770233949163194), -2.7369627270583035), ((8.640223390565762, 8.64222339056576), (2.2297660508368042, 2.231766050836804), 0.40462992653148966), ((7.181837237118271, 7.183837237118271), (6.752562471444003, 6.754562471444004), 2.1062052817472585), ((2.8141627628817276, 2.8161627628817274), (1.2454375285559967, 1.2474375285559964), -1.0353873718425348)]
[INFO] [1753422434.311573089] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.058000087738037, 1.2100000381469727, 4.8480000495910645])
[INFO] [1753422434.313055425] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.05800009 1.21000004 4.84800005]
[INFO] [1753422434.316000512] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422434.316802481] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422434.317533792] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422434.318237103] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422434.319040576] [solver_node]: 求解器返回结果: [((7.766233949163195, 7.7682339491631955), (6.642223390565761, 6.644223390565761), 1.9754262533263862), ((2.229766050836805, 2.231766050836805), (1.355776609434239, 1.3577766094342387), -1.166166400263407), ((8.750562471444004, 8.752562471444003), (2.8141627628817267, 2.8161627628817265), 0.5354089549523615), ((1.2454375285559969, 1.2474375285559967), (5.183837237118272, 5.185837237118273), -2.6061836986374316), ((1.355776609434239, 1.3577766094342387), (5.768233949163194, 5.770233949163194), -2.7369627270583035), ((8.640223390565762, 8.64222339056576), (2.2297660508368042, 2.231766050836804), 0.40462992653148966), ((7.181837237118271, 7.183837237118271), (6.752562471444003, 6.754562471444004), 2.1062052817472585), ((2.8141627628817276, 2.8161627628817274), (1.2454375285559967, 1.2474375285559964), -1.0353873718425348)]
[INFO] [1753422434.410861893] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.058000087738037, 1.2100000381469727, 4.8480000495910645])
[INFO] [1753422434.414263469] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.05800009 1.21000004 4.84800005]
[INFO] [1753422434.420615668] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422434.421926384] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422434.422758978] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422434.423474929] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422434.424247010] [solver_node]: 求解器返回结果: [((7.766233949163195, 7.7682339491631955), (6.642223390565761, 6.644223390565761), 1.9754262533263862), ((2.229766050836805, 2.231766050836805), (1.355776609434239, 1.3577766094342387), -1.166166400263407), ((8.750562471444004, 8.752562471444003), (2.8141627628817267, 2.8161627628817265), 0.5354089549523615), ((1.2454375285559969, 1.2474375285559967), (5.183837237118272, 5.185837237118273), -2.6061836986374316), ((1.355776609434239, 1.3577766094342387), (5.768233949163194, 5.770233949163194), -2.7369627270583035), ((8.640223390565762, 8.64222339056576), (2.2297660508368042, 2.231766050836804), 0.40462992653148966), ((7.181837237118271, 7.183837237118271), (6.752562471444003, 6.754562471444004), 2.1062052817472585), ((2.8141627628817276, 2.8161627628817274), (1.2454375285559967, 1.2474375285559964), -1.0353873718425348)]
[INFO] [1753422434.510655314] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.058000087738037, 1.2100000381469727, 4.8480000495910645])
[INFO] [1753422434.512106161] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.05800009 1.21000004 4.84800005]
[INFO] [1753422434.515013775] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422434.515801216] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422434.516525231] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422434.517219902] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422434.517956110] [solver_node]: 求解器返回结果: [((7.766233949163195, 7.7682339491631955), (6.642223390565761, 6.644223390565761), 1.9754262533263862), ((2.229766050836805, 2.231766050836805), (1.355776609434239, 1.3577766094342387), -1.166166400263407), ((8.750562471444004, 8.752562471444003), (2.8141627628817267, 2.8161627628817265), 0.5354089549523615), ((1.2454375285559969, 1.2474375285559967), (5.183837237118272, 5.185837237118273), -2.6061836986374316), ((1.355776609434239, 1.3577766094342387), (5.768233949163194, 5.770233949163194), -2.7369627270583035), ((8.640223390565762, 8.64222339056576), (2.2297660508368042, 2.231766050836804), 0.40462992653148966), ((7.181837237118271, 7.183837237118271), (6.752562471444003, 6.754562471444004), 2.1062052817472585), ((2.8141627628817276, 2.8161627628817274), (1.2454375285559967, 1.2474375285559964), -1.0353873718425348)]
[INFO] [1753422434.610636004] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.058000087738037, 1.2100000381469727, 4.8480000495910645])
[INFO] [1753422434.612129892] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.05800009 1.21000004 4.84800005]
[INFO] [1753422434.619025655] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422434.623539895] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422434.624429994] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422434.625464224] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422434.626274385] [solver_node]: 求解器返回结果: [((7.766233949163195, 7.7682339491631955), (6.642223390565761, 6.644223390565761), 1.9754262533263862), ((2.229766050836805, 2.231766050836805), (1.355776609434239, 1.3577766094342387), -1.166166400263407), ((8.750562471444004, 8.752562471444003), (2.8141627628817267, 2.8161627628817265), 0.5354089549523615), ((1.2454375285559969, 1.2474375285559967), (5.183837237118272, 5.185837237118273), -2.6061836986374316), ((1.355776609434239, 1.3577766094342387), (5.768233949163194, 5.770233949163194), -2.7369627270583035), ((8.640223390565762, 8.64222339056576), (2.2297660508368042, 2.231766050836804), 0.40462992653148966), ((7.181837237118271, 7.183837237118271), (6.752562471444003, 6.754562471444004), 2.1062052817472585), ((2.8141627628817276, 2.8161627628817274), (1.2454375285559967, 1.2474375285559964), -1.0353873718425348)]
[INFO] [1753422434.711325861] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.058000087738037, 1.2100000381469727, 4.8480000495910645])
[INFO] [1753422434.713203373] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.05800009 1.21000004 4.84800005]
[INFO] [1753422434.716165740] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753422434.716997598] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753422434.717727950] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753422434.718451645] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753422434.719528948] [solver_node]: 求解器返回结果: [((7.766233949163195, 7.7682339491631955), (6.642223390565761, 6.644223390565761), 1.9754262533263862), ((2.229766050836805, 2.231766050836805), (1.355776609434239, 1.3577766094342387), -1.166166400263407), ((8.750562471444004, 8.752562471444003), (2.8141627628817267, 2.8161627628817265), 0.5354089549523615), ((1.2454375285559969, 1.2474375285559967), (5.183837237118272, 5.185837237118273), -2.6061836986374316), ((1.355776609434239, 1.3577766094342387), (5.768233949163194, 5.770233949163194), -2.7369627270583035), ((8.640223390565762, 8.64222339056576), (2.2297660508368042, 2.231766050836804), 0.40462992653148966), ((7.181837237118271, 7.183837237118271), (6.752562471444003, 6.754562471444004), 2.1062052817472585), ((2.8141627628817276, 2.8161627628817274), (1.2454375285559967, 1.2474375285559964), -1.0353873718425348)]
[INFO] [1753422434.810953455] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.9059998989105225, 1.2100000381469727, 4.8480000495910645])
[INFO] [1753422434.812479888] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.9059999  1.21000004 4.84800005]
[INFO] [1753422434.815335725] [solver_node]: 求解器返回结果: []
[INFO] [1753422434.910901153] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.9059998989105225, 1.2100000381469727, 4.650000095367432])
[INFO] [1753422434.913632027] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.9059999  1.21000004 4.6500001 ]
[INFO] [1753422434.917323497] [solver_node]: 求解器返回结果: []
[WARN] [1753422436.011865160] [solver_node]: 收到空的激光扫描数据，跳过处理
[WARN] [1753422437.015512287] [solver_node]: 收到空的激光扫描数据，跳过处理
[WARN] [1753422438.018200684] [solver_node]: 收到空的激光扫描数据，跳过处理
[WARN] [1753422439.021873431] [solver_node]: 收到空的激光扫描数据，跳过处理
[WARN] [1753422440.025503915] [solver_node]: 收到空的激光扫描数据，跳过处理
[WARN] [1753422441.030015996] [solver_node]: 收到空的激光扫描数据，跳过处理
[WARN] [1753422442.033571777] [solver_node]: 收到空的激光扫描数据，跳过处理
[WARN] [1753422443.037171473] [solver_node]: 收到空的激光扫描数据，跳过处理
[WARN] [1753422444.041390168] [solver_node]: 收到空的激光扫描数据，跳过处理
[WARN] [1753422445.045188319] [solver_node]: 收到空的激光扫描数据，跳过处理
[WARN] [1753422446.052193653] [solver_node]: 收到空的激光扫描数据，跳过处理
[WARN] [1753422447.055992847] [solver_node]: 收到空的激光扫描数据，跳过处理
[WARN] [1753422448.058146319] [solver_node]: 收到空的激光扫描数据，跳过处理
[WARN] [1753422449.061749464] [solver_node]: 收到空的激光扫描数据，跳过处理
[WARN] [1753422450.067429015] [solver_node]: 收到空的激光扫描数据，跳过处理
[WARN] [1753422451.074591679] [solver_node]: 收到空的激光扫描数据，跳过处理
[WARN] [1753422452.074213455] [solver_node]: 收到空的激光扫描数据，跳过处理
[WARN] [1753422453.077847358] [solver_node]: 收到空的激光扫描数据，跳过处理
[WARN] [1753422454.081592536] [solver_node]: 收到空的激光扫描数据，跳过处理
