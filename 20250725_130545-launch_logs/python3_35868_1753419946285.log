[INFO] [1753419946.435700233] [solver_node]: [Case1BatchSolver] Case1BatchSolver初始化完成: 场地尺寸: 9.998x8.0, 容差: 0.001
[INFO] [1753419946.437230117] [solver_node]: [Case3BatchSolver] Case3BatchSolver初始化完成: 场地尺寸: 9.998x8.0, 容差: 0.001
[INFO] [1753419946.438350394] [solver_node]: [PoseSolver] PoseSolver初始化完成: 场地(9.998x8.0), 4个激光
[INFO] [1753419946.679536698] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419946.682757685] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419946.684744025] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419946.685542088] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419946.687576941] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419946.736824211] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419946.738384431] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419946.739609734] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419946.740406388] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419946.741236963] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419946.835960778] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419946.837503718] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419946.838684028] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419946.839491914] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419946.840545598] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419946.938864486] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419946.945686659] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419946.947390850] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419946.948841693] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419946.950069875] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419947.036338496] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419947.037941437] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419947.039126643] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419947.039914817] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419947.040750480] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419947.135905953] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419947.137408605] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419947.138633843] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419947.139628390] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419947.140628568] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419947.237594314] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419947.239666128] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419947.241340143] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419947.242849322] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419947.243957055] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419947.337141227] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419947.339673082] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419947.341172853] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419947.342099302] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419947.343107673] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419947.436426760] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419947.438446477] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419947.442070703] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419947.444906563] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419947.445848564] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419947.537454820] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419947.539368231] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419947.540641343] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419947.541536335] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419947.542506337] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419947.636477948] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419947.638509409] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419947.639839993] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419947.640806283] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419947.641985313] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419947.736313602] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419947.738101379] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419947.739474396] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419947.740439438] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419947.741384543] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419947.836216234] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419947.837828520] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419947.839099359] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419947.839964463] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419947.840896736] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419947.936321942] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419947.938844484] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419947.940741575] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419947.941786042] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419947.943167923] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419948.039691294] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419948.041595233] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419948.042872249] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419948.043783177] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419948.044656057] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419948.136446831] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419948.137886281] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419948.140131891] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419948.141872499] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419948.142840036] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419948.241645019] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419948.244636146] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419948.248112049] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419948.248965409] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419948.249909074] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419948.335840476] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419948.337322200] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419948.339286460] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419948.341109405] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419948.342236466] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419948.437533352] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419948.439050372] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419948.440116471] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419948.440849221] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419948.441660403] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419948.536357118] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419948.537785305] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419948.539302964] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419948.540348392] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419948.541371578] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419948.635930595] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419948.637401822] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419948.638590964] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419948.639434531] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419948.640291091] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419948.737907123] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419948.739922264] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419948.741345650] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419948.742597993] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419948.743679517] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419948.835726712] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419948.837220723] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419948.838346536] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419948.839175543] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419948.840007462] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419948.936286126] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419948.937855403] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419948.939019264] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419948.939761550] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419948.940586813] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419949.035780626] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419949.037327822] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419949.038524324] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419949.039364084] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419949.040215075] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419949.135823874] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419949.137295005] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419949.138444050] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419949.139258561] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419949.140116337] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419949.235857681] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419949.237395181] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419949.238603716] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419949.239455059] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419949.240929422] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419949.335781343] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419949.337269914] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419949.338686420] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419949.339548612] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419949.340618264] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419949.435792974] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419949.437366539] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419949.438517152] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419949.439343983] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419949.440194271] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419949.536723342] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419949.538555311] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419949.545562960] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419949.548816076] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419949.549850271] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419949.635873517] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419949.637399721] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419949.638529982] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419949.639349069] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419949.640242493] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419949.737063698] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419949.738980053] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419949.743186306] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419949.744122292] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419949.744994788] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419949.837100161] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419949.838699487] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419949.839815059] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419949.840660483] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419949.841514546] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419949.936043453] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419949.937500504] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419949.938772815] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419949.939690688] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419949.941143643] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419950.035856713] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419950.037367141] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419950.038538651] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419950.039430123] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419950.040590720] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419950.137854527] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419950.139462525] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419950.140617650] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419950.141422305] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419950.142320690] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419950.235771627] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419950.237316903] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419950.238490237] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419950.239345740] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419950.240167100] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419950.336268677] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419950.337718784] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419950.338860469] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419950.339596451] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419950.340437810] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419950.436381561] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419950.437861364] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419950.439044970] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419950.439838489] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419950.441241330] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419950.537519231] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419950.539050652] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419950.540811164] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419950.542351928] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419950.544138905] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419950.635890803] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419950.637464240] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419950.638558500] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419950.639355827] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419950.640176290] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419950.735989926] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419950.737421313] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419950.738512885] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419950.739363460] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419950.740202580] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419950.835926839] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419950.837378705] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419950.838877069] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419950.839658459] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419950.840477258] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419950.935773477] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419950.937211104] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419950.938406454] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419950.939303110] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419950.940157942] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419951.036150399] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.682000160217285, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419951.037704475] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.68200016 5.3920002  0.287     ]
[WARN] [1753419951.038949298] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419951.039767137] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419951.040605585] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419951.135926895] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419951.137473835] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 5.3920002  0.287     ]
[WARN] [1753419951.138599168] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419951.139466544] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419951.140325216] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419951.235705535] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419951.237147001] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 5.3920002  0.287     ]
[WARN] [1753419951.238248526] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419951.239002236] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419951.240293043] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419951.335693171] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419951.337165966] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 5.3920002  0.287     ]
[WARN] [1753419951.338255394] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419951.339035984] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419951.340133413] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419951.435913131] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419951.439750130] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 5.3920002  0.287     ]
[WARN] [1753419951.441936410] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419951.443132656] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419951.444025536] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419951.535794013] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419951.537341753] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 5.3920002  0.287     ]
[WARN] [1753419951.538492143] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419951.539361023] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419951.540192238] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419951.635838898] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419951.637508113] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 5.3920002  0.287     ]
[WARN] [1753419951.638689862] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419951.639516630] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419951.640372997] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419951.736356784] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419951.738640346] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 5.3920002  0.287     ]
[WARN] [1753419951.740628030] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419951.743089516] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419951.744633096] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419951.836133984] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419951.837639163] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 5.3920002  0.287     ]
[WARN] [1753419951.838803633] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419951.839561919] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419951.840439823] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419951.935904175] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419951.937387499] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 5.3920002  0.287     ]
[WARN] [1753419951.938477983] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419951.939252909] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419951.940222719] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419952.035968774] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419952.038898652] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 5.3920002  0.287     ]
[WARN] [1753419952.040225716] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419952.040994915] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419952.041840370] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419952.135852026] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419952.137389559] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 5.3920002  0.287     ]
[WARN] [1753419952.138617389] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419952.139452253] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419952.140664819] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419952.235848625] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419952.237393390] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 5.3920002  0.287     ]
[WARN] [1753419952.238566051] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419952.239434995] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419952.240318372] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419952.337018205] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419952.338476088] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 5.3920002  0.287     ]
[WARN] [1753419952.339646478] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419952.342098427] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419952.344903727] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419952.435942752] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419952.437843939] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 5.3920002  0.287     ]
[WARN] [1753419952.439161468] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419952.439970507] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419952.440843259] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419952.535835157] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419952.537420690] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 5.3920002  0.287     ]
[WARN] [1753419952.538572328] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419952.539437432] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419952.540294983] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419952.635766027] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419952.637385512] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 5.3920002  0.287     ]
[WARN] [1753419952.638538174] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419952.639362253] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419952.640292350] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419952.735894820] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 5.392000198364258, 0.28700000047683716])
[INFO] [1753419952.738192750] [solver_node]: 调用求解器前，distances shape: (4,), values: [      nan 5.7579999 5.3920002 0.287    ]
[WARN] [1753419952.739461190] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419952.740241556] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419952.741071939] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419952.836282370] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419952.839998630] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58799982 0.287     ]
[WARN] [1753419952.841207741] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419952.841971627] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419952.842885724] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419952.936351802] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419952.938378559] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58799982 0.287     ]
[WARN] [1753419952.939836698] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419952.940645161] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419952.941532505] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419953.035927402] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419953.037843277] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58799982 0.287     ]
[WARN] [1753419953.039487211] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419953.041976601] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419953.043231761] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419953.139226592] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419953.141994483] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58799982 0.287     ]
[WARN] [1753419953.143515119] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419953.144311486] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419953.145144141] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419953.235801850] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419953.237299830] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58799982 0.287     ]
[WARN] [1753419953.238474315] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419953.239290138] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419953.240179467] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419953.335812148] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419953.337331920] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58799982 0.287     ]
[WARN] [1753419953.338454180] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419953.339235347] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419953.340268550] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419953.438924486] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419953.440758184] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58799982 0.287     ]
[WARN] [1753419953.441941214] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419953.442770990] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419953.444052997] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419953.536450674] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419953.538123217] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58799982 0.287     ]
[WARN] [1753419953.539518731] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419953.540330906] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419953.541224490] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419953.635831296] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419953.637359996] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58799982 0.287     ]
[WARN] [1753419953.638701013] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419953.639486308] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419953.640361780] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419953.737459512] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419953.739458941] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58799982 0.287     ]
[WARN] [1753419953.744432665] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419953.745612910] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419953.747089098] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419953.835971093] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419953.837513714] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58799982 0.287     ]
[WARN] [1753419953.838738473] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419953.839535351] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419953.840418376] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419953.936909856] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419953.938370011] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58799982 0.287     ]
[WARN] [1753419953.939513328] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419953.940278686] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419953.941108078] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419954.035808838] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419954.037296354] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58799982 0.287     ]
[WARN] [1753419954.038408662] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419954.039257286] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419954.040118262] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419954.135666527] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419954.137157403] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58799982 0.287     ]
[WARN] [1753419954.138783705] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419954.139717450] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419954.140577306] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419954.235755389] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419954.237229656] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58799982 0.287     ]
[WARN] [1753419954.238336109] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419954.239211933] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419954.240106030] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419954.335693048] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419954.337166419] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58799982 0.287     ]
[WARN] [1753419954.338262855] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419954.339038390] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419954.339877893] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419954.437183183] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419954.438842062] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58799982 0.287     ]
[WARN] [1753419954.439968259] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419954.440762674] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419954.441610913] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419954.535680432] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419954.537107978] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58799982 0.287     ]
[WARN] [1753419954.538200126] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419954.539051662] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419954.539873917] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419954.635929968] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419954.637392843] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58799982 0.287     ]
[WARN] [1753419954.638597954] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419954.639388048] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419954.640250720] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419954.735721544] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419954.737161763] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58799982 0.287     ]
[WARN] [1753419954.738235703] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419954.739079527] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419954.739888790] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419954.836041930] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419954.837945358] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58799982 0.287     ]
[WARN] [1753419954.839292135] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419954.840723169] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419954.843168430] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419954.936243498] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419954.938119693] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58799982 0.287     ]
[WARN] [1753419954.939890318] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419954.941838514] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419954.943474640] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419955.036037443] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.5879998207092285, 0.28700000047683716])
[INFO] [1753419955.037592032] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58799982 0.287     ]
[WARN] [1753419955.038851511] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753419955.039679463] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753419955.040520886] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753419955.135830782] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.5879998207092285, 1.9709999561309814])
[INFO] [1753419955.137335674] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58799982 1.97099996]
[INFO] [1753419955.140691672] [solver_node]: 求解器返回结果: []
[INFO] [1753419955.237462587] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.5879998207092285, 1.9709999561309814])
[INFO] [1753419955.239085593] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58799982 1.97099996]
[INFO] [1753419955.242110097] [solver_node]: 求解器返回结果: []
[INFO] [1753419955.337873921] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.5879998207092285, 1.9709999561309814])
[INFO] [1753419955.339394877] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58799982 1.97099996]
[INFO] [1753419955.342253202] [solver_node]: 求解器返回结果: []
[INFO] [1753419955.435873114] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.5879998207092285, 1.9709999561309814])
[INFO] [1753419955.437454744] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58799982 1.97099996]
[INFO] [1753419955.440374126] [solver_node]: 求解器返回结果: []
[INFO] [1753419955.536266112] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.5879998207092285, 1.9709999561309814])
[INFO] [1753419955.538604300] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58799982 1.97099996]
[INFO] [1753419955.541516770] [solver_node]: 求解器返回结果: []
[INFO] [1753419955.635780342] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.5879998207092285, 1.9759999513626099])
[INFO] [1753419955.637410836] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58799982 1.97599995]
[INFO] [1753419955.640178728] [solver_node]: 求解器返回结果: []
[INFO] [1753419955.736113787] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.5879998207092285, 1.9759999513626099])
[INFO] [1753419955.737655383] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58799982 1.97599995]
[INFO] [1753419955.740586222] [solver_node]: 求解器返回结果: []
[INFO] [1753419955.835743410] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.5879998207092285, 1.9759999513626099])
[INFO] [1753419955.837396465] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58799982 1.97599995]
[INFO] [1753419955.840422185] [solver_node]: 求解器返回结果: []
[INFO] [1753419955.936476383] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.5879998207092285, 1.9759999513626099])
[INFO] [1753419955.937989083] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58799982 1.97599995]
[INFO] [1753419955.941091764] [solver_node]: 求解器返回结果: []
[INFO] [1753419956.035951060] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.5879998207092285, 1.9759999513626099])
[INFO] [1753419956.037573875] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58799982 1.97599995]
[INFO] [1753419956.040483881] [solver_node]: 求解器返回结果: []
[INFO] [1753419956.136580929] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.5879998207092285, 1.9800000190734863])
[INFO] [1753419956.138332514] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58799982 1.98000002]
[INFO] [1753419956.142077511] [solver_node]: 求解器返回结果: []
[INFO] [1753419956.235769331] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.5879998207092285, 1.9800000190734863])
[INFO] [1753419956.237275151] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58799982 1.98000002]
[INFO] [1753419956.240153125] [solver_node]: 求解器返回结果: []
[INFO] [1753419956.335713492] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.5879998207092285, 1.9800000190734863])
[INFO] [1753419956.337238672] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58799982 1.98000002]
[INFO] [1753419956.340017156] [solver_node]: 求解器返回结果: []
[INFO] [1753419956.435687860] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.5879998207092285, 1.9800000190734863])
[INFO] [1753419956.437147663] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58799982 1.98000002]
[INFO] [1753419956.439930915] [solver_node]: 求解器返回结果: []
[INFO] [1753419956.536061212] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.5879998207092285, 1.9800000190734863])
[INFO] [1753419956.537698651] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58799982 1.98000002]
[INFO] [1753419956.540614737] [solver_node]: 求解器返回结果: []
[INFO] [1753419956.635971260] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.5879998207092285, 1.9780000448226929])
[INFO] [1753419956.637427607] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58799982 1.97800004]
[INFO] [1753419956.640210155] [solver_node]: 求解器返回结果: []
[INFO] [1753419956.737201460] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.5879998207092285, 1.9780000448226929])
[INFO] [1753419956.738768369] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58799982 1.97800004]
[INFO] [1753419956.742113871] [solver_node]: 求解器返回结果: []
[INFO] [1753419956.837020882] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.5879998207092285, 1.9780000448226929])
[INFO] [1753419956.838519214] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58799982 1.97800004]
[INFO] [1753419956.841232352] [solver_node]: 求解器返回结果: []
[INFO] [1753419956.937914980] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.5879998207092285, 1.9780000448226929])
[INFO] [1753419956.939402847] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58799982 1.97800004]
[INFO] [1753419956.942106386] [solver_node]: 求解器返回结果: []
[INFO] [1753419957.036548908] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.9780000448226929])
[INFO] [1753419957.038232908] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.97800004]
[INFO] [1753419957.041247044] [solver_node]: 求解器返回结果: []
[INFO] [1753419957.135739873] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.9839999675750732])
[INFO] [1753419957.137184988] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.98399997]
[INFO] [1753419957.140001392] [solver_node]: 求解器返回结果: []
[INFO] [1753419957.235762693] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.9839999675750732])
[INFO] [1753419957.237276258] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.98399997]
[INFO] [1753419957.240008308] [solver_node]: 求解器返回结果: []
[INFO] [1753419957.335766313] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.9839999675750732])
[INFO] [1753419957.337272709] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.98399997]
[INFO] [1753419957.340126426] [solver_node]: 求解器返回结果: []
[INFO] [1753419957.438502208] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.9839999675750732])
[INFO] [1753419957.440662632] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.98399997]
[INFO] [1753419957.444919863] [solver_node]: 求解器返回结果: []
[INFO] [1753419957.537124298] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.9839999675750732])
[INFO] [1753419957.538657959] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.98399997]
[INFO] [1753419957.541484187] [solver_node]: 求解器返回结果: []
[INFO] [1753419957.635742900] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.9709999561309814])
[INFO] [1753419957.637244016] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.97099996]
[INFO] [1753419957.640055748] [solver_node]: 求解器返回结果: []
[INFO] [1753419957.736314403] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.9709999561309814])
[INFO] [1753419957.742319954] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.97099996]
[INFO] [1753419957.745774067] [solver_node]: 求解器返回结果: []
[INFO] [1753419957.835837406] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.9709999561309814])
[INFO] [1753419957.837291577] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.97099996]
[INFO] [1753419957.839983019] [solver_node]: 求解器返回结果: []
[INFO] [1753419957.935738399] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.9709999561309814])
[INFO] [1753419957.937167482] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.97099996]
[INFO] [1753419957.939847628] [solver_node]: 求解器返回结果: []
[INFO] [1753419958.035812293] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.9709999561309814])
[INFO] [1753419958.037285409] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.97099996]
[INFO] [1753419958.040061397] [solver_node]: 求解器返回结果: []
[INFO] [1753419958.135672745] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.9709999561309814])
[INFO] [1753419958.137170949] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.97099996]
[INFO] [1753419958.140077723] [solver_node]: 求解器返回结果: []
[INFO] [1753419958.236237498] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.975000023841858])
[INFO] [1753419958.238167422] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.97500002]
[INFO] [1753419958.241475132] [solver_node]: 求解器返回结果: []
[INFO] [1753419958.337548281] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.975000023841858])
[INFO] [1753419958.339253273] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.97500002]
[INFO] [1753419958.342354482] [solver_node]: 求解器返回结果: []
[INFO] [1753419958.435747582] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.975000023841858])
[INFO] [1753419958.437355516] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.97500002]
[INFO] [1753419958.440283602] [solver_node]: 求解器返回结果: []
[INFO] [1753419958.536354000] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.975000023841858])
[INFO] [1753419958.537951053] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.97500002]
[INFO] [1753419958.540841603] [solver_node]: 求解器返回结果: []
[INFO] [1753419958.635910958] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.975000023841858])
[INFO] [1753419958.638825380] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.97500002]
[INFO] [1753419958.643712927] [solver_node]: 求解器返回结果: []
[INFO] [1753419958.737973786] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.9830000400543213])
[INFO] [1753419958.742544560] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.98300004]
[INFO] [1753419958.750232895] [solver_node]: 求解器返回结果: []
[INFO] [1753419958.835888858] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9830000400543213])
[INFO] [1753419958.840368077] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.98300004]
[INFO] [1753419958.844035058] [solver_node]: 求解器返回结果: []
[INFO] [1753419958.936739760] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9830000400543213])
[INFO] [1753419958.938960986] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.98300004]
[INFO] [1753419958.941926929] [solver_node]: 求解器返回结果: []
[INFO] [1753419959.036639350] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9830000400543213])
[INFO] [1753419959.038223411] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.98300004]
[INFO] [1753419959.041583506] [solver_node]: 求解器返回结果: []
[INFO] [1753419959.136331289] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9830000400543213])
[INFO] [1753419959.137860341] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.98300004]
[INFO] [1753419959.141001104] [solver_node]: 求解器返回结果: []
[INFO] [1753419959.239915141] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419959.241357376] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.97599995]
[INFO] [1753419959.245630287] [solver_node]: 求解器返回结果: []
[INFO] [1753419959.336156168] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419959.337595522] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97599995]
[INFO] [1753419959.340550617] [solver_node]: 求解器返回结果: []
[INFO] [1753419959.436121168] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419959.437643852] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97599995]
[INFO] [1753419959.446006344] [solver_node]: 求解器返回结果: []
[INFO] [1753419959.536457599] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419959.537957755] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97599995]
[INFO] [1753419959.540777552] [solver_node]: 求解器返回结果: []
[INFO] [1753419959.635857245] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419959.637303736] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97599995]
[INFO] [1753419959.640195342] [solver_node]: 求解器返回结果: []
[INFO] [1753419959.736367471] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419959.737882732] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97599995]
[INFO] [1753419959.740672000] [solver_node]: 求解器返回结果: []
[INFO] [1753419959.835701100] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419959.837286185] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97599995]
[INFO] [1753419959.840774923] [solver_node]: 求解器返回结果: []
[INFO] [1753419959.936364225] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419959.937812380] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97599995]
[INFO] [1753419959.940558447] [solver_node]: 求解器返回结果: []
[INFO] [1753419960.035743647] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419960.037371742] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97599995]
[INFO] [1753419960.040229971] [solver_node]: 求解器返回结果: []
[INFO] [1753419960.135981583] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419960.137452523] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97599995]
[INFO] [1753419960.140174046] [solver_node]: 求解器返回结果: []
[INFO] [1753419960.237448598] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419960.238949298] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97899997]
[INFO] [1753419960.241860777] [solver_node]: 求解器返回结果: []
[INFO] [1753419960.335713026] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419960.337240638] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97899997]
[INFO] [1753419960.340797312] [solver_node]: 求解器返回结果: []
[INFO] [1753419960.436369657] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419960.437950551] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419960.442122693] [solver_node]: 求解器返回结果: []
[INFO] [1753419960.535915420] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419960.539442686] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419960.544031828] [solver_node]: 求解器返回结果: []
[INFO] [1753419960.636270031] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419960.637818316] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419960.641455151] [solver_node]: 求解器返回结果: []
[INFO] [1753419960.735989781] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419960.737558578] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419960.740762062] [solver_node]: 求解器返回结果: []
[INFO] [1753419960.835802557] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419960.837227448] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419960.840157998] [solver_node]: 求解器返回结果: []
[INFO] [1753419960.935926475] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419960.938095155] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419960.940779077] [solver_node]: 求解器返回结果: []
[INFO] [1753419961.036095578] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419961.037641559] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419961.040552750] [solver_node]: 求解器返回结果: []
[INFO] [1753419961.137998988] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419961.139828462] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419961.142647651] [solver_node]: 求解器返回结果: []
[INFO] [1753419961.235818385] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419961.237284749] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419961.240039904] [solver_node]: 求解器返回结果: []
[INFO] [1753419961.335810079] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419961.337323580] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419961.340155377] [solver_node]: 求解器返回结果: []
[INFO] [1753419961.435901583] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419961.437379531] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419961.440110974] [solver_node]: 求解器返回结果: []
[INFO] [1753419961.537685087] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419961.539294973] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419961.541927342] [solver_node]: 求解器返回结果: []
[INFO] [1753419961.638790530] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419961.640282557] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419961.642951791] [solver_node]: 求解器返回结果: []
[INFO] [1753419961.737440054] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419961.743258371] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419961.746542273] [solver_node]: 求解器返回结果: []
[INFO] [1753419961.835821990] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419961.837511814] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419961.841897432] [solver_node]: 求解器返回结果: []
[INFO] [1753419961.935725235] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419961.937338673] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419961.941578112] [solver_node]: 求解器返回结果: []
[INFO] [1753419962.036244427] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419962.037944779] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419962.041931734] [solver_node]: 求解器返回结果: []
[INFO] [1753419962.135710002] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419962.137142061] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419962.143497028] [solver_node]: 求解器返回结果: []
[INFO] [1753419962.237253568] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419962.239865936] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419962.243363794] [solver_node]: 求解器返回结果: []
[INFO] [1753419962.337280273] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419962.339669054] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419962.344477944] [solver_node]: 求解器返回结果: []
[INFO] [1753419962.437916749] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419962.439518283] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419962.442258815] [solver_node]: 求解器返回结果: []
[INFO] [1753419962.536375009] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419962.537914430] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419962.544452728] [solver_node]: 求解器返回结果: []
[INFO] [1753419962.635879913] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419962.637381317] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419962.640469855] [solver_node]: 求解器返回结果: []
[INFO] [1753419962.738136388] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419962.740138569] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97899997]
[INFO] [1753419962.743520520] [solver_node]: 求解器返回结果: []
[INFO] [1753419962.837118529] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76800012588501, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419962.838582493] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76800013 4.58699989 1.97599995]
[INFO] [1753419962.841500051] [solver_node]: 求解器返回结果: []
[INFO] [1753419962.935744344] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.765999794006348, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419962.937247348] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76599979 4.58699989 1.97599995]
[INFO] [1753419962.940102730] [solver_node]: 求解器返回结果: []
[INFO] [1753419963.038806115] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.765999794006348, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419963.040325504] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76599979 4.58699989 1.97599995]
[INFO] [1753419963.043530204] [solver_node]: 求解器返回结果: []
[INFO] [1753419963.137356987] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.765999794006348, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419963.139754824] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76599979 4.58699989 1.97599995]
[INFO] [1753419963.144031160] [solver_node]: 求解器返回结果: []
[INFO] [1753419963.236819140] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.765999794006348, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419963.240026016] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76599979 4.58699989 1.97599995]
[INFO] [1753419963.244579286] [solver_node]: 求解器返回结果: []
[INFO] [1753419963.335822085] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.765999794006348, 4.586999893188477, 1.972000002861023])
[INFO] [1753419963.337295681] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76599979 4.58699989 1.972     ]
[INFO] [1753419963.340062036] [solver_node]: 求解器返回结果: []
[INFO] [1753419963.435914682] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.972000002861023])
[INFO] [1753419963.437662779] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.972     ]
[INFO] [1753419963.441005209] [solver_node]: 求解器返回结果: []
[INFO] [1753419963.536148882] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.972000002861023])
[INFO] [1753419963.537690542] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.972     ]
[INFO] [1753419963.541621912] [solver_node]: 求解器返回结果: []
[INFO] [1753419963.635853791] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.972000002861023])
[INFO] [1753419963.637267450] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.972     ]
[INFO] [1753419963.639986957] [solver_node]: 求解器返回结果: []
[INFO] [1753419963.737450192] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.972000002861023])
[INFO] [1753419963.738969773] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.972     ]
[INFO] [1753419963.741840547] [solver_node]: 求解器返回结果: []
[INFO] [1753419963.836654133] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419963.838208722] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97399998]
[INFO] [1753419963.841461615] [solver_node]: 求解器返回结果: []
[INFO] [1753419963.936658088] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419963.938194533] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58699989 1.97399998]
[INFO] [1753419963.940937208] [solver_node]: 求解器返回结果: []
[INFO] [1753419964.035807692] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419964.038069943] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58699989 1.97399998]
[INFO] [1753419964.040800938] [solver_node]: 求解器返回结果: []
[INFO] [1753419964.135782146] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419964.137258333] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58699989 1.97399998]
[INFO] [1753419964.140148532] [solver_node]: 求解器返回结果: []
[INFO] [1753419964.235903386] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419964.238860145] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58699989 1.97399998]
[INFO] [1753419964.241976460] [solver_node]: 求解器返回结果: []
[INFO] [1753419964.336347864] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419964.337787571] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58699989 1.97899997]
[INFO] [1753419964.340624872] [solver_node]: 求解器返回结果: []
[INFO] [1753419964.435832612] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419964.437423202] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58699989 1.97899997]
[INFO] [1753419964.440245911] [solver_node]: 求解器返回结果: []
[INFO] [1753419964.536974031] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419964.539073399] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58699989 1.97899997]
[INFO] [1753419964.547417203] [solver_node]: 求解器返回结果: []
[INFO] [1753419964.636483516] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419964.638112122] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58699989 1.97899997]
[INFO] [1753419964.641097203] [solver_node]: 求解器返回结果: []
[INFO] [1753419964.739702478] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419964.741288876] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58699989 1.97899997]
[INFO] [1753419964.745619677] [solver_node]: 求解器返回结果: []
[INFO] [1753419964.837160340] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419964.838729682] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58699989 1.97899997]
[INFO] [1753419964.843755888] [solver_node]: 求解器返回结果: []
[INFO] [1753419964.936530942] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419964.938118108] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58699989 1.97899997]
[INFO] [1753419964.943691141] [solver_node]: 求解器返回结果: []
[INFO] [1753419965.036460596] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419965.037967824] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58699989 1.97899997]
[INFO] [1753419965.040856774] [solver_node]: 求解器返回结果: []
[INFO] [1753419965.138523891] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419965.140322133] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58699989 1.97899997]
[INFO] [1753419965.145934974] [solver_node]: 求解器返回结果: []
[INFO] [1753419965.235901370] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419965.237326357] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58699989 1.97899997]
[INFO] [1753419965.240053704] [solver_node]: 求解器返回结果: []
[INFO] [1753419965.336159767] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419965.337829974] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58699989 1.97899997]
[INFO] [1753419965.340872880] [solver_node]: 求解器返回结果: []
[INFO] [1753419965.436545591] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419965.439698386] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58699989 1.97899997]
[INFO] [1753419965.442562536] [solver_node]: 求解器返回结果: []
[INFO] [1753419965.535919107] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419965.537350078] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58699989 1.97899997]
[INFO] [1753419965.540052401] [solver_node]: 求解器返回结果: []
[INFO] [1753419965.635966109] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419965.637412184] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58699989 1.97899997]
[INFO] [1753419965.640108874] [solver_node]: 求解器返回结果: []
[INFO] [1753419965.736780100] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419965.738270912] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58699989 1.97899997]
[INFO] [1753419965.740932434] [solver_node]: 求解器返回结果: []
[INFO] [1753419965.835786090] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419965.837234405] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58699989 1.97899997]
[INFO] [1753419965.839928312] [solver_node]: 求解器返回结果: []
[INFO] [1753419965.935814595] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419965.937235902] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58699989 1.97899997]
[INFO] [1753419965.939892143] [solver_node]: 求解器返回结果: []
[INFO] [1753419966.036703597] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419966.038221225] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58699989 1.97899997]
[INFO] [1753419966.041342148] [solver_node]: 求解器返回结果: []
[INFO] [1753419966.136499716] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419966.137918751] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58699989 1.97899997]
[INFO] [1753419966.140638994] [solver_node]: 求解器返回结果: []
[INFO] [1753419966.239625466] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419966.241237560] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58699989 1.97899997]
[INFO] [1753419966.244043757] [solver_node]: 求解器返回结果: []
[INFO] [1753419966.340209024] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419966.341733468] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58699989 1.97899997]
[INFO] [1753419966.344417807] [solver_node]: 求解器返回结果: []
[INFO] [1753419966.435911114] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419966.437368773] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58699989 1.97899997]
[INFO] [1753419966.440126489] [solver_node]: 求解器返回结果: []
[INFO] [1753419966.535989350] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419966.537543267] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97899997]
[INFO] [1753419966.541564687] [solver_node]: 求解器返回结果: []
[INFO] [1753419966.637191063] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419966.638632563] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97899997]
[INFO] [1753419966.641373542] [solver_node]: 求解器返回结果: []
[INFO] [1753419966.735797496] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419966.737220019] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97899997]
[INFO] [1753419966.740020072] [solver_node]: 求解器返回结果: []
[INFO] [1753419966.835786643] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419966.837200813] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97899997]
[INFO] [1753419966.839913217] [solver_node]: 求解器返回结果: []
[INFO] [1753419966.936357593] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419966.937849813] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97000003]
[INFO] [1753419966.940777228] [solver_node]: 求解器返回结果: []
[INFO] [1753419967.035762729] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419967.037367239] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58699989 1.97000003]
[INFO] [1753419967.040588772] [solver_node]: 求解器返回结果: []
[INFO] [1753419967.136050700] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419967.137520328] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58699989 1.97000003]
[INFO] [1753419967.140401534] [solver_node]: 求解器返回结果: []
[INFO] [1753419967.236041737] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419967.237783146] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58699989 1.97000003]
[INFO] [1753419967.241748597] [solver_node]: 求解器返回结果: []
[INFO] [1753419967.336455663] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419967.338008204] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58699989 1.97000003]
[INFO] [1753419967.340893730] [solver_node]: 求解器返回结果: []
[INFO] [1753419967.437254267] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419967.438744759] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58699989 1.98099995]
[INFO] [1753419967.441381641] [solver_node]: 求解器返回结果: []
[INFO] [1753419967.535760092] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419967.537231096] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.98099995]
[INFO] [1753419967.540134191] [solver_node]: 求解器返回结果: []
[INFO] [1753419967.635762042] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419967.637217557] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.98099995]
[INFO] [1753419967.641538343] [solver_node]: 求解器返回结果: []
[INFO] [1753419967.737727324] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419967.741139901] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.98099995]
[INFO] [1753419967.744134069] [solver_node]: 求解器返回结果: []
[INFO] [1753419967.838276772] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419967.840764179] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.98099995]
[INFO] [1753419967.845626287] [solver_node]: 求解器返回结果: []
[INFO] [1753419967.937560532] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419967.939098385] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97000003]
[INFO] [1753419967.942152235] [solver_node]: 求解器返回结果: []
[INFO] [1753419968.035924500] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419968.041229336] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97000003]
[INFO] [1753419968.045379014] [solver_node]: 求解器返回结果: []
[INFO] [1753419968.137302638] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419968.138934988] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97000003]
[INFO] [1753419968.142573681] [solver_node]: 求解器返回结果: []
[INFO] [1753419968.235754224] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419968.237153611] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97000003]
[INFO] [1753419968.239835389] [solver_node]: 求解器返回结果: []
[INFO] [1753419968.335761329] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419968.337162347] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97000003]
[INFO] [1753419968.339970176] [solver_node]: 求解器返回结果: []
[INFO] [1753419968.437184267] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419968.438751273] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97599995]
[INFO] [1753419968.441712833] [solver_node]: 求解器返回结果: []
[INFO] [1753419968.541978214] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419968.544021613] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58699989 1.97599995]
[INFO] [1753419968.546837922] [solver_node]: 求解器返回结果: []
[INFO] [1753419968.637206220] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419968.640323719] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58699989 1.97599995]
[INFO] [1753419968.643470370] [solver_node]: 求解器返回结果: []
[INFO] [1753419968.737115850] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419968.738558597] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58699989 1.97599995]
[INFO] [1753419968.741338842] [solver_node]: 求解器返回结果: []
[INFO] [1753419968.837078313] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419968.838653575] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58699989 1.97599995]
[INFO] [1753419968.841461980] [solver_node]: 求解器返回结果: []
[INFO] [1753419968.935785969] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419968.937295758] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58699989 1.97599995]
[INFO] [1753419968.940161220] [solver_node]: 求解器返回结果: []
[INFO] [1753419969.035770258] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419969.037234861] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58699989 1.97599995]
[INFO] [1753419969.040010178] [solver_node]: 求解器返回结果: []
[INFO] [1753419969.135700275] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419969.137160334] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58699989 1.97599995]
[INFO] [1753419969.142226510] [solver_node]: 求解器返回结果: []
[INFO] [1753419969.235821848] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419969.237265427] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58699989 1.97599995]
[INFO] [1753419969.240087432] [solver_node]: 求解器返回结果: []
[INFO] [1753419969.336671914] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419969.339392350] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58699989 1.97599995]
[INFO] [1753419969.342606938] [solver_node]: 求解器返回结果: []
[INFO] [1753419969.437031316] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419969.438728916] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58699989 1.97599995]
[INFO] [1753419969.441639595] [solver_node]: 求解器返回结果: []
[INFO] [1753419969.536152550] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419969.538102762] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58699989 1.97599995]
[INFO] [1753419969.543113513] [solver_node]: 求解器返回结果: []
[INFO] [1753419969.637571523] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419969.639744876] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97599995]
[INFO] [1753419969.643500211] [solver_node]: 求解器返回结果: []
[INFO] [1753419969.736251628] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419969.740172183] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97599995]
[INFO] [1753419969.743359475] [solver_node]: 求解器返回结果: []
[INFO] [1753419969.836609334] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419969.839514285] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97599995]
[INFO] [1753419969.843303732] [solver_node]: 求解器返回结果: []
[INFO] [1753419969.937454984] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419969.940971115] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97599995]
[INFO] [1753419969.947314723] [solver_node]: 求解器返回结果: []
[INFO] [1753419970.039159084] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419970.044156491] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97599995]
[INFO] [1753419970.047668973] [solver_node]: 求解器返回结果: []
[INFO] [1753419970.136388317] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419970.138777866] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97599995]
[INFO] [1753419970.144051854] [solver_node]: 求解器返回结果: []
[INFO] [1753419970.236234591] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419970.237693338] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97599995]
[INFO] [1753419970.240529904] [solver_node]: 求解器返回结果: []
[INFO] [1753419970.337554749] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419970.339939882] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97599995]
[INFO] [1753419970.343451468] [solver_node]: 求解器返回结果: []
[INFO] [1753419970.435955172] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419970.438598358] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97599995]
[INFO] [1753419970.441671984] [solver_node]: 求解器返回结果: []
[INFO] [1753419970.536318160] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419970.542141758] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97599995]
[INFO] [1753419970.545804483] [solver_node]: 求解器返回结果: []
[INFO] [1753419970.635867532] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419970.637509643] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97599995]
[INFO] [1753419970.644389133] [solver_node]: 求解器返回结果: []
[INFO] [1753419970.736193751] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419970.737672467] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97599995]
[INFO] [1753419970.743793095] [solver_node]: 求解器返回结果: []
[INFO] [1753419970.836335007] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419970.837782362] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97599995]
[INFO] [1753419970.842557397] [solver_node]: 求解器返回结果: []
[INFO] [1753419970.937505434] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419970.939035991] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97599995]
[INFO] [1753419970.941957039] [solver_node]: 求解器返回结果: []
[INFO] [1753419971.036400971] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.968999981880188])
[INFO] [1753419971.037899912] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.96899998]
[INFO] [1753419971.041016899] [solver_node]: 求解器返回结果: []
[INFO] [1753419971.137598410] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.586999893188477, 1.968999981880188])
[INFO] [1753419971.139094790] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58699989 1.96899998]
[INFO] [1753419971.142906926] [solver_node]: 求解器返回结果: []
[INFO] [1753419971.235873744] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.586999893188477, 1.968999981880188])
[INFO] [1753419971.237325708] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58699989 1.96899998]
[INFO] [1753419971.241792929] [solver_node]: 求解器返回结果: []
[INFO] [1753419971.335827863] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.586999893188477, 1.968999981880188])
[INFO] [1753419971.337269971] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58699989 1.96899998]
[INFO] [1753419971.340079240] [solver_node]: 求解器返回结果: []
[INFO] [1753419971.437484702] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.586999893188477, 1.968999981880188])
[INFO] [1753419971.438993531] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58699989 1.96899998]
[INFO] [1753419971.443798582] [solver_node]: 求解器返回结果: []
[INFO] [1753419971.536710775] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419971.538420600] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.58699989 1.97000003]
[INFO] [1753419971.541774039] [solver_node]: 求解器返回结果: []
[INFO] [1753419971.636309719] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419971.640598472] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97000003]
[INFO] [1753419971.646057232] [solver_node]: 求解器返回结果: []
[INFO] [1753419971.735840502] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419971.738703852] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97000003]
[INFO] [1753419971.743744300] [solver_node]: 求解器返回结果: []
[INFO] [1753419971.836116195] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419971.837647808] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97000003]
[INFO] [1753419971.840923518] [solver_node]: 求解器返回结果: []
[INFO] [1753419971.936013992] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419971.937956109] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97000003]
[INFO] [1753419971.941838231] [solver_node]: 求解器返回结果: []
[INFO] [1753419972.040105918] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.975000023841858])
[INFO] [1753419972.043972296] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97500002]
[INFO] [1753419972.049258924] [solver_node]: 求解器返回结果: []
[INFO] [1753419972.137075919] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.975000023841858])
[INFO] [1753419972.138631053] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97500002]
[INFO] [1753419972.145363788] [solver_node]: 求解器返回结果: []
[INFO] [1753419972.236982551] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.975000023841858])
[INFO] [1753419972.239052127] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97500002]
[INFO] [1753419972.242901288] [solver_node]: 求解器返回结果: []
[INFO] [1753419972.335834860] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.975000023841858])
[INFO] [1753419972.337332072] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97500002]
[INFO] [1753419972.342835473] [solver_node]: 求解器返回结果: []
[INFO] [1753419972.435833366] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.975000023841858])
[INFO] [1753419972.437271153] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97500002]
[INFO] [1753419972.443857262] [solver_node]: 求解器返回结果: []
[INFO] [1753419972.536439627] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.975000023841858])
[INFO] [1753419972.537962088] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97500002]
[INFO] [1753419972.546653709] [solver_node]: 求解器返回结果: []
[INFO] [1753419972.635991629] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9800000190734863])
[INFO] [1753419972.637439624] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.98000002]
[INFO] [1753419972.645308702] [solver_node]: 求解器返回结果: []
[INFO] [1753419972.735833204] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9800000190734863])
[INFO] [1753419972.737349617] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.98000002]
[INFO] [1753419972.740140358] [solver_node]: 求解器返回结果: []
[INFO] [1753419972.836297831] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9800000190734863])
[INFO] [1753419972.839162973] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.98000002]
[INFO] [1753419972.844129724] [solver_node]: 求解器返回结果: []
[INFO] [1753419972.936572790] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9800000190734863])
[INFO] [1753419972.940717637] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.98000002]
[INFO] [1753419972.943858881] [solver_node]: 求解器返回结果: []
[INFO] [1753419973.037086603] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9800000190734863])
[INFO] [1753419973.038822636] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.98000002]
[INFO] [1753419973.045030050] [solver_node]: 求解器返回结果: []
[INFO] [1753419973.136011971] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419973.137505664] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97399998]
[INFO] [1753419973.140291349] [solver_node]: 求解器返回结果: []
[INFO] [1753419973.236479641] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419973.239563123] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97399998]
[INFO] [1753419973.243039862] [solver_node]: 求解器返回结果: []
[INFO] [1753419973.336028029] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419973.337581082] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97399998]
[INFO] [1753419973.340902490] [solver_node]: 求解器返回结果: []
[INFO] [1753419973.436612981] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419973.439043139] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97399998]
[INFO] [1753419973.444697262] [solver_node]: 求解器返回结果: []
[INFO] [1753419973.536238650] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419973.538210688] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97399998]
[INFO] [1753419973.541817796] [solver_node]: 求解器返回结果: []
[INFO] [1753419973.636506828] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419973.638490194] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.98099995]
[INFO] [1753419973.642208280] [solver_node]: 求解器返回结果: []
[INFO] [1753419973.737806129] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419973.739590419] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58699989 1.98099995]
[INFO] [1753419973.743365179] [solver_node]: 求解器返回结果: []
[INFO] [1753419973.836081341] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419973.838045282] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58699989 1.98099995]
[INFO] [1753419973.841454019] [solver_node]: 求解器返回结果: []
[INFO] [1753419973.936141835] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419973.937929069] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58699989 1.98099995]
[INFO] [1753419973.941190475] [solver_node]: 求解器返回结果: []
[INFO] [1753419974.037198956] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419974.038694025] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58699989 1.98099995]
[INFO] [1753419974.041364540] [solver_node]: 求解器返回结果: []
[INFO] [1753419974.137895849] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763999938964844, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419974.139580361] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76399994 4.58699989 1.98099995]
[INFO] [1753419974.145717182] [solver_node]: 求解器返回结果: []
[INFO] [1753419974.236918661] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419974.239020333] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.98099995]
[INFO] [1753419974.243077883] [solver_node]: 求解器返回结果: []
[INFO] [1753419974.336955829] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419974.339187968] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.98099995]
[INFO] [1753419974.342684674] [solver_node]: 求解器返回结果: []
[INFO] [1753419974.441176309] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419974.442847252] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.98099995]
[INFO] [1753419974.445926895] [solver_node]: 求解器返回结果: []
[INFO] [1753419974.536264486] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419974.538273677] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.98099995]
[INFO] [1753419974.541716494] [solver_node]: 求解器返回结果: []
[INFO] [1753419974.636382584] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.975000023841858])
[INFO] [1753419974.639595221] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97500002]
[INFO] [1753419974.643045718] [solver_node]: 求解器返回结果: []
[INFO] [1753419974.737156246] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.975000023841858])
[INFO] [1753419974.739006169] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97500002]
[INFO] [1753419974.742999909] [solver_node]: 求解器返回结果: []
[INFO] [1753419974.836258452] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.975000023841858])
[INFO] [1753419974.837907827] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97500002]
[INFO] [1753419974.841449718] [solver_node]: 求解器返回结果: []
[INFO] [1753419974.936434662] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.975000023841858])
[INFO] [1753419974.938846516] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97500002]
[INFO] [1753419974.943895380] [solver_node]: 求解器返回结果: []
[INFO] [1753419975.038392027] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.975000023841858])
[INFO] [1753419975.041250738] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97500002]
[INFO] [1753419975.044695379] [solver_node]: 求解器返回结果: []
[INFO] [1753419975.136246244] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419975.137953957] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.98099995]
[INFO] [1753419975.144377119] [solver_node]: 求解器返回结果: []
[INFO] [1753419975.236199029] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419975.238569474] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.98099995]
[INFO] [1753419975.242640976] [solver_node]: 求解器返回结果: []
[INFO] [1753419975.336359370] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419975.339989455] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.98099995]
[INFO] [1753419975.344469796] [solver_node]: 求解器返回结果: []
[INFO] [1753419975.436282010] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419975.438371042] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.98099995]
[INFO] [1753419975.441909029] [solver_node]: 求解器返回结果: []
[INFO] [1753419975.536716308] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419975.538799067] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.98099995]
[INFO] [1753419975.542625028] [solver_node]: 求解器返回结果: []
[INFO] [1753419975.638187809] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419975.639947235] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.977     ]
[INFO] [1753419975.643409829] [solver_node]: 求解器返回结果: []
[INFO] [1753419975.736224782] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419975.737981423] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.977     ]
[INFO] [1753419975.740955752] [solver_node]: 求解器返回结果: []
[INFO] [1753419975.836353698] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419975.840687412] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.977     ]
[INFO] [1753419975.846123484] [solver_node]: 求解器返回结果: []
[INFO] [1753419975.935972332] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419975.937947538] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.977     ]
[INFO] [1753419975.941656216] [solver_node]: 求解器返回结果: []
[INFO] [1753419976.036708397] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419976.041273252] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.977     ]
[INFO] [1753419976.047727039] [solver_node]: 求解器返回结果: []
[INFO] [1753419976.136538173] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419976.140190115] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.977     ]
[INFO] [1753419976.144183343] [solver_node]: 求解器返回结果: []
[INFO] [1753419976.236305933] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9780000448226929])
[INFO] [1753419976.237853739] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97800004]
[INFO] [1753419976.240989095] [solver_node]: 求解器返回结果: []
[INFO] [1753419976.337229939] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9780000448226929])
[INFO] [1753419976.340552370] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97800004]
[INFO] [1753419976.344082230] [solver_node]: 求解器返回结果: []
[INFO] [1753419976.436488281] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9780000448226929])
[INFO] [1753419976.438076887] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97800004]
[INFO] [1753419976.441352438] [solver_node]: 求解器返回结果: []
[INFO] [1753419976.536557486] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9780000448226929])
[INFO] [1753419976.538332880] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97800004]
[INFO] [1753419976.545905185] [solver_node]: 求解器返回结果: []
[INFO] [1753419976.636574243] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9780000448226929])
[INFO] [1753419976.639638525] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97800004]
[INFO] [1753419976.645159655] [solver_node]: 求解器返回结果: []
[INFO] [1753419976.739018310] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419976.741269105] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97899997]
[INFO] [1753419976.747810957] [solver_node]: 求解器返回结果: []
[INFO] [1753419976.836814064] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419976.839700679] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97899997]
[INFO] [1753419976.844483714] [solver_node]: 求解器返回结果: []
[INFO] [1753419976.937131146] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419976.938890347] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97899997]
[INFO] [1753419976.942531153] [solver_node]: 求解器返回结果: []
[INFO] [1753419977.040067415] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419977.041867161] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97899997]
[INFO] [1753419977.045206841] [solver_node]: 求解器返回结果: []
[INFO] [1753419977.137190487] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419977.138644402] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97899997]
[INFO] [1753419977.141691885] [solver_node]: 求解器返回结果: []
[INFO] [1753419977.236004887] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.975000023841858])
[INFO] [1753419977.237516820] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97500002]
[INFO] [1753419977.241048631] [solver_node]: 求解器返回结果: []
[INFO] [1753419977.335892267] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.975000023841858])
[INFO] [1753419977.337389480] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97500002]
[INFO] [1753419977.342248869] [solver_node]: 求解器返回结果: []
[INFO] [1753419977.441262088] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.975000023841858])
[INFO] [1753419977.443678135] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97500002]
[INFO] [1753419977.447001334] [solver_node]: 求解器返回结果: []
[INFO] [1753419977.536295648] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.975000023841858])
[INFO] [1753419977.537745468] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97500002]
[INFO] [1753419977.541782249] [solver_node]: 求解器返回结果: []
[INFO] [1753419977.635914351] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.975000023841858])
[INFO] [1753419977.637416940] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97500002]
[INFO] [1753419977.641343799] [solver_node]: 求解器返回结果: []
[INFO] [1753419977.737206463] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419977.739019713] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97399998]
[INFO] [1753419977.743259698] [solver_node]: 求解器返回结果: []
[INFO] [1753419977.836030911] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.765999794006348, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419977.837595389] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76599979 4.58699989 1.97399998]
[INFO] [1753419977.841624650] [solver_node]: 求解器返回结果: []
[INFO] [1753419977.935863474] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.765999794006348, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419977.938096157] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76599979 4.58699989 1.97399998]
[INFO] [1753419977.946315226] [solver_node]: 求解器返回结果: []
[INFO] [1753419978.036429877] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.765999794006348, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419978.037933297] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76599979 4.58699989 1.97399998]
[INFO] [1753419978.040704134] [solver_node]: 求解器返回结果: []
[INFO] [1753419978.136448654] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.765999794006348, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419978.139200035] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76599979 4.58699989 1.97399998]
[INFO] [1753419978.144112001] [solver_node]: 求解器返回结果: []
[INFO] [1753419978.236519401] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.765999794006348, 4.586999893188477, 1.975000023841858])
[INFO] [1753419978.238712179] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76599979 4.58699989 1.97500002]
[INFO] [1753419978.243865205] [solver_node]: 求解器返回结果: []
[INFO] [1753419978.336413888] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.975000023841858])
[INFO] [1753419978.338418950] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.97500002]
[INFO] [1753419978.343963120] [solver_node]: 求解器返回结果: []
[INFO] [1753419978.436994148] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.975000023841858])
[INFO] [1753419978.438949769] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.97500002]
[INFO] [1753419978.442068165] [solver_node]: 求解器返回结果: []
[INFO] [1753419978.535972106] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.975000023841858])
[INFO] [1753419978.537548072] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.97500002]
[INFO] [1753419978.540317117] [solver_node]: 求解器返回结果: []
[INFO] [1753419978.636773490] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.975000023841858])
[INFO] [1753419978.638267855] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.97500002]
[INFO] [1753419978.641012995] [solver_node]: 求解器返回结果: []
[INFO] [1753419978.735713687] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419978.737199059] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.97399998]
[INFO] [1753419978.739966280] [solver_node]: 求解器返回结果: []
[INFO] [1753419978.835641903] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419978.837058858] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.97399998]
[INFO] [1753419978.839859807] [solver_node]: 求解器返回结果: []
[INFO] [1753419978.935947182] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419978.937400777] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.97399998]
[INFO] [1753419978.940966798] [solver_node]: 求解器返回结果: []
[INFO] [1753419979.036699030] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419979.038126705] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.97399998]
[INFO] [1753419979.040858790] [solver_node]: 求解器返回结果: []
[INFO] [1753419979.136616752] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419979.138078668] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.97399998]
[INFO] [1753419979.141594095] [solver_node]: 求解器返回结果: []
[INFO] [1753419979.235763003] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419979.237161878] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.97399998]
[INFO] [1753419979.239809897] [solver_node]: 求解器返回结果: []
[INFO] [1753419979.335688533] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419979.337209395] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.97399998]
[INFO] [1753419979.339910022] [solver_node]: 求解器返回结果: []
[INFO] [1753419979.435708753] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419979.437240111] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.97399998]
[INFO] [1753419979.439897826] [solver_node]: 求解器返回结果: []
[INFO] [1753419979.535744526] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419979.537280555] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.97399998]
[INFO] [1753419979.540184483] [solver_node]: 求解器返回结果: []
[INFO] [1753419979.635626567] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419979.637166277] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.97399998]
[INFO] [1753419979.640154494] [solver_node]: 求解器返回结果: []
[INFO] [1753419979.737299235] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9739999771118164])
[INFO] [1753419979.739278345] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.97399998]
[INFO] [1753419979.742434181] [solver_node]: 求解器返回结果: []
[INFO] [1753419979.836429006] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419979.837925802] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.97899997]
[INFO] [1753419979.840968837] [solver_node]: 求解器返回结果: []
[INFO] [1753419979.935875839] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419979.937525374] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.97899997]
[INFO] [1753419979.940984961] [solver_node]: 求解器返回结果: []
[INFO] [1753419980.036285603] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419980.037782048] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.97899997]
[INFO] [1753419980.040960253] [solver_node]: 求解器返回结果: []
[INFO] [1753419980.136586663] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419980.138339017] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.97899997]
[INFO] [1753419980.141737354] [solver_node]: 求解器返回结果: []
[INFO] [1753419980.235734485] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9789999723434448])
[INFO] [1753419980.237155184] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.97899997]
[INFO] [1753419980.239846051] [solver_node]: 求解器返回结果: []
[INFO] [1753419980.335758227] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419980.337304785] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.98099995]
[INFO] [1753419980.340030917] [solver_node]: 求解器返回结果: []
[INFO] [1753419980.438082078] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419980.439625083] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.98099995]
[INFO] [1753419980.443974127] [solver_node]: 求解器返回结果: []
[INFO] [1753419980.537250156] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419980.538686216] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.98099995]
[INFO] [1753419980.541375835] [solver_node]: 求解器返回结果: []
[INFO] [1753419980.637746100] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419980.639483893] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.98099995]
[INFO] [1753419980.642265162] [solver_node]: 求解器返回结果: []
[INFO] [1753419980.736053649] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.756999969482422, 4.586999893188477, 1.9809999465942383])
[INFO] [1753419980.737487085] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75699997 4.58699989 1.98099995]
[INFO] [1753419980.740372772] [solver_node]: 求解器返回结果: []
[INFO] [1753419980.836354773] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419980.837992245] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97000003]
[INFO] [1753419980.840897612] [solver_node]: 求解器返回结果: []
[INFO] [1753419980.936123439] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419980.937730126] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97000003]
[INFO] [1753419980.940465314] [solver_node]: 求解器返回结果: []
[INFO] [1753419981.035747462] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419981.037308292] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97000003]
[INFO] [1753419981.040997387] [solver_node]: 求解器返回结果: []
[INFO] [1753419981.135925354] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419981.137866896] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97000003]
[INFO] [1753419981.141236912] [solver_node]: 求解器返回结果: []
[INFO] [1753419981.236021645] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419981.237496873] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97000003]
[INFO] [1753419981.240568420] [solver_node]: 求解器返回结果: []
[INFO] [1753419981.337382856] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419981.338956422] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.97300005]
[INFO] [1753419981.341785980] [solver_node]: 求解器返回结果: []
[INFO] [1753419981.436063983] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419981.437552715] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.97300005]
[INFO] [1753419981.440442723] [solver_node]: 求解器返回结果: []
[INFO] [1753419981.535881484] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419981.537320968] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.97300005]
[INFO] [1753419981.540137918] [solver_node]: 求解器返回结果: []
[INFO] [1753419981.635834700] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419981.637309480] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.97300005]
[INFO] [1753419981.640029884] [solver_node]: 求解器返回结果: []
[INFO] [1753419981.735788875] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.764999866485596, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419981.737202022] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76499987 4.58699989 1.97300005]
[INFO] [1753419981.739898778] [solver_node]: 求解器返回结果: []
[INFO] [1753419981.835625257] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9780000448226929])
[INFO] [1753419981.837178054] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97800004]
[INFO] [1753419981.841258133] [solver_node]: 求解器返回结果: []
[INFO] [1753419981.935735883] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9780000448226929])
[INFO] [1753419981.937201928] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97800004]
[INFO] [1753419981.940056414] [solver_node]: 求解器返回结果: []
[INFO] [1753419982.035731917] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9780000448226929])
[INFO] [1753419982.037158568] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97800004]
[INFO] [1753419982.040019199] [solver_node]: 求解器返回结果: []
[INFO] [1753419982.135950228] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9780000448226929])
[INFO] [1753419982.137420176] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97800004]
[INFO] [1753419982.140369737] [solver_node]: 求解器返回结果: []
[INFO] [1753419982.236125082] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9780000448226929])
[INFO] [1753419982.238123585] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97800004]
[INFO] [1753419982.241054489] [solver_node]: 求解器返回结果: []
[INFO] [1753419982.337617946] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.975000023841858])
[INFO] [1753419982.339220633] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97500002]
[INFO] [1753419982.342610906] [solver_node]: 求解器返回结果: []
[INFO] [1753419982.436276099] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.975000023841858])
[INFO] [1753419982.437766944] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97500002]
[INFO] [1753419982.440697592] [solver_node]: 求解器返回结果: []
[INFO] [1753419982.535709115] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.975000023841858])
[INFO] [1753419982.537220345] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97500002]
[INFO] [1753419982.540164209] [solver_node]: 求解器返回结果: []
[INFO] [1753419982.636321290] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.975000023841858])
[INFO] [1753419982.638193358] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97500002]
[INFO] [1753419982.641750291] [solver_node]: 求解器返回结果: []
[INFO] [1753419982.736816535] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.975000023841858])
[INFO] [1753419982.738395861] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97500002]
[INFO] [1753419982.741397263] [solver_node]: 求解器返回结果: []
[INFO] [1753419982.835828199] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419982.838575164] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.977     ]
[INFO] [1753419982.841736696] [solver_node]: 求解器返回结果: []
[INFO] [1753419982.937557579] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419982.939552114] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.977     ]
[INFO] [1753419982.943730338] [solver_node]: 求解器返回结果: []
[INFO] [1753419983.036017233] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.585999965667725, 1.9769999980926514])
[INFO] [1753419983.039148782] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58599997 1.977     ]
[INFO] [1753419983.041897123] [solver_node]: 求解器返回结果: []
[INFO] [1753419983.137649558] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.585999965667725, 1.9769999980926514])
[INFO] [1753419983.139596124] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58599997 1.977     ]
[INFO] [1753419983.143986960] [solver_node]: 求解器返回结果: []
[INFO] [1753419983.235753047] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.585999965667725, 1.9769999980926514])
[INFO] [1753419983.237290485] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58599997 1.977     ]
[INFO] [1753419983.240257070] [solver_node]: 求解器返回结果: []
[INFO] [1753419983.335731292] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.585999965667725, 1.9769999980926514])
[INFO] [1753419983.337245178] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58599997 1.977     ]
[INFO] [1753419983.341428202] [solver_node]: 求解器返回结果: []
[INFO] [1753419983.435809987] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.585999965667725, 1.975000023841858])
[INFO] [1753419983.438396213] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58599997 1.97500002]
[INFO] [1753419983.441349966] [solver_node]: 求解器返回结果: []
[INFO] [1753419983.535895563] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.585999965667725, 1.975000023841858])
[INFO] [1753419983.537394119] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58599997 1.97500002]
[INFO] [1753419983.540249118] [solver_node]: 求解器返回结果: []
[INFO] [1753419983.637025126] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.975000023841858])
[INFO] [1753419983.638462626] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97500002]
[INFO] [1753419983.641772065] [solver_node]: 求解器返回结果: []
[INFO] [1753419983.736053625] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.975000023841858])
[INFO] [1753419983.738146433] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97500002]
[INFO] [1753419983.741098330] [solver_node]: 求解器返回结果: []
[INFO] [1753419983.836119263] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.975000023841858])
[INFO] [1753419983.837769855] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97500002]
[INFO] [1753419983.840609622] [solver_node]: 求解器返回结果: []
[INFO] [1753419983.936432075] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9780000448226929])
[INFO] [1753419983.938526195] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97800004]
[INFO] [1753419983.941814227] [solver_node]: 求解器返回结果: []
[INFO] [1753419984.036749463] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9780000448226929])
[INFO] [1753419984.038207508] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97800004]
[INFO] [1753419984.041061483] [solver_node]: 求解器返回结果: []
[INFO] [1753419984.135879759] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9780000448226929])
[INFO] [1753419984.137355627] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97800004]
[INFO] [1753419984.140260419] [solver_node]: 求解器返回结果: []
[INFO] [1753419984.235737492] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9780000448226929])
[INFO] [1753419984.237206864] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97800004]
[INFO] [1753419984.240179113] [solver_node]: 求解器返回结果: []
[INFO] [1753419984.335770076] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9780000448226929])
[INFO] [1753419984.337205272] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97800004]
[INFO] [1753419984.339880076] [solver_node]: 求解器返回结果: []
[INFO] [1753419984.436503891] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419984.437945486] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.977     ]
[INFO] [1753419984.440943432] [solver_node]: 求解器返回结果: []
[INFO] [1753419984.535965296] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419984.537421612] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.977     ]
[INFO] [1753419984.540480711] [solver_node]: 求解器返回结果: []
[INFO] [1753419984.635786613] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419984.637335090] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.977     ]
[INFO] [1753419984.640248619] [solver_node]: 求解器返回结果: []
[INFO] [1753419984.736024481] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419984.737751138] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.977     ]
[INFO] [1753419984.741031778] [solver_node]: 求解器返回结果: []
[INFO] [1753419984.837663689] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419984.839352617] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.977     ]
[INFO] [1753419984.842825868] [solver_node]: 求解器返回结果: []
[INFO] [1753419984.935680426] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419984.937153959] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419984.940080543] [solver_node]: 求解器返回结果: []
[INFO] [1753419985.036328576] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419985.037911422] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419985.040859191] [solver_node]: 求解器返回结果: []
[INFO] [1753419985.135791072] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419985.137265116] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419985.140080435] [solver_node]: 求解器返回结果: []
[INFO] [1753419985.235712489] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419985.237162053] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419985.240009276] [solver_node]: 求解器返回结果: []
[INFO] [1753419985.335718867] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419985.337155823] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419985.339927749] [solver_node]: 求解器返回结果: []
[INFO] [1753419985.436305481] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419985.437815014] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419985.440748895] [solver_node]: 求解器返回结果: []
[INFO] [1753419985.536251570] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419985.537675118] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419985.540354018] [solver_node]: 求解器返回结果: []
[INFO] [1753419985.636396352] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419985.637969214] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419985.640718291] [solver_node]: 求解器返回结果: []
[INFO] [1753419985.739245953] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419985.741246440] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419985.744086751] [solver_node]: 求解器返回结果: []
[INFO] [1753419985.836994112] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419985.840198142] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419985.845544901] [solver_node]: 求解器返回结果: []
[INFO] [1753419985.937676824] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419985.940257673] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419985.943440007] [solver_node]: 求解器返回结果: []
[INFO] [1753419986.036459787] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419986.038411633] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419986.042902504] [solver_node]: 求解器返回结果: []
[INFO] [1753419986.136127474] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419986.137583854] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419986.140446181] [solver_node]: 求解器返回结果: []
[INFO] [1753419986.235871322] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419986.237359799] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419986.240240654] [solver_node]: 求解器返回结果: []
[INFO] [1753419986.336950267] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419986.338456185] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419986.341254511] [solver_node]: 求解器返回结果: []
[INFO] [1753419986.436858759] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419986.438317891] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419986.441047064] [solver_node]: 求解器返回结果: []
[INFO] [1753419986.535901409] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419986.537569281] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419986.540560027] [solver_node]: 求解器返回结果: []
[INFO] [1753419986.635761419] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419986.637225191] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419986.640024766] [solver_node]: 求解器返回结果: []
[INFO] [1753419986.735779992] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419986.737255669] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419986.740263599] [solver_node]: 求解器返回结果: []
[INFO] [1753419986.836536212] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419986.838063697] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419986.840890184] [solver_node]: 求解器返回结果: []
[INFO] [1753419986.935892052] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419986.937417874] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419986.940918581] [solver_node]: 求解器返回结果: []
[INFO] [1753419987.036623984] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419987.038284592] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419987.041187368] [solver_node]: 求解器返回结果: []
[INFO] [1753419987.136195127] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419987.137636627] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419987.140384232] [solver_node]: 求解器返回结果: []
[INFO] [1753419987.236505101] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419987.237958089] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419987.240788895] [solver_node]: 求解器返回结果: []
[INFO] [1753419987.335914192] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419987.337363596] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419987.340316006] [solver_node]: 求解器返回结果: []
[INFO] [1753419987.437876134] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419987.439418340] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419987.442254074] [solver_node]: 求解器返回结果: []
[INFO] [1753419987.535730763] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419987.537172551] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419987.539898236] [solver_node]: 求解器返回结果: []
[INFO] [1753419987.635773564] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419987.637205655] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419987.640056591] [solver_node]: 求解器返回结果: []
[INFO] [1753419987.735756427] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419987.737193958] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419987.740070206] [solver_node]: 求解器返回结果: []
[INFO] [1753419987.838795605] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419987.840387636] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419987.843311500] [solver_node]: 求解器返回结果: []
[INFO] [1753419987.937313671] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419987.938853189] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419987.941821695] [solver_node]: 求解器返回结果: []
[INFO] [1753419988.036732332] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419988.038277674] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419988.041077185] [solver_node]: 求解器返回结果: []
[INFO] [1753419988.136475545] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419988.138609058] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419988.147165928] [solver_node]: 求解器返回结果: []
[INFO] [1753419988.235922368] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419988.238557779] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419988.241351529] [solver_node]: 求解器返回结果: []
[INFO] [1753419988.336120694] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419988.337555410] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419988.340318183] [solver_node]: 求解器返回结果: []
[INFO] [1753419988.436043782] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419988.437609764] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419988.440516733] [solver_node]: 求解器返回结果: []
[INFO] [1753419988.535994711] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419988.537666263] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419988.540775379] [solver_node]: 求解器返回结果: []
[INFO] [1753419988.636997116] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419988.638614235] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419988.642837453] [solver_node]: 求解器返回结果: []
[INFO] [1753419988.737590649] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419988.740808312] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419988.744311964] [solver_node]: 求解器返回结果: []
[INFO] [1753419988.837461417] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419988.839210570] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419988.842242981] [solver_node]: 求解器返回结果: []
[INFO] [1753419988.936252035] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419988.939504706] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419988.944301247] [solver_node]: 求解器返回结果: []
[INFO] [1753419989.037548175] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419989.039438355] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419989.042646514] [solver_node]: 求解器返回结果: []
[INFO] [1753419989.137344447] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419989.139282404] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419989.143762075] [solver_node]: 求解器返回结果: []
[INFO] [1753419989.238784463] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419989.240381198] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419989.243844785] [solver_node]: 求解器返回结果: []
[INFO] [1753419989.335936620] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419989.337397960] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419989.340290784] [solver_node]: 求解器返回结果: []
[INFO] [1753419989.437315675] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419989.439743722] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419989.442556673] [solver_node]: 求解器返回结果: []
[INFO] [1753419989.536799621] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419989.538309986] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419989.541720709] [solver_node]: 求解器返回结果: []
[INFO] [1753419989.635619426] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419989.637074911] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419989.639843956] [solver_node]: 求解器返回结果: []
[INFO] [1753419989.740249264] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419989.741865872] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419989.744645958] [solver_node]: 求解器返回结果: []
[INFO] [1753419989.835708461] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419989.837209194] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419989.840186307] [solver_node]: 求解器返回结果: []
[INFO] [1753419989.935689824] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419989.937149405] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419989.939979956] [solver_node]: 求解器返回结果: []
[INFO] [1753419990.035705366] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419990.037272692] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419990.039968585] [solver_node]: 求解器返回结果: []
[INFO] [1753419990.137856726] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419990.139494390] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419990.142481488] [solver_node]: 求解器返回结果: []
[INFO] [1753419990.235877926] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419990.238550074] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419990.241466387] [solver_node]: 求解器返回结果: []
[INFO] [1753419990.338737620] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419990.340279538] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419990.343605363] [solver_node]: 求解器返回结果: []
[INFO] [1753419990.435771346] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419990.437338320] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419990.441363230] [solver_node]: 求解器返回结果: []
[INFO] [1753419990.535830601] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419990.537362215] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419990.540287136] [solver_node]: 求解器返回结果: []
[INFO] [1753419990.635850272] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419990.637393278] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419990.640326071] [solver_node]: 求解器返回结果: []
[INFO] [1753419990.735765205] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419990.737352756] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419990.740331534] [solver_node]: 求解器返回结果: []
[INFO] [1753419990.836220149] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419990.837973591] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419990.841028082] [solver_node]: 求解器返回结果: []
[INFO] [1753419990.937783210] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419990.939313191] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419990.942016252] [solver_node]: 求解器返回结果: []
[INFO] [1753419991.037233623] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419991.038825526] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419991.043387854] [solver_node]: 求解器返回结果: []
[INFO] [1753419991.136200828] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419991.138244547] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419991.141331839] [solver_node]: 求解器返回结果: []
[INFO] [1753419991.235875022] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419991.237341195] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419991.240146817] [solver_node]: 求解器返回结果: []
[INFO] [1753419991.335794534] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419991.337288419] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419991.340219964] [solver_node]: 求解器返回结果: []
[INFO] [1753419991.435835648] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419991.437398302] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419991.440352471] [solver_node]: 求解器返回结果: []
[INFO] [1753419991.536466149] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.972000002861023])
[INFO] [1753419991.537943458] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.972     ]
[INFO] [1753419991.540706231] [solver_node]: 求解器返回结果: []
[INFO] [1753419991.635748688] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.972000002861023])
[INFO] [1753419991.637193740] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.972     ]
[INFO] [1753419991.640691312] [solver_node]: 求解器返回结果: []
[INFO] [1753419991.735936717] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.972000002861023])
[INFO] [1753419991.738424861] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.972     ]
[INFO] [1753419991.741984098] [solver_node]: 求解器返回结果: []
[INFO] [1753419991.836431951] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.972000002861023])
[INFO] [1753419991.837978190] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.972     ]
[INFO] [1753419991.841878713] [solver_node]: 求解器返回结果: []
[INFO] [1753419991.937592447] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.972000002861023])
[INFO] [1753419991.939215103] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.972     ]
[INFO] [1753419991.942326203] [solver_node]: 求解器返回结果: []
[INFO] [1753419992.037038478] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.972000002861023])
[INFO] [1753419992.039216473] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.972     ]
[INFO] [1753419992.042044592] [solver_node]: 求解器返回结果: []
[INFO] [1753419992.138916462] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.586999893188477, 1.972000002861023])
[INFO] [1753419992.143896079] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58699989 1.972     ]
[INFO] [1753419992.147115790] [solver_node]: 求解器返回结果: []
[INFO] [1753419992.235766444] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.586999893188477, 1.972000002861023])
[INFO] [1753419992.237248713] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58699989 1.972     ]
[INFO] [1753419992.239993823] [solver_node]: 求解器返回结果: []
[INFO] [1753419992.335718471] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.586999893188477, 1.972000002861023])
[INFO] [1753419992.337189028] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58699989 1.972     ]
[INFO] [1753419992.339981690] [solver_node]: 求解器返回结果: []
[INFO] [1753419992.436950778] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.586999893188477, 1.972000002861023])
[INFO] [1753419992.438411255] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58699989 1.972     ]
[INFO] [1753419992.441268239] [solver_node]: 求解器返回结果: []
[INFO] [1753419992.535689085] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.586999893188477, 1.972000002861023])
[INFO] [1753419992.537156186] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58699989 1.972     ]
[INFO] [1753419992.540304951] [solver_node]: 求解器返回结果: []
[INFO] [1753419992.637904612] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419992.639537412] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97000003]
[INFO] [1753419992.642584255] [solver_node]: 求解器返回结果: []
[INFO] [1753419992.738317800] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419992.739925639] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97000003]
[INFO] [1753419992.743303529] [solver_node]: 求解器返回结果: []
[INFO] [1753419992.835667023] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419992.837185165] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97000003]
[INFO] [1753419992.840188679] [solver_node]: 求解器返回结果: []
[INFO] [1753419992.935667467] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419992.937195977] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97000003]
[INFO] [1753419992.940097377] [solver_node]: 求解器返回结果: []
[INFO] [1753419993.037704751] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9700000286102295])
[INFO] [1753419993.039353935] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97000003]
[INFO] [1753419993.042345033] [solver_node]: 求解器返回结果: []
[INFO] [1753419993.136040108] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419993.137495625] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97599995]
[INFO] [1753419993.140302271] [solver_node]: 求解器返回结果: []
[INFO] [1753419993.236220718] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419993.237705515] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97599995]
[INFO] [1753419993.240633284] [solver_node]: 求解器返回结果: []
[INFO] [1753419993.335895429] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419993.338215251] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97599995]
[INFO] [1753419993.341965884] [solver_node]: 求解器返回结果: []
[INFO] [1753419993.435988645] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419993.437542339] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97599995]
[INFO] [1753419993.440355034] [solver_node]: 求解器返回结果: []
[INFO] [1753419993.536040836] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9759999513626099])
[INFO] [1753419993.537839783] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97599995]
[INFO] [1753419993.540858818] [solver_node]: 求解器返回结果: []
[INFO] [1753419993.635772189] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9819999933242798])
[INFO] [1753419993.637296666] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.98199999]
[INFO] [1753419993.640168786] [solver_node]: 求解器返回结果: []
[INFO] [1753419993.735663800] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9819999933242798])
[INFO] [1753419993.737154870] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.98199999]
[INFO] [1753419993.740113071] [solver_node]: 求解器返回结果: []
[INFO] [1753419993.835698775] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9819999933242798])
[INFO] [1753419993.837285686] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.98199999]
[INFO] [1753419993.840400851] [solver_node]: 求解器返回结果: []
[INFO] [1753419993.936554182] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9819999933242798])
[INFO] [1753419993.938033730] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.98199999]
[INFO] [1753419993.940792056] [solver_node]: 求解器返回结果: []
[INFO] [1753419994.035701108] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9819999933242798])
[INFO] [1753419994.037175504] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.98199999]
[INFO] [1753419994.040078409] [solver_node]: 求解器返回结果: []
[INFO] [1753419994.135709652] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9819999933242798])
[INFO] [1753419994.137215762] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.98199999]
[INFO] [1753419994.140190380] [solver_node]: 求解器返回结果: []
[INFO] [1753419994.235823799] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419994.237407574] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97300005]
[INFO] [1753419994.240309966] [solver_node]: 求解器返回结果: []
[INFO] [1753419994.336380418] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419994.337858239] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97300005]
[INFO] [1753419994.340592532] [solver_node]: 求解器返回结果: []
[INFO] [1753419994.435909241] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419994.437568537] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97300005]
[INFO] [1753419994.440979676] [solver_node]: 求解器返回结果: []
[INFO] [1753419994.535872409] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419994.537800574] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97300005]
[INFO] [1753419994.541266242] [solver_node]: 求解器返回结果: []
[INFO] [1753419994.635837880] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419994.637361334] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97300005]
[INFO] [1753419994.640140044] [solver_node]: 求解器返回结果: []
[INFO] [1753419994.737555290] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419994.739770533] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97300005]
[INFO] [1753419994.744127418] [solver_node]: 求解器返回结果: []
[INFO] [1753419994.835965563] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419994.839028695] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97300005]
[INFO] [1753419994.841835854] [solver_node]: 求解器返回结果: []
[INFO] [1753419994.936777164] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419994.938884373] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97300005]
[INFO] [1753419994.943823285] [solver_node]: 求解器返回结果: []
[INFO] [1753419995.038359596] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419995.040741594] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97300005]
[INFO] [1753419995.043508464] [solver_node]: 求解器返回结果: []
[INFO] [1753419995.135850845] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419995.139868460] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97300005]
[INFO] [1753419995.142685027] [solver_node]: 求解器返回结果: []
[INFO] [1753419995.235718589] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419995.237749733] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97300005]
[INFO] [1753419995.240667166] [solver_node]: 求解器返回结果: []
[INFO] [1753419995.335686368] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419995.337828169] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97300005]
[INFO] [1753419995.340713090] [solver_node]: 求解器返回结果: []
[INFO] [1753419995.435861414] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419995.437697706] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97300005]
[INFO] [1753419995.442469095] [solver_node]: 求解器返回结果: []
[INFO] [1753419995.535778823] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419995.537222147] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97300005]
[INFO] [1753419995.539948952] [solver_node]: 求解器返回结果: []
[INFO] [1753419995.635709992] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419995.637197253] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97300005]
[INFO] [1753419995.640054653] [solver_node]: 求解器返回结果: []
[INFO] [1753419995.735812749] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419995.737491726] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97300005]
[INFO] [1753419995.740545737] [solver_node]: 求解器返回结果: []
[INFO] [1753419995.835745710] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419995.837253676] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97300005]
[INFO] [1753419995.840039810] [solver_node]: 求解器返回结果: []
[INFO] [1753419995.935983606] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419995.939027601] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97300005]
[INFO] [1753419995.941782983] [solver_node]: 求解器返回结果: []
[INFO] [1753419996.035769237] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419996.037268274] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97300005]
[INFO] [1753419996.040007592] [solver_node]: 求解器返回结果: []
[INFO] [1753419996.135692793] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419996.137145013] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97300005]
[INFO] [1753419996.139856330] [solver_node]: 求解器返回结果: []
[INFO] [1753419996.235807904] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419996.237380959] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97300005]
[INFO] [1753419996.242151740] [solver_node]: 求解器返回结果: []
[INFO] [1753419996.335820453] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419996.337325539] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97300005]
[INFO] [1753419996.340630308] [solver_node]: 求解器返回结果: []
[INFO] [1753419996.435865067] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419996.437396841] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97300005]
[INFO] [1753419996.440235425] [solver_node]: 求解器返回结果: []
[INFO] [1753419996.536075989] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419996.537577106] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97300005]
[INFO] [1753419996.540502091] [solver_node]: 求解器返回结果: []
[INFO] [1753419996.635967992] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419996.637936734] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97300005]
[INFO] [1753419996.643088291] [solver_node]: 求解器返回结果: []
[INFO] [1753419996.738834357] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.975000023841858])
[INFO] [1753419996.740640120] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97500002]
[INFO] [1753419996.744346305] [solver_node]: 求解器返回结果: []
[INFO] [1753419996.835763134] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.975000023841858])
[INFO] [1753419996.837230971] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97500002]
[INFO] [1753419996.840105747] [solver_node]: 求解器返回结果: []
[INFO] [1753419996.935736419] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.975000023841858])
[INFO] [1753419996.937230528] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97500002]
[INFO] [1753419996.940150585] [solver_node]: 求解器返回结果: []
[INFO] [1753419997.035804714] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.975000023841858])
[INFO] [1753419997.037296583] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97500002]
[INFO] [1753419997.040279618] [solver_node]: 求解器返回结果: []
[INFO] [1753419997.136172057] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.975000023841858])
[INFO] [1753419997.137674614] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97500002]
[INFO] [1753419997.140481677] [solver_node]: 求解器返回结果: []
[INFO] [1753419997.235777048] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419997.237292310] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58699989 1.977     ]
[INFO] [1753419997.240104557] [solver_node]: 求解器返回结果: []
[INFO] [1753419997.337620740] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419997.339189795] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58699989 1.977     ]
[INFO] [1753419997.342069307] [solver_node]: 求解器返回结果: []
[INFO] [1753419997.436367763] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419997.440216510] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58699989 1.977     ]
[INFO] [1753419997.443050838] [solver_node]: 求解器返回结果: []
[INFO] [1753419997.536329850] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419997.537791670] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58699989 1.977     ]
[INFO] [1753419997.540666991] [solver_node]: 求解器返回结果: []
[INFO] [1753419997.635892921] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75600004196167, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419997.637381526] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75600004 4.58699989 1.977     ]
[INFO] [1753419997.640370416] [solver_node]: 求解器返回结果: []
[INFO] [1753419997.736530765] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419997.738969213] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.977     ]
[INFO] [1753419997.741678450] [solver_node]: 求解器返回结果: []
[INFO] [1753419997.837950928] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419997.839540815] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.977     ]
[INFO] [1753419997.842216004] [solver_node]: 求解器返回结果: []
[INFO] [1753419997.937443502] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419997.939486902] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.977     ]
[INFO] [1753419997.943743945] [solver_node]: 求解器返回结果: []
[INFO] [1753419998.035870839] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419998.037519832] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.977     ]
[INFO] [1753419998.041350659] [solver_node]: 求解器返回结果: []
[INFO] [1753419998.137538818] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419998.140089620] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.977     ]
[INFO] [1753419998.142869738] [solver_node]: 求解器返回结果: []
[INFO] [1753419998.235871627] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9769999980926514])
[INFO] [1753419998.237345128] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.977     ]
[INFO] [1753419998.240155807] [solver_node]: 求解器返回结果: []
[INFO] [1753419998.336199515] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419998.337642456] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97300005]
[INFO] [1753419998.340564145] [solver_node]: 求解器返回结果: []
[INFO] [1753419998.435728956] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419998.437140376] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97300005]
[INFO] [1753419998.439944303] [solver_node]: 求解器返回结果: []
[INFO] [1753419998.535720006] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419998.537177346] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97300005]
[INFO] [1753419998.540034747] [solver_node]: 求解器返回结果: []
[INFO] [1753419998.636023094] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419998.637980028] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97300005]
[INFO] [1753419998.641193787] [solver_node]: 求解器返回结果: []
[INFO] [1753419998.735787163] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419998.737279224] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97300005]
[INFO] [1753419998.739995246] [solver_node]: 求解器返回结果: []
[INFO] [1753419998.835752548] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419998.837307619] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97300005]
[INFO] [1753419998.840069977] [solver_node]: 求解器返回结果: []
[INFO] [1753419998.936960230] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419998.938423523] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97300005]
[INFO] [1753419998.941149720] [solver_node]: 求解器返回结果: []
[INFO] [1753419999.035774713] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419999.037303063] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97300005]
[INFO] [1753419999.040293650] [solver_node]: 求解器返回结果: []
[INFO] [1753419999.135795910] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419999.137223010] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97300005]
[INFO] [1753419999.140000249] [solver_node]: 求解器返回结果: []
[INFO] [1753419999.235742449] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419999.237240271] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97300005]
[INFO] [1753419999.240031526] [solver_node]: 求解器返回结果: []
[INFO] [1753419999.335757054] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419999.337246619] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97300005]
[INFO] [1753419999.340295383] [solver_node]: 求解器返回结果: []
[INFO] [1753419999.436741246] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419999.438205594] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97300005]
[INFO] [1753419999.442729459] [solver_node]: 求解器返回结果: []
[INFO] [1753419999.536360418] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419999.537835647] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97300005]
[INFO] [1753419999.542592285] [solver_node]: 求解器返回结果: []
[INFO] [1753419999.638746622] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419999.640399454] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97300005]
[INFO] [1753419999.643547484] [solver_node]: 求解器返回结果: []
[INFO] [1753419999.736069941] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419999.737700789] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97300005]
[INFO] [1753419999.740519533] [solver_node]: 求解器返回结果: []
[INFO] [1753419999.841538989] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419999.844245666] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97300005]
[INFO] [1753419999.847276254] [solver_node]: 求解器返回结果: []
[INFO] [1753419999.935994733] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9730000495910645])
[INFO] [1753419999.937447561] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97300005]
[INFO] [1753419999.944292912] [solver_node]: 求解器返回结果: []
[INFO] [1753420000.035977913] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9730000495910645])
[INFO] [1753420000.037459606] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97300005]
[INFO] [1753420000.040236717] [solver_node]: 求解器返回结果: []
[INFO] [1753420000.138350807] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9730000495910645])
[INFO] [1753420000.139889909] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97300005]
[INFO] [1753420000.143136629] [solver_node]: 求解器返回结果: []
[INFO] [1753420000.235803475] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9730000495910645])
[INFO] [1753420000.237294321] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97300005]
[INFO] [1753420000.240163465] [solver_node]: 求解器返回结果: []
[INFO] [1753420000.336071111] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9730000495910645])
[INFO] [1753420000.338112271] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97300005]
[INFO] [1753420000.341909914] [solver_node]: 求解器返回结果: []
[INFO] [1753420000.437675734] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9730000495910645])
[INFO] [1753420000.439174323] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97300005]
[INFO] [1753420000.442021611] [solver_node]: 求解器返回结果: []
[INFO] [1753420000.535984003] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9730000495910645])
[INFO] [1753420000.537400639] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97300005]
[INFO] [1753420000.540463099] [solver_node]: 求解器返回结果: []
[INFO] [1753420000.636059955] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9730000495910645])
[INFO] [1753420000.637750612] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97300005]
[INFO] [1753420000.641196184] [solver_node]: 求解器返回结果: []
[INFO] [1753420000.740837664] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9730000495910645])
[INFO] [1753420000.744008574] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97300005]
[INFO] [1753420000.747608709] [solver_node]: 求解器返回结果: []
[INFO] [1753420000.836845856] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9759999513626099])
[INFO] [1753420000.838344221] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97599995]
[INFO] [1753420000.841310424] [solver_node]: 求解器返回结果: []
[INFO] [1753420000.937070675] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9759999513626099])
[INFO] [1753420000.939025402] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97599995]
[INFO] [1753420000.943258285] [solver_node]: 求解器返回结果: []
[INFO] [1753420001.039550611] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9759999513626099])
[INFO] [1753420001.043409599] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97599995]
[INFO] [1753420001.048315808] [solver_node]: 求解器返回结果: []
[INFO] [1753420001.139980621] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9759999513626099])
[INFO] [1753420001.141676750] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97599995]
[INFO] [1753420001.145411288] [solver_node]: 求解器返回结果: []
[INFO] [1753420001.236597851] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9759999513626099])
[INFO] [1753420001.239312465] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97599995]
[INFO] [1753420001.243696455] [solver_node]: 求解器返回结果: []
[INFO] [1753420001.336458378] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9759999513626099])
[INFO] [1753420001.337989288] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97599995]
[INFO] [1753420001.341619215] [solver_node]: 求解器返回结果: []
[INFO] [1753420001.440346407] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9769999980926514])
[INFO] [1753420001.444677853] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.977     ]
[INFO] [1753420001.448509608] [solver_node]: 求解器返回结果: []
[INFO] [1753420001.539931024] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9769999980926514])
[INFO] [1753420001.547859564] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.977     ]
[INFO] [1753420001.550862312] [solver_node]: 求解器返回结果: []
[INFO] [1753420001.636146167] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9769999980926514])
[INFO] [1753420001.638080797] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.977     ]
[INFO] [1753420001.641352829] [solver_node]: 求解器返回结果: []
[INFO] [1753420001.740777411] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9769999980926514])
[INFO] [1753420001.744174758] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.977     ]
[INFO] [1753420001.749477230] [solver_node]: 求解器返回结果: []
[INFO] [1753420001.835947765] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9769999980926514])
[INFO] [1753420001.837889435] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.977     ]
[INFO] [1753420001.842087470] [solver_node]: 求解器返回结果: []
[INFO] [1753420001.935968647] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9759999513626099])
[INFO] [1753420001.937517829] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97599995]
[INFO] [1753420001.941452083] [solver_node]: 求解器返回结果: []
[INFO] [1753420002.036193277] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9759999513626099])
[INFO] [1753420002.038153700] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97599995]
[INFO] [1753420002.041779115] [solver_node]: 求解器返回结果: []
[INFO] [1753420002.137340455] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9759999513626099])
[INFO] [1753420002.139020264] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97599995]
[INFO] [1753420002.141896065] [solver_node]: 求解器返回结果: []
[INFO] [1753420002.236063713] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9759999513626099])
[INFO] [1753420002.238019592] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97599995]
[INFO] [1753420002.244079295] [solver_node]: 求解器返回结果: []
[INFO] [1753420002.339970754] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.9759999513626099])
[INFO] [1753420002.344002865] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97599995]
[INFO] [1753420002.350611988] [solver_node]: 求解器返回结果: []
[INFO] [1753420002.436159882] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.975000023841858])
[INFO] [1753420002.438328373] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97500002]
[INFO] [1753420002.446000108] [solver_node]: 求解器返回结果: []
[INFO] [1753420002.536968526] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.975000023841858])
[INFO] [1753420002.538944532] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97500002]
[INFO] [1753420002.542151572] [solver_node]: 求解器返回结果: []
[INFO] [1753420002.636117808] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.975000023841858])
[INFO] [1753420002.637627950] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97500002]
[INFO] [1753420002.643163131] [solver_node]: 求解器返回结果: []
[INFO] [1753420002.736008450] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.76200008392334, 4.586999893188477, 1.975000023841858])
[INFO] [1753420002.737514911] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76200008 4.58699989 1.97500002]
[INFO] [1753420002.742708934] [solver_node]: 求解器返回结果: []
[INFO] [1753420002.836524927] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.975000023841858])
[INFO] [1753420002.841136282] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97500002]
[INFO] [1753420002.846507940] [solver_node]: 求解器返回结果: []
[INFO] [1753420002.936426417] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9780000448226929])
[INFO] [1753420002.937888205] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97800004]
[INFO] [1753420002.941622839] [solver_node]: 求解器返回结果: []
[INFO] [1753420003.036727435] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9780000448226929])
[INFO] [1753420003.040952990] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97800004]
[INFO] [1753420003.046493676] [solver_node]: 求解器返回结果: []
[INFO] [1753420003.137617330] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9780000448226929])
[INFO] [1753420003.139150481] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97800004]
[INFO] [1753420003.146976971] [solver_node]: 求解器返回结果: []
[INFO] [1753420003.236603412] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.761000156402588, 4.586999893188477, 1.9780000448226929])
[INFO] [1753420003.239820404] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76100016 4.58699989 1.97800004]
[INFO] [1753420003.242520777] [solver_node]: 求解器返回结果: []
[INFO] [1753420003.335967485] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9780000448226929])
[INFO] [1753420003.337410138] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97800004]
[INFO] [1753420003.340677850] [solver_node]: 求解器返回结果: []
[INFO] [1753420003.436331450] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9730000495910645])
[INFO] [1753420003.438289857] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97300005]
[INFO] [1753420003.441339773] [solver_node]: 求解器返回结果: []
[INFO] [1753420003.538639870] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9730000495910645])
[INFO] [1753420003.540283166] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97300005]
[INFO] [1753420003.543374299] [solver_node]: 求解器返回结果: []
[INFO] [1753420003.636357095] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9730000495910645])
[INFO] [1753420003.638319565] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97300005]
[INFO] [1753420003.645927939] [solver_node]: 求解器返回结果: []
[INFO] [1753420003.736078263] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.586999893188477, 1.9730000495910645])
[INFO] [1753420003.738439397] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.58699989 1.97300005]
[INFO] [1753420003.747115569] [solver_node]: 求解器返回结果: []
[INFO] [1753420003.836670712] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.9730000495910645])
[INFO] [1753420003.838222807] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.97300005]
[INFO] [1753420003.843628674] [solver_node]: 求解器返回结果: []
[INFO] [1753420003.939488966] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.968000054359436])
[INFO] [1753420003.941792723] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.96800005]
[INFO] [1753420003.947794154] [solver_node]: 求解器返回结果: []
[INFO] [1753420004.038567690] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.968000054359436])
[INFO] [1753420004.040127593] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.96800005]
[INFO] [1753420004.044099128] [solver_node]: 求解器返回结果: []
[INFO] [1753420004.136649565] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.968000054359436])
[INFO] [1753420004.138490305] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.96800005]
[INFO] [1753420004.141490300] [solver_node]: 求解器返回结果: []
[INFO] [1753420004.236772311] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.968000054359436])
[INFO] [1753420004.239262312] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.96800005]
[INFO] [1753420004.242994578] [solver_node]: 求解器返回结果: []
[INFO] [1753420004.336577868] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.760000228881836, 4.586999893188477, 1.968000054359436])
[INFO] [1753420004.338926682] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76000023 4.58699989 1.96800005]
[INFO] [1753420004.343706936] [solver_node]: 求解器返回结果: []
[INFO] [1753420004.437231057] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9800000190734863])
[INFO] [1753420004.440132554] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.98000002]
[INFO] [1753420004.442760798] [solver_node]: 求解器返回结果: []
[INFO] [1753420004.538236349] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9800000190734863])
[INFO] [1753420004.539738586] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.98000002]
[INFO] [1753420004.542490897] [solver_node]: 求解器返回结果: []
[INFO] [1753420004.640384703] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.585999965667725, 1.9800000190734863])
[INFO] [1753420004.643233080] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58599997 1.98000002]
[INFO] [1753420004.647447723] [solver_node]: 求解器返回结果: []
[INFO] [1753420004.736299751] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.585999965667725, 1.9800000190734863])
[INFO] [1753420004.737790180] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58599997 1.98000002]
[INFO] [1753420004.740663965] [solver_node]: 求解器返回结果: []
[INFO] [1753420004.836047930] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.585999965667725, 1.9800000190734863])
[INFO] [1753420004.837539448] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58599997 1.98000002]
[INFO] [1753420004.840321647] [solver_node]: 求解器返回结果: []
[INFO] [1753420004.936027474] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.585999965667725, 1.9800000190734863])
[INFO] [1753420004.937877206] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58599997 1.98000002]
[INFO] [1753420004.943891885] [solver_node]: 求解器返回结果: []
[INFO] [1753420005.036184750] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.585999965667725, 1.9730000495910645])
[INFO] [1753420005.039033894] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58599997 1.97300005]
[INFO] [1753420005.045345603] [solver_node]: 求解器返回结果: []
[INFO] [1753420005.135899619] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.585999965667725, 1.9730000495910645])
[INFO] [1753420005.137347200] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58599997 1.97300005]
[INFO] [1753420005.140092214] [solver_node]: 求解器返回结果: []
[INFO] [1753420005.236078817] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.585999965667725, 1.9730000495910645])
[INFO] [1753420005.237648032] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58599997 1.97300005]
[INFO] [1753420005.246029478] [solver_node]: 求解器返回结果: []
[INFO] [1753420005.336091132] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9730000495910645])
[INFO] [1753420005.337540504] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97300005]
[INFO] [1753420005.341188993] [solver_node]: 求解器返回结果: []
[INFO] [1753420005.436390716] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.586999893188477, 1.9730000495910645])
[INFO] [1753420005.437809336] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.58699989 1.97300005]
[INFO] [1753420005.441193339] [solver_node]: 求解器返回结果: []
[INFO] [1753420005.536789087] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.598999977111816, 1.9789999723434448])
[INFO] [1753420005.538768390] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.59899998 1.97899997]
[INFO] [1753420005.542550449] [solver_node]: 求解器返回结果: []
[INFO] [1753420005.636049931] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.611000061035156, 1.9789999723434448])
[INFO] [1753420005.637922800] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.61100006 1.97899997]
[INFO] [1753420005.642949363] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420005.644424048] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420005.645523238] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420005.646366103] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420005.647156838] [solver_node]: 求解器返回结果: [((1.5972420079970033, 1.5992420079970031), (4.722434936832285, 4.724434936832286), 0.6908376212735449), ((1.6784513703020882, 1.680451370302088), (4.9177619752814605, 4.919761975281461), 0.6393235804179193), ((8.398757992002997, 8.400757992002996), (3.275565063167715, 3.2775650631677147), -2.450755032316248), ((8.317548629697912, 8.31954862969791), (3.08023802471854, 3.08223802471854), -2.5022690731718735)]
[INFO] [1753420005.735829953] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.611000061035156, 1.9789999723434448])
[INFO] [1753420005.738528278] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.61100006 1.97899997]
[INFO] [1753420005.741797879] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420005.742641512] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420005.743844735] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420005.744699248] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420005.745458527] [solver_node]: 求解器返回结果: [((1.5972420079970033, 1.5992420079970031), (4.722434936832285, 4.724434936832286), 0.6908376212735449), ((1.6784513703020882, 1.680451370302088), (4.9177619752814605, 4.919761975281461), 0.6393235804179193), ((8.398757992002997, 8.400757992002996), (3.275565063167715, 3.2775650631677147), -2.450755032316248), ((8.317548629697912, 8.31954862969791), (3.08023802471854, 3.08223802471854), -2.5022690731718735)]
[INFO] [1753420005.837185142] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.640999794006348, 1.9789999723434448])
[INFO] [1753420005.839170270] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.64099979 1.97899997]
[INFO] [1753420005.843181581] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420005.844198945] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420005.844954832] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420005.845685086] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420005.846434445] [solver_node]: 求解器返回结果: [((1.5145125295887387, 1.5165125295887385), (4.521226493136974, 4.523226493136975), 0.7407489634445237), ((1.7443320901431691, 1.746332090143169), (5.074371130837784, 5.076371130837785), 0.5952980975926487), ((8.481487470411261, 8.48348747041126), (3.4767735068630246, 3.4787735068630243), -2.4008436901452694), ((8.251667909856831, 8.25366790985683), (2.9236288691622137, 2.9256288691622134), -2.5462945559971444)]
[INFO] [1753420005.936836298] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.640999794006348, 1.9789999723434448])
[INFO] [1753420005.938815313] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.64099979 1.97899997]
[INFO] [1753420005.943601456] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420005.944593283] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420005.945340850] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420005.946068769] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420005.946847024] [solver_node]: 求解器返回结果: [((1.5145125295887387, 1.5165125295887385), (4.521226493136974, 4.523226493136975), 0.7407489634445237), ((1.7443320901431691, 1.746332090143169), (5.074371130837784, 5.076371130837785), 0.5952980975926487), ((8.481487470411261, 8.48348747041126), (3.4767735068630246, 3.4787735068630243), -2.4008436901452694), ((8.251667909856831, 8.25366790985683), (2.9236288691622137, 2.9256288691622134), -2.5462945559971444)]
[INFO] [1753420006.036356732] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.64300012588501, 3.7699999809265137])
[INFO] [1753420006.037858778] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.64300013 3.76999998]
[INFO] [1753420006.041111898] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420006.042023660] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420006.042764891] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420006.043453800] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420006.044227608] [solver_node]: 求解器返回结果: [((5.542979496939686, 5.544979496939686), (4.431201978531228, 4.433201978531229), -1.1294925607477317), ((5.303042133883114, 5.305042133883115), (4.381443034198404, 4.383443034198405), -2.098599674211467), ((4.453020503060312, 4.455020503060313), (3.5667980214687707, 3.5687980214687705), 2.0121000928420614), ((4.6929578661168865, 4.694957866116887), (3.6165569658015957, 3.6185569658015955), 1.0429929793783257), ((2.829548341340205, 2.8315483413402047), (4.511737073572003, 4.5137370735720035), 0.7430350002786734), ((3.2318994632883133, 3.233899463288313), (5.080891850876939, 5.08289185087694), 0.593403551418461), ((7.166451658659794, 7.168451658659794), (3.486262926427996, 3.488262926427996), -2.3985576533111197), ((6.764100536711685, 6.7661005367116855), (2.9171081491230604, 2.91910814912306), -2.548189102171332)]
[INFO] [1753420006.136611326] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.64300012588501, 3.7699999809265137])
[INFO] [1753420006.138037882] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.64300013 3.76999998]
[INFO] [1753420006.141209241] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420006.142014153] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420006.143192416] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420006.143908942] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420006.144656253] [solver_node]: 求解器返回结果: [((5.542979496939686, 5.544979496939686), (4.431201978531228, 4.433201978531229), -1.1294925607477317), ((5.303042133883114, 5.305042133883115), (4.381443034198404, 4.383443034198405), -2.098599674211467), ((4.453020503060312, 4.455020503060313), (3.5667980214687707, 3.5687980214687705), 2.0121000928420614), ((4.6929578661168865, 4.694957866116887), (3.6165569658015957, 3.6185569658015955), 1.0429929793783257), ((2.829548341340205, 2.8315483413402047), (4.511737073572003, 4.5137370735720035), 0.7430350002786734), ((3.2318994632883133, 3.233899463288313), (5.080891850876939, 5.08289185087694), 0.593403551418461), ((7.166451658659794, 7.168451658659794), (3.486262926427996, 3.488262926427996), -2.3985576533111197), ((6.764100536711685, 6.7661005367116855), (2.9171081491230604, 2.91910814912306), -2.548189102171332)]
[INFO] [1753420006.236125297] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.644999980926514, 3.7699999809265137])
[INFO] [1753420006.237631599] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.64499998 3.76999998]
[INFO] [1753420006.240804398] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420006.241627294] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420006.242554928] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420006.243364032] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420006.244146992] [solver_node]: 求解器返回结果: [((5.541851527858963, 5.543851527858964), (4.432034154717276, 4.434034154717277), -1.1290634397454884), ((5.301777599452339, 5.3037775994523395), (4.382199359536586, 4.384199359536587), -2.099009671289439), ((4.454148472141036, 4.456148472141036), (3.565965845282723, 3.567965845282723), 2.0125292138443047), ((4.69422240054766, 4.6962224005476605), (3.6158006404634127, 3.6178006404634124), 1.042582982300354), ((2.8230534840817962, 2.825053484081796), (4.502463384874809, 4.50446338487481), 0.745263597643632), ((3.2364077207707806, 3.2384077207707804), (5.087198188805805, 5.089198188805805), 0.5915662304897361), ((7.172946515918204, 7.174946515918204), (3.4955366151251916, 3.4975366151251914), -2.3963290559461607), ((6.759592279229219, 6.76159227922922), (2.9108018111941956, 2.9128018111941953), -2.5500264231000567)]
[INFO] [1753420006.336497429] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.763000011444092, 4.644999980926514, 3.7699999809265137])
[INFO] [1753420006.339586546] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.76300001 4.64499998 3.76999998]
[INFO] [1753420006.343395102] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420006.344309776] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420006.345070815] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420006.345785517] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420006.346555805] [solver_node]: 求解器返回结果: [((5.541851527858963, 5.543851527858964), (4.432034154717276, 4.434034154717277), -1.1290634397454884), ((5.301777599452339, 5.3037775994523395), (4.382199359536586, 4.384199359536587), -2.099009671289439), ((4.454148472141036, 4.456148472141036), (3.565965845282723, 3.567965845282723), 2.0125292138443047), ((4.69422240054766, 4.6962224005476605), (3.6158006404634127, 3.6178006404634124), 1.042582982300354), ((2.8230534840817962, 2.825053484081796), (4.502463384874809, 4.50446338487481), 0.745263597643632), ((3.2364077207707806, 3.2384077207707804), (5.087198188805805, 5.089198188805805), 0.5915662304897361), ((7.172946515918204, 7.174946515918204), (3.4955366151251916, 3.4975366151251914), -2.3963290559461607), ((6.759592279229219, 6.76159227922922), (2.9108018111941956, 2.9128018111941953), -2.5500264231000567)]
[INFO] [1753420006.436021385] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.5879998207092285, 4.644999980926514, 3.7699999809265137])
[INFO] [1753420006.437686890] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.58799982 4.64499998 3.76999998]
[INFO] [1753420006.441974687] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420006.444705301] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420006.446393526] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420006.447214855] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420006.447984022] [solver_node]: 求解器返回结果: [((5.383648945597647, 5.385648945597648), (4.432034154717276, 4.434034154717277), -1.1290634397454884), ((5.150628699984316, 5.152628699984317), (4.382199359536586, 4.384199359536587), -2.099009671289439), ((4.612351054402351, 4.614351054402352), (3.565965845282723, 3.567965845282723), 2.0125292138443047), ((4.845371300015683, 4.847371300015683), (3.6158006404634127, 3.6178006404634124), 1.042582982300354)]
[INFO] [1753420006.536953656] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.5879998207092285, 4.644999980926514, 27.483999252319336])
[WARN] [1753420006.538171248] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420006.636402858] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.900000095367432, 4.644999980926514, 27.483999252319336])
[WARN] [1753420006.637473983] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420006.736801551] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.900000095367432, 4.644999980926514, 27.483999252319336])
[WARN] [1753420006.738162922] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420006.838475981] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.900000095367432, 4.678999900817871, 27.483999252319336])
[WARN] [1753420006.839611364] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420006.936572164] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.9019999504089355, 4.678999900817871, 27.483999252319336])
[WARN] [1753420006.937590296] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420007.041106236] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.9019999504089355, 4.686999797821045, 27.483999252319336])
[WARN] [1753420007.042598746] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420007.136402238] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.936999797821045, 4.933000087738037, 27.483999252319336])
[WARN] [1753420007.137402226] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420007.236177017] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.936999797821045, 5.184000015258789, 27.483999252319336])
[WARN] [1753420007.237234414] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420007.336196600] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.936999797821045, 5.184000015258789, 27.483999252319336])
[WARN] [1753420007.337246317] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420007.437614324] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.936999797821045, 5.335999965667725, 27.483999252319336])
[WARN] [1753420007.438840300] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420007.540308232] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.936999797821045, 5.335999965667725, 27.483999252319336])
[WARN] [1753420007.541786118] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420007.637366605] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.936999797821045, 5.315000057220459, 27.483999252319336])
[WARN] [1753420007.638468035] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420007.736587037] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.918000221252441, 5.315000057220459, 27.483999252319336])
[WARN] [1753420007.737877015] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420007.836816513] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.953000068664551, 5.314000129699707, 27.483999252319336])
[WARN] [1753420007.838049241] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420007.936073522] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.978000164031982, 5.2769999504089355, 27.483999252319336])
[WARN] [1753420007.937387724] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420008.036167347] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.085999965667725, 5.308000087738037, 27.483999252319336])
[WARN] [1753420008.037248489] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420008.136145909] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.085999965667725, 5.3470001220703125, 27.483999252319336])
[WARN] [1753420008.137297419] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420008.236813443] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.156000137329102, 5.3470001220703125, 27.483999252319336])
[WARN] [1753420008.238128702] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420008.336623873] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.172999858856201, 5.3470001220703125, 27.483999252319336])
[WARN] [1753420008.337997117] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420008.436444383] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.114999771118164, 5.38700008392334, 27.483999252319336])
[WARN] [1753420008.437809819] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420008.536388416] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.114999771118164, 5.39300012588501, 27.483999252319336])
[WARN] [1753420008.537412948] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420008.636184573] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.114999771118164, 5.39300012588501, 27.483999252319336])
[WARN] [1753420008.638198725] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420008.735848824] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.114999771118164, 5.39300012588501, 27.483999252319336])
[WARN] [1753420008.738605711] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420008.835819353] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.114999771118164, 5.39900016784668, 27.483999252319336])
[WARN] [1753420008.836878318] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420008.935700793] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 5.39900016784668, 27.483999252319336])
[WARN] [1753420008.936740525] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420009.037953512] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 5.39900016784668, 1.9730000495910645])
[INFO] [1753420009.041508239] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 5.39900017 1.97300005]
[INFO] [1753420009.047250433] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420009.049680113] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420009.051534006] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420009.052764654] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420009.053731842] [solver_node]: 求解器返回结果: [((6.126685888513545, 6.128685888513545), (5.735515770976334, 5.7375157709763345), -1.6051550894635112), ((6.118214700029784, 6.120214700029785), (5.7320800725141225, 5.734080072514123), -1.6341849706273495), ((3.8693141114864544, 3.871314111486454), (2.262484229023667, 2.2644842290236666), 1.5364375641262817), ((3.8777852999702147, 3.8797852999702145), (2.2659199274858772, 2.267919927485877), 1.5074076829624439), ((0.8486763549245263, 0.8506763549245263), (2.8504082222790452, 2.852408222279045), 1.0858159536906984), ((1.9985955489897897, 2.0005955489897898), (5.664839951542503, 5.666839951542504), 0.3908032841569338), ((9.147323645075472, 9.149323645075471), (5.147591777720954, 5.149591777720954), -2.055776699899095), ((7.997404451010209, 7.99940445101021), (2.333160048457497, 2.335160048457497), -2.750789369432859)]
[INFO] [1753420009.135789857] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 5.39900016784668, 1.9730000495910645])
[INFO] [1753420009.137318783] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 5.39900017 1.97300005]
[INFO] [1753420009.140701858] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420009.141804792] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420009.142832365] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420009.143784160] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420009.144968951] [solver_node]: 求解器返回结果: [((6.126685888513545, 6.128685888513545), (5.735515770976334, 5.7375157709763345), -1.6051550894635112), ((6.118214700029784, 6.120214700029785), (5.7320800725141225, 5.734080072514123), -1.6341849706273495), ((3.8693141114864544, 3.871314111486454), (2.262484229023667, 2.2644842290236666), 1.5364375641262817), ((3.8777852999702147, 3.8797852999702145), (2.2659199274858772, 2.267919927485877), 1.5074076829624439), ((0.8486763549245263, 0.8506763549245263), (2.8504082222790452, 2.852408222279045), 1.0858159536906984), ((1.9985955489897897, 2.0005955489897898), (5.664839951542503, 5.666839951542504), 0.3908032841569338), ((9.147323645075472, 9.149323645075471), (5.147591777720954, 5.149591777720954), -2.055776699899095), ((7.997404451010209, 7.99940445101021), (2.333160048457497, 2.335160048457497), -2.750789369432859)]
[INFO] [1753420009.236684023] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 5.39900016784668, 1.9730000495910645])
[INFO] [1753420009.239209353] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 5.39900017 1.97300005]
[INFO] [1753420009.242535851] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420009.243641633] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420009.244558899] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420009.245468197] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420009.247611472] [solver_node]: 求解器返回结果: [((6.126685888513545, 6.128685888513545), (5.735515770976334, 5.7375157709763345), -1.6051550894635112), ((6.118214700029784, 6.120214700029785), (5.7320800725141225, 5.734080072514123), -1.6341849706273495), ((3.8693141114864544, 3.871314111486454), (2.262484229023667, 2.2644842290236666), 1.5364375641262817), ((3.8777852999702147, 3.8797852999702145), (2.2659199274858772, 2.267919927485877), 1.5074076829624439), ((0.8486763549245263, 0.8506763549245263), (2.8504082222790452, 2.852408222279045), 1.0858159536906984), ((1.9985955489897897, 2.0005955489897898), (5.664839951542503, 5.666839951542504), 0.3908032841569338), ((9.147323645075472, 9.149323645075471), (5.147591777720954, 5.149591777720954), -2.055776699899095), ((7.997404451010209, 7.99940445101021), (2.333160048457497, 2.335160048457497), -2.750789369432859)]
[INFO] [1753420009.336084783] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.758999824523926, 4.698999881744385, 1.9730000495910645])
[INFO] [1753420009.337635661] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75899982 4.69899988 1.97300005]
[INFO] [1753420009.341168436] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420009.342291530] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420009.343266237] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420009.344153615] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420009.345150339] [solver_node]: 求解器返回结果: [((1.4249708665827385, 1.4269708665827383), (4.308864151491202, 4.310864151491202), 0.789990224490708), ((1.792443649103835, 1.7944436491038347), (5.1960400212817115, 5.198040021281712), 0.5579789033733304), ((8.571029133417262, 8.573029133417261), (3.689135848508799, 3.691135848508799), -2.351602429099085), ((8.203556350896164, 8.205556350896163), (2.8019599787182883, 2.803959978718288), -2.583613750216463)]
[INFO] [1753420009.435961136] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.752999782562256, 4.698999881744385, 1.9730000495910645])
[INFO] [1753420009.437454446] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75299978 4.69899988 1.97300005]
[INFO] [1753420009.440879762] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420009.441729859] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420009.442447697] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420009.443247745] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420009.443979984] [solver_node]: 求解器返回结果: [((1.4331487975217079, 1.4351487975217077), (4.32482484882891, 4.3268248488289105), 0.7853463269335349), ((1.7846721753347674, 1.7866721753347672), (5.1727552459757895, 5.17475524597579), 0.5635532089970509), ((8.562851202478292, 8.564851202478291), (3.673175151171091, 3.6751751511710906), -2.356246326656258), ((8.211327824665231, 8.21332782466523), (2.8252447540242085, 2.8272447540242083), -2.5780394445927426)]
[INFO] [1753420009.536075094] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.752999782562256, 4.698999881744385, 1.9730000495910645])
[INFO] [1753420009.537555828] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75299978 4.69899988 1.97300005]
[INFO] [1753420009.541380384] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420009.542603320] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420009.543449097] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420009.544195256] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420009.545135562] [solver_node]: 求解器返回结果: [((1.4331487975217079, 1.4351487975217077), (4.32482484882891, 4.3268248488289105), 0.7853463269335349), ((1.7846721753347674, 1.7866721753347672), (5.1727552459757895, 5.17475524597579), 0.5635532089970509), ((8.562851202478292, 8.564851202478291), (3.673175151171091, 3.6751751511710906), -2.356246326656258), ((8.211327824665231, 8.21332782466523), (2.8252447540242085, 2.8272447540242083), -2.5780394445927426)]
[INFO] [1753420009.635861430] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.752999782562256, 4.698999881744385, 1.9730000495910645])
[INFO] [1753420009.637407605] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75299978 4.69899988 1.97300005]
[INFO] [1753420009.640813369] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420009.641649257] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420009.642365783] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420009.645406996] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420009.646363111] [solver_node]: 求解器返回结果: [((1.4331487975217079, 1.4351487975217077), (4.32482484882891, 4.3268248488289105), 0.7853463269335349), ((1.7846721753347674, 1.7866721753347672), (5.1727552459757895, 5.17475524597579), 0.5635532089970509), ((8.562851202478292, 8.564851202478291), (3.673175151171091, 3.6751751511710906), -2.356246326656258), ((8.211327824665231, 8.21332782466523), (2.8252447540242085, 2.8272447540242083), -2.5780394445927426)]
[INFO] [1753420009.736225025] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.752999782562256, 4.698999881744385, 1.9730000495910645])
[INFO] [1753420009.737632829] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75299978 4.69899988 1.97300005]
[INFO] [1753420009.740707130] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420009.741516874] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420009.742291386] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420009.743276973] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420009.744021628] [solver_node]: 求解器返回结果: [((1.4331487975217079, 1.4351487975217077), (4.32482484882891, 4.3268248488289105), 0.7853463269335349), ((1.7846721753347674, 1.7866721753347672), (5.1727552459757895, 5.17475524597579), 0.5635532089970509), ((8.562851202478292, 8.564851202478291), (3.673175151171091, 3.6751751511710906), -2.356246326656258), ((8.211327824665231, 8.21332782466523), (2.8252447540242085, 2.8272447540242083), -2.5780394445927426)]
[INFO] [1753420009.835890943] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.752999782562256, 4.609000205993652, 1.9730000495910645])
[INFO] [1753420009.837341147] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75299978 4.60900021 1.97300005]
[INFO] [1753420009.840891106] [solver_node]: 求解器返回结果: []
[INFO] [1753420009.936502735] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.752999782562256, 4.609000205993652, 1.9730000495910645])
[INFO] [1753420009.937943115] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75299978 4.60900021 1.97300005]
[INFO] [1753420009.943790752] [solver_node]: 求解器返回结果: []
[INFO] [1753420010.036880155] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75, 4.609000205993652, 1.9730000495910645])
[INFO] [1753420010.039806389] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75       4.60900021 1.97300005]
[INFO] [1753420010.042794225] [solver_node]: 求解器返回结果: []
[INFO] [1753420010.136789375] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75, 4.609000205993652, 1.9730000495910645])
[INFO] [1753420010.138638244] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75       4.60900021 1.97300005]
[INFO] [1753420010.142212651] [solver_node]: 求解器返回结果: []
[INFO] [1753420010.235833779] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75, 4.609000205993652, 3.8559999465942383])
[INFO] [1753420010.237264271] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75       4.60900021 3.85599995]
[INFO] [1753420010.240335276] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420010.241121148] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420010.241825002] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420010.242520952] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420010.243268007] [solver_node]: 求解器返回结果: [((5.502073538489876, 5.504073538489877), (4.375372000367771, 4.377372000367772), -1.118501021796975), ((5.259224513441559, 5.26122451344156), (4.3271601134819795, 4.32916011348198), -2.109096825339005), ((4.4939264615101235, 4.495926461510124), (3.6226279996322295, 3.6246279996322293), 2.023091631792818), ((4.736775486558439, 4.738775486558439), (3.6708398865180207, 3.6728398865180205), 1.032495828250788)]
[INFO] [1753420010.337098994] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75, 4.625, 3.8559999465942383])
[INFO] [1753420010.338684978] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75       4.625      3.85599995]
[INFO] [1753420010.343330734] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420010.344393987] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420010.345274037] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420010.346177031] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420010.348222160] [solver_node]: 求解器返回结果: [((5.493152609322279, 5.49515260932228), (4.38207095995815, 4.384070959958151), -1.115186635545422), ((5.2492905433546015, 5.251290543354602), (4.333270883689367, 4.335270883689367), -2.1122601862709933), ((4.502847390677719, 4.504847390677719), (3.61592904004185, 3.6179290400418496), 2.0264060180443706), ((4.746709456645397, 4.748709456645398), (3.664729116310633, 3.666729116310633), 1.0293324673187996), ((3.0631795161920534, 3.065179516192053), (4.7392221945167785, 4.741222194516779), 0.6839474275035837), ((3.1536044843745197, 3.1556044843745195), (4.8643737720841616, 4.866373772084162), 0.6509727951201298), ((6.932820483807945, 6.934820483807946), (3.2587778054832195, 3.2607778054832193), -2.4576452260862096), ((6.842395515625479, 6.84439551562548), (3.1336262279158382, 3.135626227915838), -2.490619858469663)]
[INFO] [1753420010.437512513] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.75, 4.625, 3.8559999465942383])
[INFO] [1753420010.439209955] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.75       4.625      3.85599995]
[INFO] [1753420010.443155409] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420010.444372489] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420010.445194234] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420010.446051019] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420010.446879963] [solver_node]: 求解器返回结果: [((5.493152609322279, 5.49515260932228), (4.38207095995815, 4.384070959958151), -1.115186635545422), ((5.2492905433546015, 5.251290543354602), (4.333270883689367, 4.335270883689367), -2.1122601862709933), ((4.502847390677719, 4.504847390677719), (3.61592904004185, 3.6179290400418496), 2.0264060180443706), ((4.746709456645397, 4.748709456645398), (3.664729116310633, 3.666729116310633), 1.0293324673187996), ((3.0631795161920534, 3.065179516192053), (4.7392221945167785, 4.741222194516779), 0.6839474275035837), ((3.1536044843745197, 3.1556044843745195), (4.8643737720841616, 4.866373772084162), 0.6509727951201298), ((6.932820483807945, 6.934820483807946), (3.2587778054832195, 3.2607778054832193), -2.4576452260862096), ((6.842395515625479, 6.84439551562548), (3.1336262279158382, 3.135626227915838), -2.490619858469663)]
[INFO] [1753420010.537078814] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.572000026702881, 4.625, 3.8580000400543213])
[INFO] [1753420010.538576668] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.57200003 4.625      3.85800004]
[INFO] [1753420010.541816509] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420010.542696430] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420010.543619489] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420010.545629289] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420010.546552603] [solver_node]: 求解器返回结果: [((4.434415221408616, 4.436415221408617), (4.381111072046289, 4.383111072046289), -1.114774482824905), ((4.23879970767564, 4.240799707675641), (4.332319634200186, 4.334319634200186), -2.1126535001891638), ((5.5615847785913815, 5.563584778591382), (3.6168889279537106, 3.6188889279537104), 2.0268181707648876), ((5.7572002923243595, 5.75920029232436), (3.665680365799814, 3.667680365799814), 1.028939153400629)]
[INFO] [1753420010.635856716] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.572000026702881, 4.625, 3.8580000400543213])
[INFO] [1753420010.637389387] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.57200003 4.625      3.85800004]
[INFO] [1753420010.641005619] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420010.642025383] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420010.642898425] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420010.643729481] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420010.644572090] [solver_node]: 求解器返回结果: [((4.434415221408616, 4.436415221408617), (4.381111072046289, 4.383111072046289), -1.114774482824905), ((4.23879970767564, 4.240799707675641), (4.332319634200186, 4.334319634200186), -2.1126535001891638), ((5.5615847785913815, 5.563584778591382), (3.6168889279537106, 3.6188889279537104), 2.0268181707648876), ((5.7572002923243595, 5.75920029232436), (3.665680365799814, 3.667680365799814), 1.028939153400629)]
[INFO] [1753420010.736496159] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.572000026702881, 4.625, 3.859999895095825])
[INFO] [1753420010.738009118] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.57200003 4.625      3.8599999 ]
[INFO] [1753420010.741399841] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420010.742502967] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420010.743432681] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420010.744530367] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420010.745522483] [solver_node]: 求解器返回结果: [((4.433515777293685, 4.435515777293686), (4.380151668225587, 4.382151668225588), -1.1143628569713897), ((4.2378004318520786, 4.239800431852079), (4.331368964528454, 4.3333689645284545), -2.1130462977465587), ((5.562484222706313, 5.564484222706314), (3.617848331774413, 3.6198483317744126), 2.0272297966184034), ((5.758199568147919, 5.76019956814792), (3.666631035471547, 3.6686310354715466), 1.0285463558432346)]
[INFO] [1753420010.836970511] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.572000026702881, 4.632999897003174, 3.861999988555908])
[INFO] [1753420010.838486701] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.57200003 4.6329999  3.86199999]
[INFO] [1753420010.841816208] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420010.842687073] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420010.843430704] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420010.844127966] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420010.847767206] [solver_node]: 求解器返回结果: [((4.429022590439433, 4.431022590439434), (4.382533534553866, 4.384533534553866), -1.1123116982350236), ((4.232811776632073, 4.234811776632074), (4.333466491600247, 4.335466491600248), -2.1150034191231697), ((5.5669774095605655, 5.568977409560566), (3.615466465446134, 3.617466465446134), 2.029280955354769), ((5.763188223367925, 5.765188223367925), (3.6645335083997526, 3.6665335083997523), 1.0265892344666239)]
[INFO] [1753420010.938329168] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.572000026702881, 4.632999897003174, 3.861999988555908])
[INFO] [1753420010.943469175] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.57200003 4.6329999  3.86199999]
[INFO] [1753420010.948602749] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420010.949474990] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420010.950216381] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420010.950943212] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420010.952786960] [solver_node]: 求解器返回结果: [((4.429022590439433, 4.431022590439434), (4.382533534553866, 4.384533534553866), -1.1123116982350236), ((4.232811776632073, 4.234811776632074), (4.333466491600247, 4.335466491600248), -2.1150034191231697), ((5.5669774095605655, 5.568977409560566), (3.615466465446134, 3.617466465446134), 2.029280955354769), ((5.763188223367925, 5.765188223367925), (3.6645335083997526, 3.6665335083997523), 1.0265892344666239)]
[INFO] [1753420011.040720551] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.514999866485596, 4.632999897003174, 3.861999988555908])
[INFO] [1753420011.042795857] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.51499987 4.6329999  3.86199999]
[INFO] [1753420011.049343635] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420011.051920102] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420011.052701238] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420011.053453125] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420011.054382872] [solver_node]: 求解器返回结果: [((4.377909073863263, 4.379909073863264), (4.382533534553866, 4.384533534553866), -1.1123116982350236), ((4.184046077423642, 4.186046077423643), (4.333466491600247, 4.335466491600248), -2.1150034191231697), ((5.618090926136736, 5.620090926136736), (3.615466465446134, 3.617466465446134), 2.029280955354769), ((5.811953922576355, 5.8139539225763555), (3.6645335083997526, 3.6665335083997523), 1.0265892344666239)]
[INFO] [1753420011.136496476] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.514999866485596, 4.632999897003174, 3.861999988555908])
[INFO] [1753420011.139378773] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.51499987 4.6329999  3.86199999]
[INFO] [1753420011.142472723] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420011.143351172] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420011.144051826] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420011.144738432] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420011.145449102] [solver_node]: 求解器返回结果: [((4.377909073863263, 4.379909073863264), (4.382533534553866, 4.384533534553866), -1.1123116982350236), ((4.184046077423642, 4.186046077423643), (4.333466491600247, 4.335466491600248), -2.1150034191231697), ((5.618090926136736, 5.620090926136736), (3.615466465446134, 3.617466465446134), 2.029280955354769), ((5.811953922576355, 5.8139539225763555), (3.6645335083997526, 3.6665335083997523), 1.0265892344666239)]
[INFO] [1753420011.235813975] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.514999866485596, 4.632999897003174, 3.861999988555908])
[INFO] [1753420011.237279092] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.51499987 4.6329999  3.86199999]
[INFO] [1753420011.240642391] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420011.241471208] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420011.242171957] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420011.242913444] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420011.243626034] [solver_node]: 求解器返回结果: [((4.377909073863263, 4.379909073863264), (4.382533534553866, 4.384533534553866), -1.1123116982350236), ((4.184046077423642, 4.186046077423643), (4.333466491600247, 4.335466491600248), -2.1150034191231697), ((5.618090926136736, 5.620090926136736), (3.615466465446134, 3.617466465446134), 2.029280955354769), ((5.811953922576355, 5.8139539225763555), (3.6645335083997526, 3.6665335083997523), 1.0265892344666239)]
[INFO] [1753420011.335873921] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.514999866485596, 4.632999897003174, 3.861999988555908])
[INFO] [1753420011.337458080] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.51499987 4.6329999  3.86199999]
[INFO] [1753420011.340713153] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420011.341573650] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420011.342410915] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420011.343189394] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420011.345435487] [solver_node]: 求解器返回结果: [((4.377909073863263, 4.379909073863264), (4.382533534553866, 4.384533534553866), -1.1123116982350236), ((4.184046077423642, 4.186046077423643), (4.333466491600247, 4.335466491600248), -2.1150034191231697), ((5.618090926136736, 5.620090926136736), (3.615466465446134, 3.617466465446134), 2.029280955354769), ((5.811953922576355, 5.8139539225763555), (3.6645335083997526, 3.6665335083997523), 1.0265892344666239)]
[INFO] [1753420011.435802984] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.514999866485596, 4.622000217437744, 3.861999988555908])
[INFO] [1753420011.437432936] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.51499987 4.62200022 3.86199999]
[INFO] [1753420011.440956303] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420011.441825248] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420011.442546606] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420011.443290397] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420011.444981759] [solver_node]: 求解器返回结果: [((4.3827950391846064, 4.384795039184607), (4.377938247559856, 4.379938247559856), -1.1145685634145384), ((4.1894707402966125, 4.191470740296613), (4.329274354706374, 4.331274354706375), -2.1128500070074043), ((5.613204960815391, 5.615204960815392), (3.620061752440144, 3.622061752440144), 2.027024090175254), ((5.806529259703387, 5.808529259703388), (3.6687256452936254, 3.670725645293625), 1.0287426465823881)]
[INFO] [1753420011.535776848] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.514999866485596, 4.622000217437744, 3.861999988555908])
[INFO] [1753420011.537377040] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.51499987 4.62200022 3.86199999]
[INFO] [1753420011.540666769] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420011.541516098] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420011.542221520] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420011.542921214] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420011.543632396] [solver_node]: 求解器返回结果: [((4.3827950391846064, 4.384795039184607), (4.377938247559856, 4.379938247559856), -1.1145685634145384), ((4.1894707402966125, 4.191470740296613), (4.329274354706374, 4.331274354706375), -2.1128500070074043), ((5.613204960815391, 5.615204960815392), (3.620061752440144, 3.622061752440144), 2.027024090175254), ((5.806529259703387, 5.808529259703388), (3.6687256452936254, 3.670725645293625), 1.0287426465823881)]
[INFO] [1753420011.641578700] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.514999866485596, 4.622000217437744, 3.861999988555908])
[INFO] [1753420011.643385264] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.51499987 4.62200022 3.86199999]
[INFO] [1753420011.648418004] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420011.649390024] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420011.650123606] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420011.651646933] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420011.653104658] [solver_node]: 求解器返回结果: [((4.3827950391846064, 4.384795039184607), (4.377938247559856, 4.379938247559856), -1.1145685634145384), ((4.1894707402966125, 4.191470740296613), (4.329274354706374, 4.331274354706375), -2.1128500070074043), ((5.613204960815391, 5.615204960815392), (3.620061752440144, 3.622061752440144), 2.027024090175254), ((5.806529259703387, 5.808529259703388), (3.6687256452936254, 3.670725645293625), 1.0287426465823881)]
[INFO] [1753420011.735782241] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.514999866485596, 4.622000217437744, 3.861999988555908])
[INFO] [1753420011.737335360] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.51499987 4.62200022 3.86199999]
[INFO] [1753420011.740957832] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420011.742048702] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420011.743828738] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420011.747720975] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420011.748789893] [solver_node]: 求解器返回结果: [((4.3827950391846064, 4.384795039184607), (4.377938247559856, 4.379938247559856), -1.1145685634145384), ((4.1894707402966125, 4.191470740296613), (4.329274354706374, 4.331274354706375), -2.1128500070074043), ((5.613204960815391, 5.615204960815392), (3.620061752440144, 3.622061752440144), 2.027024090175254), ((5.806529259703387, 5.808529259703388), (3.6687256452936254, 3.670725645293625), 1.0287426465823881)]
[INFO] [1753420011.835763242] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.514999866485596, 4.622000217437744, 3.861999988555908])
[INFO] [1753420011.837306792] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.51499987 4.62200022 3.86199999]
[INFO] [1753420011.840759469] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420011.843625382] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420011.844502072] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420011.845299912] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420011.846130744] [solver_node]: 求解器返回结果: [((4.3827950391846064, 4.384795039184607), (4.377938247559856, 4.379938247559856), -1.1145685634145384), ((4.1894707402966125, 4.191470740296613), (4.329274354706374, 4.331274354706375), -2.1128500070074043), ((5.613204960815391, 5.615204960815392), (3.620061752440144, 3.622061752440144), 2.027024090175254), ((5.806529259703387, 5.808529259703388), (3.6687256452936254, 3.670725645293625), 1.0287426465823881)]
[INFO] [1753420011.937376338] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.514999866485596, 4.605999946594238, 3.861999988555908])
[INFO] [1753420011.938897777] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.51499987 4.60599995 3.86199999]
[INFO] [1753420011.942461752] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420011.943307625] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420011.944028375] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420011.944747685] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420011.945481876] [solver_node]: 求解器返回结果: [((4.38991776178315, 4.391917761783151), (4.371234652149602, 4.373234652149603), -1.1178772513135726), ((4.197390303699756, 4.199390303699757), (4.323157795535312, 4.325157795535313), -2.109692249513495), ((5.606082238216848, 5.6080822382168485), (3.6267653478503976, 3.6287653478503974), 2.02371540227622), ((5.7986096963002405, 5.800609696300241), (3.6748422044646873, 3.676842204464687), 1.031900404076298)]
[INFO] [1753420012.035907295] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.514999866485596, 4.605999946594238, 3.861999988555908])
[INFO] [1753420012.037400188] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.51499987 4.60599995 3.86199999]
[INFO] [1753420012.041254057] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420012.042439649] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420012.043558999] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420012.044343911] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420012.045202808] [solver_node]: 求解器返回结果: [((4.38991776178315, 4.391917761783151), (4.371234652149602, 4.373234652149603), -1.1178772513135726), ((4.197390303699756, 4.199390303699757), (4.323157795535312, 4.325157795535313), -2.109692249513495), ((5.606082238216848, 5.6080822382168485), (3.6267653478503976, 3.6287653478503974), 2.02371540227622), ((5.7986096963002405, 5.800609696300241), (3.6748422044646873, 3.676842204464687), 1.031900404076298)]
[INFO] [1753420012.135917642] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.241000175476074, 4.605999946594238, 3.8440001010894775])
[INFO] [1753420012.137369767] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.24100018 4.60599995 3.8440001 ]
[INFO] [1753420012.141240948] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420012.143518305] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420012.144449748] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420012.145378310] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420012.147291949] [solver_node]: 求解器返回结果: [((4.151129835972961, 4.153129835972962), (4.379880395103274, 4.381880395103274), -1.1216367299353953), ((3.97067082486714, 3.97267082486714), (4.331732265566785, 4.333732265566786), -2.106103169918521), ((5.844870164027037, 5.846870164027037), (3.6181196048967257, 3.6201196048967255), 2.0199559236543974), ((6.0253291751328595, 6.02732917513286), (3.6662677344332137, 3.6682677344332135), 1.0354894836712718)]
[INFO] [1753420012.235823059] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.241000175476074, 4.605999946594238, 3.8429999351501465])
[INFO] [1753420012.237335953] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.24100018 4.60599995 3.84299994]
[INFO] [1753420012.240980858] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420012.242131441] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420012.244202650] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420012.245072491] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420012.245812250] [solver_node]: 求解器返回结果: [((4.151551984714912, 4.1535519847149125), (4.380361676359769, 4.3823616763597695), -1.1218468020337848), ((3.9711414138943644, 3.973141413894364), (4.332209824021298, 4.334209824021299), -2.105902585864098), ((5.844448015285087, 5.8464480152850875), (3.617638323640231, 3.6196383236402307), 2.0197458515560083), ((6.024858586105636, 6.026858586105637), (3.6657901759787017, 3.6677901759787015), 1.0356900677256946)]
[INFO] [1753420012.335861470] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.241000175476074, 4.605999946594238, 3.8429999351501465])
[INFO] [1753420012.337410429] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.24100018 4.60599995 3.84299994]
[INFO] [1753420012.341508591] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420012.342715879] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420012.343663034] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420012.344411753] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420012.345289787] [solver_node]: 求解器返回结果: [((4.151551984714912, 4.1535519847149125), (4.380361676359769, 4.3823616763597695), -1.1218468020337848), ((3.9711414138943644, 3.973141413894364), (4.332209824021298, 4.334209824021299), -2.105902585864098), ((5.844448015285087, 5.8464480152850875), (3.617638323640231, 3.6196383236402307), 2.0197458515560083), ((6.024858586105636, 6.026858586105637), (3.6657901759787017, 3.6677901759787015), 1.0356900677256946)]
[INFO] [1753420012.436999424] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.241000175476074, 4.605999946594238, 3.8429999351501465])
[INFO] [1753420012.438499486] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.24100018 4.60599995 3.84299994]
[INFO] [1753420012.441632445] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420012.442474861] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420012.443219196] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420012.446636000] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420012.447607924] [solver_node]: 求解器返回结果: [((4.151551984714912, 4.1535519847149125), (4.380361676359769, 4.3823616763597695), -1.1218468020337848), ((3.9711414138943644, 3.973141413894364), (4.332209824021298, 4.334209824021299), -2.105902585864098), ((5.844448015285087, 5.8464480152850875), (3.617638323640231, 3.6196383236402307), 2.0197458515560083), ((6.024858586105636, 6.026858586105637), (3.6657901759787017, 3.6677901759787015), 1.0356900677256946)]
[INFO] [1753420012.535927446] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.241000175476074, 4.605999946594238, 3.8410000801086426])
[INFO] [1753420012.537554582] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.24100018 4.60599995 3.84100008]
[INFO] [1753420012.541211295] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420012.542246484] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420012.543147174] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420012.544011767] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420012.544860520] [solver_node]: 求解器返回结果: [((4.152396283742188, 4.154396283742189), (4.381324287398579, 4.38332428739858), -1.1222672208807287), ((3.972082752208096, 3.974082752208096), (4.3331650670406185, 4.335165067040619), -2.1055011448476035), ((5.84360371625781, 5.845603716257811), (3.616675712601421, 3.6186757126014206), 2.0193254327090644), ((6.023917247791904, 6.025917247791905), (3.6648349329593803, 3.66683493295938), 1.0360915087421891)]
[INFO] [1753420012.636616430] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.242000102996826, 4.605999946594238, 3.7790000438690186])
[INFO] [1753420012.638145965] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.2420001  4.60599995 3.77900004]
[INFO] [1753420012.641625362] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420012.642546405] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420012.643355157] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420012.645872487] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420012.646751993] [solver_node]: 求解器返回结果: [((4.179611748195827, 4.181611748195827), (4.41135187006237, 4.413351870062371), -1.1355564625138204), ((4.0023908406226925, 4.004390840622693), (4.3630161402515535, 4.365016140251554), -2.092804432980504), ((5.816388251804172, 5.818388251804173), (3.5866481299376294, 3.588648129937629), 2.0060361910759728), ((5.993609159377306, 5.995609159377307), (3.6349838597484454, 3.636983859748445), 1.0487882206092893)]
[INFO] [1753420012.737739792] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.24399995803833, 4.605999946594238, 3.7790000438690186])
[INFO] [1753420012.739427313] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.24399996 4.60599995 3.77900004]
[INFO] [1753420012.743409345] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420012.744620281] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420012.746561024] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420012.747398545] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420012.748308003] [solver_node]: 求解器返回结果: [((4.181425157718999, 4.183425157718999), (4.41135187006237, 4.413351870062371), -1.1355564625138204), ((4.004124350592063, 4.006124350592064), (4.3630161402515535, 4.365016140251554), -2.092804432980504), ((5.814574842281, 5.816574842281001), (3.5866481299376294, 3.588648129937629), 2.0060361910759728), ((5.991875649407936, 5.993875649407936), (3.6349838597484454, 3.636983859748445), 1.0487882206092893)]
[INFO] [1753420012.836652325] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.25, 4.605999946594238, 3.6640000343322754])
[INFO] [1753420012.838272325] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.25       4.60599995 3.66400003]
[INFO] [1753420012.841725802] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420012.842572571] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420012.843325002] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420012.844039640] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420012.844766759] [solver_node]: 求解器返回结果: [((4.236435249833023, 4.2384352498330236), (4.468002150672272, 4.470002150672273), -1.161632411610043), ((4.065416303662119, 4.06741630366212), (4.419633056620902, 4.421633056620903), -2.0678493724933302), ((5.759564750166977, 5.761564750166977), (3.5299978493277275, 3.5319978493277273), 1.9799602419797502), ((5.930583696337879, 5.93258369633788), (3.5783669433790974, 3.5803669433790972), 1.0737432810964629)]
[INFO] [1753420012.935838208] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.25, 4.605999946594238, 3.6640000343322754])
[INFO] [1753420012.937269148] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.25       4.60599995 3.66400003]
[INFO] [1753420012.941347662] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420012.942970798] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420012.943808351] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420012.944566926] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420012.946993662] [solver_node]: 求解器返回结果: [((4.236435249833023, 4.2384352498330236), (4.468002150672272, 4.470002150672273), -1.161632411610043), ((4.065416303662119, 4.06741630366212), (4.419633056620902, 4.421633056620903), -2.0678493724933302), ((5.759564750166977, 5.761564750166977), (3.5299978493277275, 3.5319978493277273), 1.9799602419797502), ((5.930583696337879, 5.93258369633788), (3.5783669433790974, 3.5803669433790972), 1.0737432810964629)]
[INFO] [1753420013.037107461] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.25, 4.605999946594238, 3.484999895095825])
[INFO] [1753420013.038591267] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.25       4.60599995 3.4849999 ]
[INFO] [1753420013.041658656] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420013.042444623] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420013.043297633] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420013.043996334] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420013.044699357] [solver_node]: 求解器返回结果: [((4.315249585097159, 4.3172495850971595), (4.558673301659156, 4.560673301659157), -1.206671888586043), ((4.156583507532979, 4.158583507532979), (4.511189163920846, 4.513189163920846), -2.024613356789432), ((5.680750414902839, 5.68275041490284), (3.4393266983408446, 3.4413266983408444), 1.9349207650037499), ((5.83941649246702, 5.841416492467021), (3.4868108360791545, 3.4888108360791543), 1.1169792968003607)]
[INFO] [1753420013.136588296] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.25, 4.605999946594238, 3.4760000705718994])
[INFO] [1753420013.138127271] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.25       4.60599995 3.47600007]
[INFO] [1753420013.141467753] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420013.142401308] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420013.143259501] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420013.144020156] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420013.144815212] [solver_node]: 求解器返回结果: [((4.319261757012927, 4.321261757012928), (4.563312525044917, 4.565312525044917), -1.2091064391658541), ((4.161301278571767, 4.163301278571768), (4.515909078767187, 4.517909078767188), -2.0222714364018053), ((5.6767382429870725, 5.678738242987073), (3.434687474955083, 3.436687474955083), 1.932486214423939), ((5.834698721428231, 5.836698721428232), (3.482090921232813, 3.484090921232813), 1.1193212171879878)]
[INFO] [1753420013.235847174] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.25, 4.605999946594238, 3.4760000705718994])
[INFO] [1753420013.237335972] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.25       4.60599995 3.47600007]
[INFO] [1753420013.240993997] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420013.242116356] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420013.244668022] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420013.245562920] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420013.246372825] [solver_node]: 求解器返回结果: [((4.319261757012927, 4.321261757012928), (4.563312525044917, 4.565312525044917), -1.2091064391658541), ((4.161301278571767, 4.163301278571768), (4.515909078767187, 4.517909078767188), -2.0222714364018053), ((5.6767382429870725, 5.678738242987073), (3.434687474955083, 3.436687474955083), 1.932486214423939), ((5.834698721428231, 5.836698721428232), (3.482090921232813, 3.484090921232813), 1.1193212171879878)]
[INFO] [1753420013.335759378] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.25, 4.605999946594238, 3.4709999561309814])
[INFO] [1753420013.337226095] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.25       4.60599995 3.47099996]
[INFO] [1753420013.341274240] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420013.342498648] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420013.343414667] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420013.344275580] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420013.345038443] [solver_node]: 求解器返回结果: [((4.321492743953268, 4.323492743953269), (4.565893299948911, 4.567893299948912), -1.2104669491465803), ((4.163928227026122, 4.165928227026122), (4.518536378142111, 4.520536378142111), -2.0209624725029567), ((5.674507256046732, 5.676507256046732), (3.4321067000510896, 3.4341067000510894), 1.931125704443213), ((5.832071772973877, 5.834071772973878), (3.4794636218578883, 3.481463621857888), 1.1206301810868367)]
[INFO] [1753420013.436298826] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.605999946594238, 3.4709999561309814])
[INFO] [1753420013.437819560] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.60599995 3.47099996]
[INFO] [1753420013.441217420] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420013.442078493] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420013.442836396] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420013.443595836] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420013.444354859] [solver_node]: 求解器返回结果: [((5.732651958997838, 5.734651958997839), (4.565893299948911, 4.567893299948912), -1.2104669491465803), ((5.521690956075012, 5.523690956075012), (4.518536378142111, 4.520536378142111), -2.0209624725029567), ((4.2633480410021605, 4.265348041002161), (3.4321067000510896, 3.4341067000510894), 1.931125704443213), ((4.474309043924987, 4.476309043924988), (3.4794636218578883, 3.481463621857888), 1.1206301810868367)]
[INFO] [1753420013.536969669] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.605999946594238, 3.4700000286102295])
[INFO] [1753420013.541056438] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.60599995 3.47000003]
[INFO] [1753420013.544627710] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420013.545601521] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420013.546504323] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420013.547427829] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420013.548340488] [solver_node]: 求解器返回结果: [((5.733243248385368, 5.735243248385369), (4.56640969005788, 4.568409690057881), -1.2107397112867915), ((5.522388959600413, 5.524388959600413), (4.51906221894606, 4.521062218946061), -2.0207000256946674), ((4.26275675161463, 4.26475675161463), (3.4315903099421194, 3.4335903099421192), 1.9308529423030012), ((4.473611040399587, 4.4756110403995875), (3.47893778105394, 3.4809377810539397), 1.1208926278951257)]
[INFO] [1753420013.635856668] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.605999946594238, 3.4700000286102295])
[INFO] [1753420013.637404507] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.60599995 3.47000003]
[INFO] [1753420013.641188038] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420013.642314333] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420013.643331889] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420013.644158241] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420013.644901328] [solver_node]: 求解器返回结果: [((5.733243248385368, 5.735243248385369), (4.56640969005788, 4.568409690057881), -1.2107397112867915), ((5.522388959600413, 5.524388959600413), (4.51906221894606, 4.521062218946061), -2.0207000256946674), ((4.26275675161463, 4.26475675161463), (3.4315903099421194, 3.4335903099421192), 1.9308529423030012), ((4.473611040399587, 4.4756110403995875), (3.47893778105394, 3.4809377810539397), 1.1208926278951257)]
[INFO] [1753420013.735879369] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.605999946594238, 3.4700000286102295])
[INFO] [1753420013.737569707] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.60599995 3.47000003]
[INFO] [1753420013.741973059] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420013.744731514] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420013.745668205] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420013.746565727] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420013.747626324] [solver_node]: 求解器返回结果: [((5.733243248385368, 5.735243248385369), (4.56640969005788, 4.568409690057881), -1.2107397112867915), ((5.522388959600413, 5.524388959600413), (4.51906221894606, 4.521062218946061), -2.0207000256946674), ((4.26275675161463, 4.26475675161463), (3.4315903099421194, 3.4335903099421192), 1.9308529423030012), ((4.473611040399587, 4.4756110403995875), (3.47893778105394, 3.4809377810539397), 1.1208926278951257)]
[INFO] [1753420013.835703411] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.605999946594238, 3.49399995803833])
[INFO] [1753420013.837196785] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.60599995 3.49399996]
[INFO] [1753420013.841013373] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420013.842166804] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420013.843182441] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420013.843988633] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420013.844733512] [solver_node]: 求解器返回结果: [((5.719071132445904, 5.721071132445904), (4.55404164238013, 4.556041642380131), -1.204255332879054), ((5.505697033889776, 5.507697033889777), (4.506480670287847, 4.508480670287848), -2.0269374706950245), ((4.276928867554093, 4.278928867554094), (3.4439583576198687, 3.4459583576198685), 1.9373373207107383), ((4.490302966110223, 4.492302966110223), (3.4915193297121516, 3.4935193297121514), 1.1146551828947686)]
[INFO] [1753420013.935832355] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.757999897003174, 4.625999927520752, 3.618000030517578])
[INFO] [1753420013.937333153] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.7579999  4.62599993 3.61800003]
[INFO] [1753420013.941083340] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420013.942237059] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420013.943375610] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420013.944313740] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420013.945152797] [solver_node]: 求解器返回结果: [((5.634964435334082, 5.636964435334082), (4.499381047915773, 4.501381047915774), -1.1678118917776459), ((5.4081084734830975, 5.410108473483098), (4.450301898662113, 4.452301898662114), -2.061927301418317), ((4.361035564665915, 4.363035564665916), (3.4986189520842266, 3.5006189520842264), 1.9737807618121468), ((4.587891526516901, 4.589891526516902), (3.547698101337886, 3.549698101337886), 1.079665352171476), ((2.804491743758067, 2.806491743758067), (4.6362841999127955, 4.638284199912796), 0.7116162771682102), ((3.036155037257979, 3.0381550372579786), (4.975534648474487, 4.977534648474488), 0.6222633550121073), ((7.191508256241932, 7.193508256241933), (3.361715800087205, 3.363715800087205), -2.4299763764215827), ((6.959844962742019, 6.96184496274202), (3.0224653515255118, 3.0244653515255115), -2.519329298577686)]
[INFO] [1753420014.037377008] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 11.130999565124512, 4.625999927520752, 3.7079999446868896])
[INFO] [1753420014.039048785] [solver_node]: 调用求解器前，distances shape: (4,), values: [        nan 11.13099957  4.62599993  3.70799994]
[INFO] [1753420014.043052225] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420014.044223193] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420014.045149771] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420014.045941339] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420014.046728075] [solver_node]: 求解器返回结果: [((6.954033929481864, 6.9560339294818645), (3.125194169671194, 3.127194169671194), -2.4929660232919293), ((5.582133031281141, 5.584133031281142), (6.259182742742687, 6.261182742742688), -0.5074456869039401), ((3.041966070518136, 3.043966070518136), (4.872805830328806, 4.874805830328807), 0.6486266302978636), ((4.413866968718858, 4.415866968718858), (1.738817257257313, 1.7408172572573128), 2.634146966685853)]
[INFO] [1753420014.136387340] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 11.130999565124512, 5.377999782562256, 3.7079999446868896])
[INFO] [1753420014.138209136] [solver_node]: 调用求解器前，distances shape: (4,), values: [        nan 11.13099957  5.37799978  3.70799994]
[INFO] [1753420014.141750647] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420014.143430329] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420014.144270249] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420014.145036761] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420014.147149443] [solver_node]: 求解器返回结果: [((6.954033929481864, 6.9560339294818645), (3.57947165562086, 3.58147165562086), -2.4929660232919293), ((4.722533498241931, 4.724533498241931), (6.565985603807844, 6.567985603807845), -0.4238178119837084), ((3.041966070518136, 3.043966070518136), (4.4185283443791405, 4.420528344379141), 0.6486266302978636), ((5.273466501758067, 5.275466501758068), (1.4320143961921559, 1.4340143961921556), 2.7177748416060847)]
[INFO] [1753420014.238803980] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.25, 5.377999782562256, 3.7730000019073486])
[INFO] [1753420014.240474029] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.25       5.37799978 3.773     ]
[INFO] [1753420014.244640576] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420014.246954319] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420014.247936738] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420014.248764563] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420014.250348211] [solver_node]: 求解器返回结果: [((3.8795776135771316, 3.8815776135771314), (4.713212315364884, 4.715212315364885), -0.9981805234741126), ((3.675966347957619, 3.677966347957619), (4.636691973835953, 4.638691973835954), -2.2233852083028225), ((6.116422386422868, 6.118422386422869), (3.2847876846351154, 3.286787684635115), 2.1434121301156805), ((6.3200336520423805, 6.322033652042381), (3.3613080261640467, 3.3633080261640464), 0.9182074452869706), ((6.8636832085867985, 6.865683208586799), (4.237778090874932, 4.239778090874933), 2.39501016421277), ((3.1323167914132, 3.1343167914132), (3.7602219091250673, 3.762221909125067), -0.7465824893770231), ((6.450264875447012, 6.452264875447013), (3.2548313543874055, 3.2568313543874052), 0.8730301124171742), ((3.5457351245529867, 3.5477351245529865), (4.743168645612595, 4.745168645612596), -2.268562541172619), ((3.7602219091250664, 3.762221909125066), (4.865683208586799, 4.8676832085868), -2.3173788161719195), ((6.235778090874931, 6.237778090874932), (3.1323167914132, 3.1343167914132), 0.8242138374178736), ((6.741168645612594, 6.743168645612594), (4.452264875447013, 4.454264875447014), 2.4438264392120708), ((3.2548313543874055, 3.2568313543874052), (3.5457351245529867, 3.5477351245529865), -0.6977662143777225)]
[INFO] [1753420014.336111334] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.25, 5.165999889373779, 3.7730000019073486])
[INFO] [1753420014.337888329] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.25       5.16599989 3.773     ]
[INFO] [1753420014.341261997] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420014.342107453] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420014.342903853] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420014.343601211] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420014.345995147] [solver_node]: 求解器返回结果: [((3.960637872650823, 3.9626378726508227), (4.635810758436492, 4.637810758436492), -1.031318960326434), ((3.761987864607382, 3.763987864607382), (4.5667884193739505, 4.568788419373951), -2.192018596200639), ((6.035362127349175, 6.0373621273491755), (3.362189241563508, 3.364189241563508), 2.1102736932633586), ((6.234012135392617, 6.236012135392618), (3.431211580626048, 3.4332115806260477), 0.9495740573891537), ((6.8636832085867985, 6.865683208586799), (4.381754475064606, 4.383754475064607), 2.39501016421277), ((3.1323167914132, 3.1343167914132), (3.616245524935393, 3.618245524935393), -0.7465824893770231), ((6.506302661221967, 6.508302661221967), (3.208802375588951, 3.2108023755889508), 0.8543306869161915), ((3.4896973387780323, 3.491697338778032), (4.789197624411047, 4.791197624411048), -2.2872619666736016), ((3.6162455249353918, 3.6182455249353915), (4.865683208586799, 4.8676832085868), -2.3173788161719195), ((6.379754475064606, 6.381754475064606), (3.1323167914132, 3.1343167914132), 0.8242138374178736), ((6.787197624411048, 6.789197624411049), (4.508302661221967, 4.510302661221968), 2.425127013711088), ((3.2088023755889514, 3.210802375588951), (3.4896973387780323, 3.491697338778032), -0.7164656398787049)]
[INFO] [1753420014.435929937] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.25, 4.915999889373779, 3.7780001163482666])
[INFO] [1753420014.437363438] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.25       4.91599989 3.77800012]
[INFO] [1753420014.441056184] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420014.442087181] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420014.443049600] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420014.443935570] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420014.445939226] [solver_node]: 求解器返回结果: [((4.0580919145364795, 4.06009191453648), (4.5376873264911675, 4.539687326491168), -1.0737615647299554), ((3.8670503004265897, 3.8690503004265895), (4.477772103594364, 4.479772103594365), -2.1517239313438914), ((5.937908085463519, 5.93990808546352), (3.4603126735088314, 3.462312673508831), 2.0678310888598377), ((6.128949699573409, 6.13094969957341), (3.5202278964056357, 3.5222278964056355), 0.9898687222459016), ((6.861601323544057, 6.863601323544057), (4.549108905208512, 4.551108905208513), 2.3943972910568823), ((3.1343986764559424, 3.136398676455942), (3.4488910947914886, 3.4508910947914884), -0.7471953625329111), ((6.577311928989613, 6.579311928989614), (3.1540040100373075, 3.1560040100373072), 0.8311982207369928), ((3.4186880710103855, 3.4206880710103853), (4.843995989962692, 4.8459959899626925), -2.3103944328528003), ((3.448891094791487, 3.4508910947914866), (4.863601323544057, 4.865601323544058), -2.3179916893278074), ((6.54710890520851, 6.54910890520851), (3.1343986764559424, 3.136398676455942), 0.8236009642619855), ((6.841995989962691, 6.843995989962692), (4.579311928989614, 4.5813119289896145), 2.4019945475318893), ((3.1540040100373075, 3.1560040100373072), (3.418688071010386, 3.4206880710103857), -0.7395981060579038)]
[INFO] [1753420014.535752414] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.25, 4.682000160217285, 3.7760000228881836])
[INFO] [1753420014.537219643] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.25       4.68200016 3.77600002]
[INFO] [1753420014.540734177] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420014.541602675] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420014.542314913] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420014.544822259] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420014.547498568] [solver_node]: 求解器返回结果: [((4.1558560775431825, 4.157856077543183), (4.444440451673889, 4.446440451673889), -1.1199608233680172), ((3.9746449218716395, 3.9766449218716393), (4.393223359956473, 4.395223359956474), -2.1077031357639937), ((5.840143922456816, 5.842143922456817), (3.553559548326111, 3.555559548326111), 2.021631830221776), ((6.02135507812836, 6.02335507812836), (3.6047766400435277, 3.6067766400435275), 1.0338895178257994)]
[INFO] [1753420014.635868111] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.25, 4.682000160217285, 3.7679998874664307])
[INFO] [1753420014.637301644] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.25       4.68200016 3.76799989]
[INFO] [1753420014.640465195] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420014.641270300] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420014.641963817] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420014.642645975] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420014.643388934] [solver_node]: 求解器返回结果: [((4.159236889427639, 4.16123688942764), (4.448342193315686, 4.450342193315687), -1.121636673425269), ((3.978411822483617, 3.980411822483617), (4.39710113317996, 4.39910113317996), -2.106103103531784), ((5.83676311057236, 5.83876311057236), (3.5496578066843143, 3.551657806684314), 2.019955980164524), ((6.017588177516381, 6.019588177516382), (3.60089886682004, 3.60289886682004), 1.035489550058009)]
[INFO] [1753420014.735783677] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.25, 4.682000160217285, 3.7860000133514404])
[INFO] [1753420014.737238074] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.25       4.68200016 3.78600001]
[INFO] [1753420014.740422106] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420014.741198410] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420014.741893400] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420014.742573861] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420014.743320372] [solver_node]: 求解器返回结果: [((4.151636244586005, 4.153636244586005), (4.439571787466874, 4.4415717874668745), -1.1178771453291274), ((3.9699478744365777, 3.9719478744365775), (4.388386986104842, 4.390386986104843), -2.109692230591043), ((5.844363755413993, 5.846363755413994), (3.558428212533126, 3.5604282125331257), 2.0237155082606653), ((6.026052125563422, 6.0280521255634225), (3.6096130138951588, 3.6116130138951585), 1.0319004229987498)]
[INFO] [1753420014.836465019] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.815999984741211, 4.853000164031982, 3.7860000133514404])
[INFO] [1753420014.837928376] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.81599998 4.85300016 3.78600001]
[INFO] [1753420014.842408657] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420014.844498939] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420014.845241258] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420014.845961273] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420014.846811082] [solver_node]: 求解器返回结果: [((4.58078904487662, 4.582789044876621), (4.508887468872365, 4.510887468872365), -1.0840099661754898), ((4.367691203892058, 4.369691203892058), (4.451339507189927, 4.453339507189928), -2.14197332712013), ((5.4152109551233805, 5.417210955123381), (3.4891125311276365, 3.4911125311276363), 2.0575826874143037), ((5.628308796107941, 5.630308796107942), (3.5466604928100716, 3.5486604928100713), 0.9996193264696626)]
[INFO] [1753420014.942780681] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.815999984741211, 4.828000068664551, 3.811000108718872])
[INFO] [1753420014.944631886] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.81599998 4.82800007 3.81100011]
[INFO] [1753420014.949491887] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420014.950372832] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420014.951151824] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420014.951849086] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420014.953452478] [solver_node]: 求解器返回结果: [((4.580789089589124, 4.582789089589125), (4.4867914135438385, 4.488791413543839), -1.0840099845475262), ((4.367691144478225, 4.369691144478225), (4.430307739459415, 4.432307739459415), -2.141973348352426), ((5.415210910410876, 5.417210910410876), (3.511208586456162, 3.513208586456162), 2.057582669042267), ((5.628308855521774, 5.630308855521775), (3.567692260540584, 3.5696922605405836), 0.9996193052373671)]
[INFO] [1753420015.037324204] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.25, 4.828000068664551, 3.8480000495910645])
[INFO] [1753420015.038873899] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.25       4.82800007 3.84800005]
[INFO] [1753420015.042343440] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420015.043210306] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420015.043938960] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420015.044634942] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420015.045422222] [solver_node]: 求解器返回结果: [((4.065413867622435, 4.067413867622435), (4.4689631443897015, 4.470963144389702), -1.0770837937406395), ((3.875025782029973, 3.877025782029973), (4.412712297383449, 4.41471229738345), -2.148564076260076), ((5.930586132377566, 5.932586132377566), (3.529036855610299, 3.531036855610299), 2.064508859849154), ((6.120974217970027, 6.122974217970028), (3.5852877026165504, 3.58728770261655), 0.9930285773297165), ((6.832824410234335, 6.834824410234336), (4.575874439963941, 4.577874439963941), 2.3858899253068704), ((3.1631755897656637, 3.1651755897656635), (3.4221255600360587, 3.4241255600360585), -0.7557027282829228), ((6.603655706406124, 6.605655706406124), (3.183543264168531, 3.1855432641685306), 0.8227652181654594), ((3.3923442935938755, 3.3943442935938752), (4.814456735831469, 4.81645673583147), -2.3188274354243337), ((3.4221255600360583, 3.424125560036058), (4.834824410234336, 4.836824410234336), -2.3264990550778193), ((6.57387443996394, 6.575874439963941), (3.163175589765664, 3.165175589765664), 0.8150935985119738), ((6.812456735831469, 6.814456735831469), (4.605655706406124, 4.607655706406125), 2.393561544960356), ((3.183543264168531, 3.1855432641685306), (3.3923442935938755, 3.3943442935938752), -0.7480311086294371)]
[INFO] [1753420015.135852736] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.25, 4.828000068664551, 3.8949999809265137])
[INFO] [1753420015.137380831] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.25       4.82800007 3.89499998]
[INFO] [1753420015.141102953] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420015.141983899] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420015.142707690] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420015.143484921] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420015.144302633] [solver_node]: 求解器返回结果: [((4.0463425405060365, 4.048342540506037), (4.4464981237688646, 4.448498123768865), -1.0684723866547277), ((3.8542768460820476, 3.8562768460820473), (4.390582614226805, 4.392582614226805), -2.15675317948891), ((5.949657459493963, 5.951657459493964), (3.5515018762311366, 3.5535018762311363), 2.073120266935066), ((6.141723153917952, 6.143723153917953), (3.6074173857731946, 3.6094173857731944), 0.9848394741008828), ((6.813883993546395, 6.815883993546396), (4.554121280457341, 4.556121280457342), 2.3802532888353563), ((3.182116006453604, 3.184116006453604), (3.4438787195426595, 3.4458787195426592), -0.7613393647544371), ((6.603655706406124, 6.605655706406124), (3.2179958362495067, 3.2199958362495065), 0.8227652181654594), ((3.3923442935938755, 3.3943442935938752), (4.780004163750494, 4.782004163750495), -2.3188274354243337), ((3.443878719542658, 3.445878719542658), (4.815883993546395, 4.8178839935463955), -2.3321356915493334), ((6.5521212804573405, 6.554121280457341), (3.1821160064536045, 3.1841160064536043), 0.8094569620404596), ((6.778004163750492, 6.780004163750493), (4.605655706406124, 4.607655706406125), 2.393561544960356), ((3.2179958362495067, 3.2199958362495065), (3.3923442935938755, 3.3943442935938752), -0.7480311086294371)]
[INFO] [1753420015.236085975] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 4.25, 4.828000068664551, 3.8949999809265137])
[INFO] [1753420015.237596821] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 4.25       4.82800007 3.89499998]
[INFO] [1753420015.241412994] [solver_node]: [PoseSolver] 第0个组合有12个有效解
[INFO] [1753420015.242352980] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420015.243266727] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420015.246112832] [solver_node]: [PoseSolver] 找到12个完美相容解 (相容数=N)
[INFO] [1753420015.249976077] [solver_node]: 求解器返回结果: [((4.0463425405060365, 4.048342540506037), (4.4464981237688646, 4.448498123768865), -1.0684723866547277), ((3.8542768460820476, 3.8562768460820473), (4.390582614226805, 4.392582614226805), -2.15675317948891), ((5.949657459493963, 5.951657459493964), (3.5515018762311366, 3.5535018762311363), 2.073120266935066), ((6.141723153917952, 6.143723153917953), (3.6074173857731946, 3.6094173857731944), 0.9848394741008828), ((6.813883993546395, 6.815883993546396), (4.554121280457341, 4.556121280457342), 2.3802532888353563), ((3.182116006453604, 3.184116006453604), (3.4438787195426595, 3.4458787195426592), -0.7613393647544371), ((6.603655706406124, 6.605655706406124), (3.2179958362495067, 3.2199958362495065), 0.8227652181654594), ((3.3923442935938755, 3.3943442935938752), (4.780004163750494, 4.782004163750495), -2.3188274354243337), ((3.443878719542658, 3.445878719542658), (4.815883993546395, 4.8178839935463955), -2.3321356915493334), ((6.5521212804573405, 6.554121280457341), (3.1821160064536045, 3.1841160064536043), 0.8094569620404596), ((6.778004163750492, 6.780004163750493), (4.605655706406124, 4.607655706406125), 2.393561544960356), ((3.2179958362495067, 3.2199958362495065), (3.3923442935938755, 3.3943442935938752), -0.7480311086294371)]
[INFO] [1753420015.336429296] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 6.611000061035156, 4.695000171661377, 3.9660000801086426])
[INFO] [1753420015.342007903] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 6.61100006 4.69500017 3.96600008]
[INFO] [1753420015.345799947] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420015.346878529] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420015.347665009] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420015.348429216] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420015.349177295] [solver_node]: 求解器返回结果: [((6.153700907600485, 6.155700907600486), (4.358883257204623, 4.360883257204624), -1.0798758204013268), ((3.842299092399514, 3.8442990923995137), (3.639116742795376, 3.6411167427953757), 2.0617168331884668), ((4.118895677578122, 4.1208956775781225), (6.841486816907275, 6.843486816907276), 0.19987406408898456), ((5.877104322421878, 5.879104322421878), (1.1565131830927262, 1.158513183092726), -2.941718589500808)]
[INFO] [1753420015.437165648] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 6.611000061035156, 4.695000171661377, 4.0])
[INFO] [1753420015.438936564] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 6.61100006 4.69500017 4.        ]
[INFO] [1753420015.442980901] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420015.446060642] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420015.448612150] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420015.450347224] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420015.451204713] [solver_node]: 求解器返回结果: [((6.132803350754408, 6.134803350754408), (4.3429620527517825, 4.344962052751783), -1.0735780197802889), ((5.6042908674837495, 5.60629086748375), (5.984860011132593, 5.986860011132594), -0.5420946767208388), ((5.726994626554249, 5.7289946265542495), (5.805743191510152, 5.807743191510153), -0.5900103587227321), ((3.8631966492455914, 3.865196649245591), (3.6550379472482164, 3.657037947248216), 2.0680146338095042), ((4.152218663520008, 4.154218663520009), (6.841486816907275, 6.843486816907276), 0.19987406408898456), ((4.39170913251625, 4.393709132516251), (2.0131399888674064, 2.015139988867406), 2.5994979768689546), ((4.269005373445751, 4.271005373445751), (2.192256808489847, 2.194256808489847), 2.5515822948670612), ((5.84378133647999, 5.845781336479991), (1.1565131830927262, 1.158513183092726), -2.941718589500808)]
[INFO] [1753420015.535935914] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 6.611000061035156, 4.695000171661377, 4.014999866485596])
[INFO] [1753420015.537418055] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 6.61100006 4.69500017 4.01499987]
[INFO] [1753420015.540626440] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420015.541446104] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420015.542294377] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420015.543028216] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420015.543774951] [solver_node]: 求解器返回结果: [((6.123621914956308, 6.125621914956309), (4.335971083616919, 4.33797108361692), -1.0708339991285287), ((5.543543570103089, 5.5455435701030895), (6.073930898102458, 6.075930898102459), -0.5167908041081006), ((5.804548149881988, 5.806548149881989), (5.692997964380532, 5.694997964380533), -0.6184752216235478), ((3.872378085043691, 3.874378085043691), (3.6620289163830804, 3.66402891638308), 2.0707586544612644), ((4.1669198846295545, 4.168919884629555), (6.841486816907275, 6.843486816907276), 0.19987406408898456), ((4.45245642989691, 4.4544564298969105), (1.9240691018975427, 1.9260691018975424), 2.6248018494816927), ((4.191451850118011, 4.193451850118012), (2.305002035619466, 2.307002035619466), 2.5231174319662455), ((5.829080115370445, 5.831080115370446), (1.1565131830927262, 1.158513183092726), -2.941718589500808)]
[INFO] [1753420015.636103519] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 6.611000061035156, 4.695000171661377, 4.020999908447266])
[INFO] [1753420015.637725663] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 6.61100006 4.69500017 4.02099991]
[INFO] [1753420015.641017889] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420015.641851154] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420015.642570368] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420015.643302927] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420015.644072575] [solver_node]: 求解器返回结果: [((6.1199557963852005, 6.121955796385201), (4.333180295173354, 4.3351802951733545), -1.0697421545277086), ((5.527823014615342, 5.529823014615343), (6.097030409399701, 6.099030409399702), -0.5100425553562882), ((5.826989351318014, 5.828989351318015), (5.660432120167518, 5.6624321201675185), -0.6264861060534346), ((3.8760442036147977, 3.8780442036147975), (3.6648197048266455, 3.6668197048266453), 2.0718504990620845), ((4.172800466542051, 4.1748004665420515), (6.841486816907275, 6.843486816907276), 0.19987406408898456), ((4.468176985384655, 4.470176985384656), (1.9009695906002997, 1.9029695906002995), 2.6315500982335047), ((4.169010648681985, 4.171010648681985), (2.337567879832481, 2.339567879832481), 2.5151065475363588), ((5.823199533457948, 5.8251995334579485), (1.1565131830927262, 1.158513183092726), -2.941718589500808)]
[INFO] [1753420015.737290729] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.4539999961853027, 4.732999801635742, 4.020999908447266])
[INFO] [1753420015.740296741] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.454      4.7329998  4.02099991]
[INFO] [1753420015.746138938] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420015.747546710] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420015.748825488] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420015.750620724] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420015.751887309] [solver_node]: 求解器返回结果: [((2.4645515075311364, 2.466551507531136), (4.348783069381997, 4.350783069381998), -1.0629023484497129), ((7.531448492468864, 7.533448492468865), (3.649216930618002, 3.6512169306180016), 2.0786903051400807), ((7.580040665387707, 7.582040665387708), (3.740740913152376, 3.742740913152376), 2.112838275097272), ((2.4159593346122925, 2.4179593346122923), (4.257259086847624, 4.259259086847624), -1.028754378492521), ((4.257259086847623, 4.259259086847623), (5.582040665387708, 5.584040665387708), -2.5995507052874176), ((5.738740913152375, 5.740740913152376), (2.415959334612291, 2.417959334612291), 0.5420419483023756), ((6.173619988896475, 6.175619988896476), (5.561566581040918, 5.563566581040918), 2.6082262501575157), ((3.822380011103524, 3.824380011103524), (2.4364334189590826, 2.4384334189590824), -0.5333664034322774)]
[INFO] [1753420015.835947680] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.13100004196167, 4.826000213623047, 4.015999794006348])
[INFO] [1753420015.837432573] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.13100004 4.82600021 4.01599979]
[INFO] [1753420015.840845794] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420015.844911155] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420015.846609749] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420015.847954192] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420015.849622097] [solver_node]: 求解器返回结果: [((4.487704071393221, 4.489704071393222), (5.789093719243934, 5.791093719243935), -2.6558552245528464), ((5.508295928606777, 5.510295928606777), (2.2089062807560658, 2.2109062807560655), 0.4857374290369465), ((6.0723699601056245, 6.074369960105625), (5.772093851714289, 5.77409385171429), 2.6643441566175574), ((3.923630039894375, 3.925630039894375), (2.2259061482857097, 2.2279061482857094), -0.4772484969722358)]
[INFO] [1753420015.937710229] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.13100004196167, 4.861999988555908, 4.0269999504089355])
[INFO] [1753420015.940969654] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.13100004 4.86199999 4.02699995]
[INFO] [1753420015.946489701] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420015.947373110] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420015.948291529] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420015.949020791] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420015.949753094] [solver_node]: 求解器返回结果: [((4.522241088924346, 4.524241088924347), (5.787858184695464, 5.789858184695465), -2.656907420357952), ((5.4737589110756515, 5.475758911075652), (2.210141815304535, 2.212141815304535), 0.4846852332318411), ((6.057578265726332, 6.059578265726333), (5.768863358572289, 5.7708633585722895), 2.6671786331739007), ((3.9384217342736676, 3.9404217342736674), (2.2291366414277114, 2.231136641427711), -0.47441402041589253)]
[INFO] [1753420016.035834530] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.7790000438690186, 4.861999988555908, 3.993000030517578])
[INFO] [1753420016.037304128] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.77900004 4.86199999 3.99300003]
[INFO] [1753420016.040411934] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420016.041224206] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420016.041921372] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420016.042615306] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420016.043363993] [solver_node]: 求解器返回结果: [((4.6747309606930445, 4.676730960693045), (6.0395628026340695, 6.04156280263407), -2.7198986518046366), ((5.321269039306953, 5.323269039306954), (1.95843719736593, 1.9604371973659298), 0.4216940017851563), ((5.997311555892156, 5.999311555892157), (6.031126881375136, 6.033126881375137), 2.722317360400554), ((3.998688444107843, 4.000688444107843), (1.9668731186248642, 1.968873118624864), -0.419275293189239)]
[INFO] [1753420016.137216850] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.7790000438690186, 4.861999988555908, 3.993000030517578])
[INFO] [1753420016.138717744] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.77900004 4.86199999 3.99300003]
[INFO] [1753420016.141860559] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420016.142756769] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420016.143503280] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420016.144328737] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420016.145092304] [solver_node]: 求解器返回结果: [((4.6747309606930445, 4.676730960693045), (6.0395628026340695, 6.04156280263407), -2.7198986518046366), ((5.321269039306953, 5.323269039306954), (1.95843719736593, 1.9604371973659298), 0.4216940017851563), ((5.997311555892156, 5.999311555892157), (6.031126881375136, 6.033126881375137), 2.722317360400554), ((3.998688444107843, 4.000688444107843), (1.9668731186248642, 1.968873118624864), -0.419275293189239)]
[INFO] [1753420016.237294600] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.121000051498413, 4.861999988555908, 3.8559999465942383])
[INFO] [1753420016.239605686] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.12100005 4.86199999 3.85599995]
[INFO] [1753420016.246519361] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420016.247658584] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420016.248406823] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420016.250279052] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420016.251403043] [solver_node]: 求解器返回结果: [((4.923329550771502, 4.925329550771503), (6.573075232060119, 6.57507523206012), -2.8457554608088262), ((5.072670449228496, 5.074670449228496), (1.4249247679398802, 1.42692476793988), 0.2958371927809671), ((5.983215540289053, 5.985215540289054), (6.574194536442142, 6.576194536442142), 2.832877145983044), ((4.012784459710946, 4.014784459710946), (1.4238054635578585, 1.4258054635578583), -0.3087155076067489)]
[INFO] [1753420016.337382174] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.121000051498413, 4.861999988555908, 3.8559999465942383])
[INFO] [1753420016.338922621] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.12100005 4.86199999 3.85599995]
[INFO] [1753420016.342203902] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420016.343126929] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420016.343915041] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420016.344682736] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420016.345442463] [solver_node]: 求解器返回结果: [((4.923329550771502, 4.925329550771503), (6.573075232060119, 6.57507523206012), -2.8457554608088262), ((5.072670449228496, 5.074670449228496), (1.4249247679398802, 1.42692476793988), 0.2958371927809671), ((5.983215540289053, 5.985215540289054), (6.574194536442142, 6.576194536442142), 2.832877145983044), ((4.012784459710946, 4.014784459710946), (1.4238054635578585, 1.4258054635578583), -0.3087155076067489)]
[INFO] [1753420016.436551649] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1510000228881836, 4.861999988555908, 3.8559999465942383])
[INFO] [1753420016.438517769] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.15100002 4.86199999 3.85599995]
[INFO] [1753420016.448059944] [solver_node]: [PoseSolver] 第0个组合有4个有效解
[INFO] [1753420016.449463524] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420016.451846100] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420016.454994355] [solver_node]: [PoseSolver] 找到4个完美相容解 (相容数=N)
[INFO] [1753420016.457687145] [solver_node]: 求解器返回结果: [((4.912191066214492, 4.914191066214492), (6.547391740583573, 6.549391740583574), -2.8391507036550045), ((5.083808933785507, 5.085808933785508), (1.450608259416426, 1.4526082594164258), 0.3024419499347884), ((5.988717278167413, 5.990717278167414), (6.548018232290685, 6.550018232290686), 2.8276388383175615), ((4.007282721832587, 4.009282721832587), (1.4499817677093145, 1.4519817677093143), -0.31395381527223165)]
[INFO] [1753420016.536112749] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.9769999980926514, 4.861999988555908, 0.777999997138977])
[INFO] [1753420016.537619755] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.977      4.86199999 0.778     ]
[INFO] [1753420016.540651304] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420016.541453816] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420016.542170630] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420016.542933302] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420016.543709733] [solver_node]: 求解器返回结果: [((9.070911586154955, 9.072911586154953), (4.526733354986788, 4.528733354986788), 2.3792379865252666), ((0.925088413845045, 0.927088413845045), (3.471266645013214, 3.4732666450132137), -0.7623546670645267), ((8.699584940545135, 8.701584940545134), (1.0825977750160338, 1.0845977750160336), 1.2874655222617368), ((1.2964150594548642, 1.298415059454864), (6.915402224983966, 6.917402224983967), -1.8541271313280563), ((3.471266645013212, 3.473266645013212), (7.072911586154954, 7.074911586154955), -2.333150993859423), ((6.524733354986785, 6.526733354986786), (0.925088413845045, 0.927088413845045), 0.8084416597303699), ((8.913402224983967, 8.915402224983966), (6.701584940545136, 6.703584940545137), 2.8582618490566336), ((1.0825977750160338, 1.0845977750160336), (1.2964150594548645, 1.2984150594548642), -0.28333080453315973)]
[INFO] [1753420016.635863068] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.9729999899864197, 4.861999988555908, 0.777999997138977])
[INFO] [1753420016.637286681] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.97299999 4.86199999 0.778     ]
[INFO] [1753420016.640212051] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420016.641002915] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420016.643319922] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420016.644092673] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420016.644854512] [solver_node]: 求解器返回结果: [((9.071927821881243, 9.073927821881242), (4.519822400363753, 4.521822400363754), 2.3774510749867597), ((0.9240721781187579, 0.9260721781187579), (3.4781775996362465, 3.4801775996362463), -0.7641415786030334), ((8.703163841167521, 8.70516384116752), (1.0826523087421258, 1.0846523087421256), 1.2881762053304748), ((1.292836158832478, 1.2948361588324777), (6.915347691257874, 6.917347691257874), -1.8534164482593183), ((3.4781775996362456, 3.4801775996362454), (7.0739278218812425, 7.075927821881243), -2.33493790539793), ((6.517822400363753, 6.519822400363753), (0.9240721781187579, 0.9260721781187579), 0.8066547481918632), ((8.913347691257874, 8.915347691257873), (6.705163841167522, 6.707163841167523), 2.8589725321253714), ((1.0826523087421258, 1.0846523087421256), (1.2928361588324782, 1.294836158832478), -0.2826201214644217)]
[INFO] [1753420016.735781231] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.9810000061988831, 4.861999988555908, 0.777999997138977])
[INFO] [1753420016.737305133] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.98100001 4.86199999 0.778     ]
[INFO] [1753420016.740472045] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420016.741307773] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420016.742084013] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420016.742849628] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420016.743645420] [solver_node]: 求解器返回结果: [((9.069902079950479, 9.071902079950478), (4.533629567614647, 4.535629567614648), 2.3810182356348712), ((0.92609792004952, 0.92809792004952), (3.464370432385354, 3.4663704323853537), -0.760574417954922), ((8.696008175339605, 8.698008175339604), (1.0825427168961246, 1.0845427168961244), 1.286755133191968), ((1.2999918246603948, 1.3019918246603945), (6.915457283103875, 6.917457283103876), -1.8548375203978251), ((3.4643704323853526, 3.4663704323853524), (7.07190207995048, 7.07390207995048), -2.3313707447498184), ((6.531629567614645, 6.533629567614645), (0.92609792004952, 0.92809792004952), 0.8102219088399746), ((8.913457283103876, 8.915457283103875), (6.698008175339605, 6.7000081753396055), 2.8575514599868646), ((1.0825427168961246, 1.0845427168961244), (1.2999918246603945, 1.3019918246603943), -0.28404119360292845)]
[INFO] [1753420016.835888165] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.9810000061988831, 2.9110000133514404, 0.8040000200271606])
[INFO] [1753420016.837398371] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.98100001 2.91100001 0.80400002]
[INFO] [1753420016.841120046] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420016.842287813] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420016.843314522] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420016.844135594] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420016.845050653] [solver_node]: 求解器返回结果: [((9.05814372668356, 9.06014372668356), (5.849121874225863, 5.851121874225863), 2.3690192082150894), ((0.937856273316439, 0.939856273316439), (2.1488781257741367, 2.1508781257741365), -0.7725734453747036), ((8.768154909078614, 8.770154909078613), (1.0814395424161123, 1.083439542416112), 1.1332370066401354), ((1.2278450909213854, 1.2298450909213852), (6.916560457583888, 6.918560457583888), -2.0083556469496577), ((2.1488781257741367, 2.1508781257741365), (7.0601437266835605, 7.062143726683561), -2.3433697721696003), ((7.847121874225862, 7.849121874225863), (0.937856273316439, 0.939856273316439), 0.7982228814201929), ((8.914560457583887, 8.916560457583886), (6.770154909078614, 6.772154909078615), 2.704033333435032), ((1.0814395424161123, 1.083439542416112), (1.2278450909213854, 1.2298450909213852), -0.4375593201547611)]
[INFO] [1753420016.936082525] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.9919999837875366, 2.9110000133514404, 0.8040000200271606])
[INFO] [1753420016.937676029] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.99199998 2.91100001 0.80400002]
[INFO] [1753420016.940933726] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420016.941840753] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420016.942608448] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420016.943510258] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420016.944309282] [solver_node]: 求解器返回结果: [((9.05525703323677, 9.05725703323677), (5.861010900674944, 5.8630109006749445), 2.3738856973463367), ((0.9407429667632291, 0.9427429667632291), (2.136989099325056, 2.1389890993250558), -0.7677069562434566), ((8.759785127518962, 8.76178512751896), (1.080729346504591, 1.0827293465045909), 1.1304539608228379), ((1.2362148724810373, 1.2382148724810371), (6.917270653495409, 6.91927065349541), -2.0111386927669552), ((2.1369890993250555, 2.1389890993250553), (7.057257033236771, 7.059257033236771), -2.338503283038353), ((7.859010900674943, 7.861010900674944), (0.940742966763229, 0.942742966763229), 0.8030893705514399), ((8.915270653495408, 8.917270653495407), (6.761785127518963, 6.763785127518964), 2.701250287617735), ((1.080729346504591, 1.0827293465045909), (1.2362148724810371, 1.238214872481037), -0.44034236597205845)]
[INFO] [1753420017.036557884] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.9919999837875366, 2.9110000133514404, 0.8429999947547913])
[INFO] [1753420017.038493923] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.99199998 2.91100001 0.84299999]
[INFO] [1753420017.041736292] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420017.042833050] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420017.044398745] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420017.045229898] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420017.045997177] [solver_node]: 求解器返回结果: [((9.03814850834186, 9.04014850834186), (5.8185345103467405, 5.820534510346741), 2.3564016509148673), ((0.9578514916581388, 0.9598514916581388), (2.179465489653259, 2.1814654896532586), -0.7851910026749257), ((8.759785127518962, 8.76178512751896), (1.1160090713044188, 1.1180090713044186), 1.1304539608228379), ((1.2362148724810373, 1.2382148724810371), (6.881990928695581, 6.883990928695582), -2.0111386927669552), ((2.179465489653258, 2.1814654896532577), (7.040148508341861, 7.042148508341862), -2.355987329469822), ((7.816534510346741, 7.818534510346741), (0.9578514916581385, 0.9598514916581385), 0.785605324119971), ((8.87999092869558, 8.88199092869558), (6.761785127518963, 6.763785127518964), 2.701250287617735), ((1.1160090713044188, 1.1180090713044186), (1.2362148724810371, 1.238214872481037), -0.44034236597205845)]
[INFO] [1753420017.135839108] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.9909999966621399, 2.9110000133514404, 0.8970000147819519])
[INFO] [1753420017.137382979] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.991      2.91100001 0.89700001]
[INFO] [1753420017.140970827] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420017.142132930] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420017.143194807] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420017.144029640] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420017.144828440] [solver_node]: 求解器返回结果: [((9.016170366819647, 9.018170366819646), (5.762074216875507, 5.764074216875508), 2.332723206987499), ((0.9798296331803525, 0.9818296331803525), (2.2359257831244927, 2.2379257831244925), -0.8088694466022943), ((8.760544709856061, 8.76254470985606), (1.1649328170875546, 1.1669328170875544), 1.1307066616320691), ((1.235455290143939, 1.2374552901439388), (6.833067182912445, 6.835067182912446), -2.010885991957724), ((2.2359257831244923, 2.237925783124492), (7.018170366819647, 7.020170366819648), -2.379665773397191), ((7.760074216875506, 7.762074216875507), (0.9798296331803528, 0.9818296331803528), 0.7619268801926022), ((8.831067182912445, 8.833067182912444), (6.76254470985606, 6.764544709856061), 2.7015029884269657), ((1.1649328170875546, 1.1669328170875544), (1.235455290143939, 1.2374552901439388), -0.44008966516282744)]
[INFO] [1753420017.235877819] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.9909999966621399, 2.9110000133514404, 0.9409999847412109])
[INFO] [1753420017.237334392] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.991      2.91100001 0.94099998]
[INFO] [1753420017.240297236] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420017.241144741] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420017.241905268] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420017.242659363] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420017.243516724] [solver_node]: 求解器返回结果: [((8.99916814991067, 9.001168149910669), (5.719680451801069, 5.7216804518010695), 2.3145890610603757), ((0.9968318500893302, 0.9988318500893302), (2.27831954819893, 2.28031954819893), -0.8270035925294174), ((8.760544709856061, 8.76254470985606), (1.2047403201925568, 1.2067403201925566), 1.1307066616320691), ((1.235455290143939, 1.2374552901439388), (6.793259679807443, 6.795259679807444), -2.010885991957724), ((2.278319548198929, 2.280319548198929), (7.0011681499106695, 7.00316814991067), -2.3977999193243136), ((7.71768045180107, 7.719680451801071), (0.9968318500893304, 0.9988318500893304), 0.7437927342654793), ((8.791259679807442, 8.793259679807441), (6.76254470985606, 6.764544709856061), 2.7015029884269657), ((1.2047403201925568, 1.2067403201925566), (1.235455290143939, 1.2374552901439388), -0.44008966516282744)]
[INFO] [1753420017.336380124] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.222000002861023, 2.9110000133514404, 0.9409999847412109])
[INFO] [1753420017.337994684] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.222      2.91100001 0.94099998]
[INFO] [1753420017.341528227] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420017.342475478] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420017.343314599] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420017.344081206] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420017.344869798] [solver_node]: 求解器返回结果: [((8.934448187135008, 8.936448187135007), (5.943599835623714, 5.945599835623715), 2.4071427801773253), ((1.0615518128649923, 1.0635518128649921), (2.0544001643762857, 2.0564001643762855), -0.7344498734124678), ((8.592010632215723, 8.594010632215722), (1.1849416766282743, 1.186941676628274), 1.0739481597535407), ((1.4039893677842767, 1.4059893677842765), (6.813058323371726, 6.815058323371726), -2.0676444938362524), ((2.0544001643762857, 2.0564001643762855), (6.936448187135007, 6.938448187135008), -2.3052462002073644), ((7.941599835623713, 7.943599835623714), (1.0615518128649926, 1.0635518128649923), 0.8363464533824287), ((8.811058323371725, 8.813058323371724), (6.594010632215723, 6.596010632215724), 2.6447444865484373), ((1.1849416766282743, 1.186941676628274), (1.4039893677842767, 1.4059893677842765), -0.49684816704135565)]
[INFO] [1753420017.435942794] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.440999984741211, 2.9110000133514404, 0.9950000047683716])
[INFO] [1753420017.437550250] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.44099998 2.91100001 0.995     ]
[INFO] [1753420017.440838796] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420017.441957378] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420017.442970647] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420017.443866921] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420017.444801947] [solver_node]: 求解器返回结果: [((8.859949224027046, 8.861949224027045), (6.078043986282016, 6.080043986282017), 2.4594439191137925), ((1.1360507759729548, 1.1380507759729546), (1.9199560137179834, 1.9219560137179832), -0.6821487344760004), ((8.445064396640566, 8.447064396640565), (1.210095150967942, 1.2120951509679418), 1.0231739214103586), ((1.5509356033594344, 1.5529356033594341), (6.787904849032057, 6.789904849032058), -2.1184187321794345), ((1.9199560137179836, 1.9219560137179834), (6.861949224027045, 6.863949224027046), -2.252945061270897), ((8.076043986282016, 8.078043986282015), (1.1360507759729548, 1.1380507759729546), 0.8886475923188961), ((8.785904849032057, 8.787904849032056), (6.447064396640565, 6.449064396640566), 2.593970248205255), ((1.2100951509679423, 1.212095150967942), (1.5509356033594346, 1.5529356033594344), -0.5476224053845381)]
[INFO] [1753420017.536204805] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.440999984741211, 2.9110000133514404, 0.9950000047683716])
[INFO] [1753420017.537891719] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.44099998 2.91100001 0.995     ]
[INFO] [1753420017.541407406] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420017.544944469] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420017.548532893] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420017.549580882] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420017.550386626] [solver_node]: 求解器返回结果: [((8.859949224027046, 8.861949224027045), (6.078043986282016, 6.080043986282017), 2.4594439191137925), ((1.1360507759729548, 1.1380507759729546), (1.9199560137179834, 1.9219560137179832), -0.6821487344760004), ((8.445064396640566, 8.447064396640565), (1.210095150967942, 1.2120951509679418), 1.0231739214103586), ((1.5509356033594344, 1.5529356033594341), (6.787904849032057, 6.789904849032058), -2.1184187321794345), ((1.9199560137179836, 1.9219560137179834), (6.861949224027045, 6.863949224027046), -2.252945061270897), ((8.076043986282016, 8.078043986282015), (1.1360507759729548, 1.1380507759729546), 0.8886475923188961), ((8.785904849032057, 8.787904849032056), (6.447064396640565, 6.449064396640566), 2.593970248205255), ((1.2100951509679423, 1.212095150967942), (1.5509356033594346, 1.5529356033594344), -0.5476224053845381)]
[INFO] [1753420017.635805812] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.440999984741211, 2.9110000133514404, 1.062000036239624])
[INFO] [1753420017.637315666] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.44099998 2.91100001 1.06200004]
[INFO] [1753420017.640708662] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420017.641595848] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420017.642352215] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420017.643081894] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420017.643838101] [solver_node]: 求解器返回结果: [((8.825057381903122, 8.82705738190312), (6.013201602836246, 6.015201602836247), 2.434482942323977), ((1.1709426180968774, 1.1729426180968772), (1.984798397163753, 1.9867983971637528), -0.7071097112658162), ((8.445064396640566, 8.447064396640565), (1.2672976790312276, 1.2692976790312274), 1.0231739214103586), ((1.5509356033594344, 1.5529356033594341), (6.730702320968772, 6.732702320968773), -2.1184187321794345), ((1.9847983971637522, 1.986798397163752), (6.827057381903122, 6.829057381903123), -2.2779060380607126), ((8.011201602836246, 8.013201602836245), (1.1709426180968776, 1.1729426180968774), 0.8636866155290804), ((8.728702320968772, 8.73070232096877), (6.447064396640565, 6.449064396640566), 2.593970248205255), ((1.2672976790312276, 1.2692976790312274), (1.5509356033594346, 1.5529356033594344), -0.5476224053845381)]
[INFO] [1753420017.735875980] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.440999984741211, 2.9110000133514404, 1.1260000467300415])
[INFO] [1753420017.737415755] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.44099998 2.91100001 1.12600005]
[INFO] [1753420017.740639916] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420017.741516029] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420017.742268908] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420017.743070012] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420017.743921037] [solver_node]: 求解器返回结果: [((8.793702626942716, 8.795702626942715), (5.954827273494417, 5.956827273494418), 2.4115936020943343), ((1.2022973730572835, 1.2042973730572832), (2.043172726505581, 2.0451727265055806), -0.7299990514954586), ((8.445064396640566, 8.447064396640565), (1.3219388831581158, 1.3239388831581156), 1.0231739214103586), ((1.5509356033594344, 1.5529356033594341), (6.6760611168418835, 6.678061116841884), -2.1184187321794345), ((2.0431727265055803, 2.04517272650558), (6.795702626942717, 6.797702626942717), -2.300795378290355), ((7.952827273494418, 7.954827273494419), (1.2022973730572832, 1.204297373057283), 0.840797275299438), ((8.674061116841884, 8.676061116841883), (6.447064396640565, 6.449064396640566), 2.593970248205255), ((1.3219388831581158, 1.3239388831581156), (1.5509356033594346, 1.5529356033594344), -0.5476224053845381)]
[INFO] [1753420017.838524824] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1369999647140503, 2.9110000133514404, 1.1260000467300415])
[INFO] [1753420017.840250714] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.13699996 2.91100001 1.12600005]
[INFO] [1753420017.844418734] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420017.846427030] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420017.847460075] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420017.848306588] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420017.849097164] [solver_node]: 求解器返回结果: [((8.882189078465919, 8.884189078465917), (5.698162925142705, 5.700162925142705), 2.3052603126486657), ((1.113810921534082, 1.1158109215340817), (2.2998370748572956, 2.3018370748572954), -0.8363323409411274), ((8.652403772576287, 8.654403772576286), (1.3569447936852725, 1.3589447936852723), 1.0944535716818957), ((1.3435962274237134, 1.3455962274237132), (6.641055206314728, 6.643055206314728), -2.0471390819078974), ((2.2998370748572956, 2.3018370748572954), (6.884189078465918, 6.886189078465919), -2.407128667736024), ((7.696162925142704, 7.698162925142705), (1.1138109215340815, 1.1158109215340812), 0.7344639858537693), ((8.639055206314728, 8.641055206314727), (6.654403772576287, 6.6564037725762875), 2.6652498984767923), ((1.3569447936852725, 1.3589447936852723), (1.3435962274237132, 1.345596227423713), -0.47634275511300067)]
[INFO] [1753420017.935902970] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1369999647140503, 2.9110000133514404, 0.9390000104904175])
[INFO] [1753420017.937424280] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.13699996 2.91100001 0.93900001]
[INFO] [1753420017.940738683] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420017.941911986] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420017.942939271] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420017.944844653] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420017.945951075] [solver_node]: 求解器返回结果: [((8.9567499669325, 8.9587499669325), (5.865933213804692, 5.867933213804693), 2.3758944789178136), ((1.0392500330675003, 1.0412500330675), (2.132066786195307, 2.134066786195307), -0.7656981746719796), ((8.652403772576287, 8.654403772576286), (1.1907613779928883, 1.192761377992888), 1.0944535716818957), ((1.3435962274237134, 1.3455962274237132), (6.8072386220071115, 6.809238622007112), -2.0471390819078974), ((2.1320667861953067, 2.1340667861953064), (6.9587499669324995, 6.9607499669325), -2.336494501466876), ((7.863933213804692, 7.865933213804692), (1.0392500330675003, 1.0412500330675), 0.8050981521229169), ((8.805238622007112, 8.80723862200711), (6.654403772576287, 6.6564037725762875), 2.6652498984767923), ((1.1907613779928883, 1.192761377992888), (1.3435962274237132, 1.345596227423713), -0.47634275511300067)]
[INFO] [1753420018.035949458] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.621999979019165, 2.9110000133514404, 0.7459999918937683])
[INFO] [1753420018.037440464] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.62199998 2.91100001 0.74599999]
[INFO] [1753420018.040560622] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420018.041421664] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420018.042142126] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420018.042891773] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420018.043659469] [solver_node]: 求解器返回结果: [((9.201534703469722, 9.203534703469721), (5.482309063550831, 5.484309063550832), 2.2061638116532505), ((0.7944652965302771, 0.7964652965302771), (2.515690936449168, 2.517690936449168), -0.9354288419365424), ((9.058214157105795, 9.060214157105793), (1.0459533105247236, 1.0479533105247234), 1.2279415507336455), ((0.9377858428942053, 0.9397858428942053), (6.952046689475276, 6.954046689475277), -1.9136511028561476), ((2.5156909364491686, 2.5176909364491684), (7.203534703469723, 7.2055347034697235), -2.506225168731439), ((7.4803090635508305, 7.482309063550831), (0.7944652965302771, 0.7964652965302771), 0.6353674848583541), ((8.950046689475277, 8.952046689475276), (7.0602141571057935, 7.062214157105794), 2.798737877528542), ((1.0459533105247236, 1.0479533105247234), (0.9377858428942056, 0.9397858428942056), -0.3428547760612511)]
[INFO] [1753420018.136570935] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10700000077486038, 2.9110000133514404, 0.7730000019073486])
[INFO] [1753420018.138110358] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.107      2.91100001 0.773     ]
[WARN] [1753420018.139288782] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420018.140083230] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420018.140941967] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420018.236711283] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10700000077486038, 2.9110000133514404, 0.7730000019073486])
[INFO] [1753420018.238162032] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.107      2.91100001 0.773     ]
[WARN] [1753420018.239329415] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420018.240083415] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420018.246588569] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420018.337217014] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.09399999678134918, 2.9110000133514404, 0.7429999709129333])
[WARN] [1753420018.340293972] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420018.437728761] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.09399999678134918, 2.9110000133514404, 0.7429999709129333])
[WARN] [1753420018.438978034] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420018.537224104] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.09000000357627869, 2.9110000133514404, 0.7429999709129333])
[WARN] [1753420018.538277661] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420018.637991088] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.08500000089406967, 2.9110000133514404, 0.7429999709129333])
[WARN] [1753420018.639808372] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420018.741993913] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.08500000089406967, 2.9110000133514404, 0.7429999709129333])
[WARN] [1753420018.744735120] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420018.837329524] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.08500000089406967, 2.9110000133514404, 0.7429999709129333])
[WARN] [1753420018.838463019] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420018.935895664] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.07599999755620956, 2.9110000133514404, 0.7429999709129333])
[WARN] [1753420018.936960422] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420019.038768228] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.07500000298023224, 2.9110000133514404, 0.7429999709129333])
[WARN] [1753420019.040017341] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420019.137973487] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.07500000298023224, 2.9110000133514404, 0.7429999709129333])
[WARN] [1753420019.139348075] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420019.236109797] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.07500000298023224, 2.9110000133514404, 0.7429999709129333])
[WARN] [1753420019.237414911] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420019.336130240] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.07500000298023224, 2.9110000133514404, 0.7429999709129333])
[WARN] [1753420019.337264759] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420019.435813621] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.07599999755620956, 2.9110000133514404, 1.218000054359436])
[WARN] [1753420019.436884266] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420019.535972563] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.07800000160932541, 2.9110000133514404, 1.3459999561309814])
[WARN] [1753420019.537031465] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420019.636508569] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.07800000160932541, 2.9110000133514404, 1.472000002861023])
[WARN] [1753420019.637549134] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420019.735884552] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.08100000023841858, 2.9110000133514404, 1.472000002861023])
[WARN] [1753420019.736947101] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420019.835843970] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.09000000357627869, 2.9110000133514404, 1.472000002861023])
[WARN] [1753420019.837072955] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420019.935874430] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.09000000357627869, 2.9110000133514404, 1.4769999980926514])
[WARN] [1753420019.936902707] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420020.037807489] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.09000000357627869, 2.9110000133514404, 1.4780000448226929])
[WARN] [1753420020.038966840] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420020.135806998] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.10400000214576721, 2.9110000133514404, 1.4789999723434448])
[INFO] [1753420020.137469751] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.104      2.91100001 1.47899997]
[WARN] [1753420020.138594606] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420020.139844007] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420020.140747577] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420020.235793299] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.21199999749660492, 2.9110000133514404, 1.4789999723434448])
[INFO] [1753420020.237283825] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.212      2.91100001 1.47899997]
[WARN] [1753420020.238459881] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420020.239262777] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420020.240123018] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420020.336739300] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.1899999976158142, 2.9110000133514404, 1.4789999723434448])
[INFO] [1753420020.338268610] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 0.19       2.91100001 1.47899997]
[WARN] [1753420020.339501179] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420020.340335020] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420020.341194493] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420020.436713376] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.03999999910593033, 2.9110000133514404, 1.4769999980926514])
[WARN] [1753420020.437791702] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420020.536530138] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.03999999910593033, 3.4140000343322754, 1.4769999980926514])
[WARN] [1753420020.537616720] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420020.637118596] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.03999999910593033, 3.1070001125335693, 1.4769999980926514])
[WARN] [1753420020.638247354] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420020.735732005] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.03999999910593033, 2.811000108718872, 1.5160000324249268])
[WARN] [1753420020.736724505] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420020.835818468] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.03999999910593033, 2.5139999389648438, 1.5160000324249268])
[WARN] [1753420020.836860569] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420020.938643483] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 0.03999999910593033, 2.5139999389648438, 1.6920000314712524])
[WARN] [1753420020.941802234] [solver_node]: 有效激光数据点不足3个，跳过本次解算
[INFO] [1753420021.037917098] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.0339999198913574, 2.5139999389648438, 1.6920000314712524])
[INFO] [1753420021.042997809] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.03399992 2.51399994 1.69200003]
[INFO] [1753420021.047456970] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420021.053558117] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420021.054651355] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420021.055588590] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420021.056437151] [solver_node]: 求解器返回结果: [((8.3822455310529, 8.3842455310529), (6.199708547527301, 6.201708547527302), 2.4026583417765592), ((1.6137544689470986, 1.6157544689470984), (1.7982914524726978, 1.8002914524726976), -0.7389343118132338), ((8.206730392442124, 8.208730392442122), (1.6184640450471517, 1.6204640450471515), 0.8359278505101573), ((1.7892696075578778, 1.7912696075578776), (6.379535954952848, 6.381535954952849), -2.305664803079636), ((1.7982914524726983, 1.800291452472698), (6.384245531052901, 6.386245531052902), -2.3097306386081304), ((8.197708547527302, 8.199708547527301), (1.6137544689470986, 1.6157544689470984), 0.8318620149816628), ((8.37753595495285, 8.379535954952848), (6.208730392442122, 6.210730392442123), 2.406724177305054), ((1.6184640450471517, 1.6204640450471515), (1.7892696075578773, 1.7912696075578771), -0.7348684762847394)]
[INFO] [1753420021.137611428] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.0339999198913574, 2.7260000705718994, 1.6920000314712524])
[INFO] [1753420021.140488862] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.03399992 2.72600007 1.69200003]
[INFO] [1753420021.144470158] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420021.146008045] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420021.146874942] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420021.147592205] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420021.148360956] [solver_node]: 求解器返回结果: [((8.3822455310529, 8.3842455310529), (6.056926341936611, 6.058926341936612), 2.4026583417765592), ((1.6137544689470986, 1.6157544689470984), (1.9410736580633874, 1.9430736580633872), -0.7389343118132338), ((8.150598505701153, 8.152598505701151), (1.6585854341809567, 1.6605854341809565), 0.8715613689281927), ((1.845401494298847, 1.8474014942988468), (6.339414565819043, 6.3414145658190435), -2.2700312846616004), ((1.941073658063388, 1.9430736580633878), (6.384245531052901, 6.386245531052902), -2.3097306386081304), ((8.054926341936612, 8.056926341936611), (1.6137544689470986, 1.6157544689470984), 0.8318620149816628), ((8.337414565819044, 8.339414565819043), (6.152598505701152, 6.154598505701153), 2.4423576957230893), ((1.6585854341809567, 1.6605854341809565), (1.8454014942988475, 1.8474014942988473), -0.6992349578667039)]
[INFO] [1753420021.236491277] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.0339999198913574, 2.7260000705718994, 1.6920000314712524])
[INFO] [1753420021.238060941] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.03399992 2.72600007 1.69200003]
[INFO] [1753420021.241203020] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420021.242071869] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420021.244755667] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420021.245735463] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420021.246907007] [solver_node]: 求解器返回结果: [((8.3822455310529, 8.3842455310529), (6.056926341936611, 6.058926341936612), 2.4026583417765592), ((1.6137544689470986, 1.6157544689470984), (1.9410736580633874, 1.9430736580633872), -0.7389343118132338), ((8.150598505701153, 8.152598505701151), (1.6585854341809567, 1.6605854341809565), 0.8715613689281927), ((1.845401494298847, 1.8474014942988468), (6.339414565819043, 6.3414145658190435), -2.2700312846616004), ((1.941073658063388, 1.9430736580633878), (6.384245531052901, 6.386245531052902), -2.3097306386081304), ((8.054926341936612, 8.056926341936611), (1.6137544689470986, 1.6157544689470984), 0.8318620149816628), ((8.337414565819044, 8.339414565819043), (6.152598505701152, 6.154598505701153), 2.4423576957230893), ((1.6585854341809567, 1.6605854341809565), (1.8454014942988475, 1.8474014942988473), -0.6992349578667039)]
[INFO] [1753420021.336345418] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.059000015258789, 2.7260000705718994, 1.6920000314712524])
[INFO] [1753420021.337987179] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.05900002 2.72600007 1.69200003]
[INFO] [1753420021.341230892] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420021.342133918] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420021.342940847] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420021.343696862] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420021.344515758] [solver_node]: 求解器返回结果: [((8.375672473314047, 8.377672473314046), (6.070432948304009, 6.07243294830401), 2.4083393547894447), ((1.6203275266859527, 1.6223275266859525), (1.9275670516959915, 1.9295670516959913), -0.7332532988003485), ((8.138931355237817, 8.140931355237816), (1.65332892733709, 1.6553289273370897), 0.8667852056132781), ((1.8570686447621823, 1.859068644762182), (6.344671072662909, 6.34667107266291), -2.274807447976515), ((1.9275670516959904, 1.9295670516959902), (6.377672473314047, 6.379672473314048), -2.304049625595245), ((8.06843294830401, 8.070432948304008), (1.620327526685953, 1.6223275266859527), 0.837543027994548), ((8.34267107266291, 8.344671072662909), (6.140931355237817, 6.142931355237818), 2.4375815324081747), ((1.65332892733709, 1.6553289273370897), (1.8570686447621823, 1.859068644762182), -0.7040111211816185)]
[INFO] [1753420021.435760254] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.059000015258789, 2.7260000705718994, 1.6920000314712524])
[INFO] [1753420021.437196859] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.05900002 2.72600007 1.69200003]
[INFO] [1753420021.440245656] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420021.441293933] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420021.442804716] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420021.443852161] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420021.444913942] [solver_node]: 求解器返回结果: [((8.375672473314047, 8.377672473314046), (6.070432948304009, 6.07243294830401), 2.4083393547894447), ((1.6203275266859527, 1.6223275266859525), (1.9275670516959915, 1.9295670516959913), -0.7332532988003485), ((8.138931355237817, 8.140931355237816), (1.65332892733709, 1.6553289273370897), 0.8667852056132781), ((1.8570686447621823, 1.859068644762182), (6.344671072662909, 6.34667107266291), -2.274807447976515), ((1.9275670516959904, 1.9295670516959902), (6.377672473314047, 6.379672473314048), -2.304049625595245), ((8.06843294830401, 8.070432948304008), (1.620327526685953, 1.6223275266859527), 0.837543027994548), ((8.34267107266291, 8.344671072662909), (6.140931355237817, 6.142931355237818), 2.4375815324081747), ((1.65332892733709, 1.6553289273370897), (1.8570686447621823, 1.859068644762182), -0.7040111211816185)]
[INFO] [1753420021.538105933] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.11299991607666, 2.7260000705718994, 1.6920000314712524])
[INFO] [1753420021.540389755] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.11299992 2.72600007 1.69200003]
[INFO] [1753420021.543516922] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420021.544377483] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420021.545092953] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420021.545779943] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420021.546526838] [solver_node]: 求解器返回结果: [((8.361925687671901, 8.3639256876719), (6.099240862564673, 6.101240862564674), 2.420370052685509), ((1.6340743123280979, 1.6360743123280976), (1.8987591374353257, 1.9007591374353254), -0.721222600904284), ((8.114191935521964, 8.116191935521963), (1.6419930112239476, 1.6439930112239474), 0.8565995723073305), ((1.8818080644780353, 1.883808064478035), (6.356006988776052, 6.358006988776053), -2.2849930812824626), ((1.8987591374353239, 1.9007591374353237), (6.363925687671903, 6.365925687671903), -2.2920189276991803), ((8.097240862564675, 8.099240862564674), (1.634074312328098, 1.6360743123280979), 0.8495737258906126), ((8.354006988776053, 8.356006988776052), (6.1161919355219645, 6.118191935521965), 2.427395899102227), ((1.6419930112239476, 1.6439930112239474), (1.8818080644780357, 1.8838080644780355), -0.714196754487566)]
[INFO] [1753420021.637998922] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2320001125335693, 2.7260000705718994, 1.6920000314712524])
[INFO] [1753420021.640941830] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.23200011 2.72600007 1.69200003]
[INFO] [1753420021.644376683] [solver_node]: 求解器返回结果: []
[INFO] [1753420021.736907380] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.325000047683716, 2.7260000705718994, 1.6920000314712524])
[INFO] [1753420021.738878588] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.32500005 2.72600007 1.69200003]
[INFO] [1753420021.742974414] [solver_node]: 求解器返回结果: []
[INFO] [1753420021.835999873] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.325000047683716, 2.7260000705718994, 1.6920000314712524])
[INFO] [1753420021.837686467] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.32500005 2.72600007 1.69200003]
[INFO] [1753420021.840499868] [solver_node]: 求解器返回结果: []
[INFO] [1753420021.935822206] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.3889999389648438, 2.7260000705718994, 1.6920000314712524])
[INFO] [1753420021.937325820] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.38899994 2.72600007 1.69200003]
[INFO] [1753420021.940152021] [solver_node]: 求解器返回结果: []
[INFO] [1753420022.036403882] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.3889999389648438, 2.7260000705718994, 1.6920000314712524])
[INFO] [1753420022.037909992] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.38899994 2.72600007 1.69200003]
[INFO] [1753420022.040669600] [solver_node]: 求解器返回结果: []
[INFO] [1753420022.139798576] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.3889999389648438, 2.7260000705718994, 1.6920000314712524])
[INFO] [1753420022.141374512] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.38899994 2.72600007 1.69200003]
[INFO] [1753420022.144592337] [solver_node]: 求解器返回结果: []
[INFO] [1753420022.240893672] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.3889999389648438, 2.7260000705718994, 1.6920000314712524])
[INFO] [1753420022.242394951] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.38899994 2.72600007 1.69200003]
[INFO] [1753420022.245360002] [solver_node]: 求解器返回结果: []
[INFO] [1753420022.337197216] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.3889999389648438, 2.7260000705718994, 1.6920000314712524])
[INFO] [1753420022.338607164] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.38899994 2.72600007 1.69200003]
[INFO] [1753420022.341473558] [solver_node]: 求解器返回结果: []
[INFO] [1753420022.441647036] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.364000082015991, 2.7260000705718994, 2.2780001163482666])
[INFO] [1753420022.445123586] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.36400008 2.72600007 2.27800012]
[INFO] [1753420022.450308298] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420022.451976876] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420022.453390121] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420022.455532564] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420022.458063207] [solver_node]: 求解器返回结果: [((8.04404336335401, 8.04604336335401), (5.920932465751835, 5.922932465751836), 2.34387732947816), ((1.9519566366459897, 1.9539566366459895), (2.0770675342481635, 2.0790675342481633), -0.7977153241116333), ((8.007110852123654, 8.009110852123653), (2.0148623330483266, 2.0168623330483264), 0.8115331048022414), ((1.9888891478763462, 1.990889147876346), (5.983137666951673, 5.985137666951673), -2.3300595487875517), ((2.077067534248164, 2.0790675342481637), (6.04604336335401, 6.048043363354011), -2.36851165090653), ((7.918932465751836, 7.920932465751837), (1.9519566366459897, 1.9539566366459895), 0.7730810026832634), ((7.981137666951672, 7.983137666951673), (6.009110852123654, 6.011110852123655), 2.382329431597138), ((2.014862333048327, 2.016862333048327), (1.9888891478763462, 1.990889147876346), -0.7592632219926551)]
[INFO] [1753420022.535883849] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2720000743865967, 2.7260000705718994, 2.059000015258789])
[INFO] [1753420022.538323803] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.27200007 2.72600007 2.05900002]
[INFO] [1753420022.541279126] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420022.542084550] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420022.542900951] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420022.543623237] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420022.544396149] [solver_node]: 求解器返回结果: [((8.158379405383485, 8.160379405383484), (5.97986515021729, 5.981865150217291), 2.369720380766777), ((1.837620594616515, 1.8396205946165147), (2.0181348497827085, 2.0201348497827083), -0.7718722728230164), ((8.044893533287132, 8.04689353328713), (1.8790517794463324, 1.8810517794463322), 0.8276249624681946), ((1.951106466712868, 1.9531064667128677), (6.1189482205536665, 6.120948220553667), -2.3139676911215985), ((2.0181348497827085, 2.0201348497827083), (6.160379405383485, 6.1623794053834855), -2.342668599617913), ((7.97786515021729, 7.97986515021729), (1.8376205946165152, 1.839620594616515), 0.7989240539718802), ((8.116948220553668, 8.118948220553667), (6.046893533287132, 6.048893533287132), 2.398421289263091), ((1.8790517794463328, 1.8810517794463326), (1.9511064667128677, 1.9531064667128675), -0.743171364326702)]
[INFO] [1753420022.636612634] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.1449999809265137, 2.7260000705718994, 2.25600004196167])
[INFO] [1753420022.638598562] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.14499998 2.72600007 2.25600004]
[INFO] [1753420022.643153822] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420022.644000783] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420022.644719742] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420022.645531502] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420022.646300638] [solver_node]: 求解器返回结果: [((8.129523108523724, 8.131523108523723), (5.829647038090708, 5.831647038090709), 2.3025765734997745), ((1.866476891476276, 1.8684768914762757), (2.168352961909292, 2.1703529619092916), -0.8390160800900187), ((8.099824720259315, 8.101824720259314), (2.059255123524902, 2.061255123524902), 0.8506471850150961), ((1.8961752797406843, 1.8981752797406841), (5.938744876475098, 5.940744876475098), -2.290945468574697), ((2.168352961909292, 2.1703529619092916), (6.131523108523724, 6.1335231085237245), -2.409812406884915), ((7.827647038090707, 7.829647038090708), (1.866476891476276, 1.8684768914762757), 0.731780246704878), ((7.936744876475097, 7.938744876475098), (6.101824720259315, 6.103824720259316), 2.4214435118099926), ((2.059255123524903, 2.061255123524903), (1.8961752797406846, 1.8981752797406843), -0.7201491417798003)]
[INFO] [1753420022.736480985] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.0250000953674316, 2.7260000705718994, 2.25600004196167])
[INFO] [1753420022.738027833] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.0250001  2.72600007 2.25600004]
[INFO] [1753420022.741555456] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420022.744015793] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420022.745256394] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420022.746064731] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420022.746926636] [solver_node]: 求解器返回结果: [((8.17653697685479, 8.178536976854788), (5.772613122185418, 5.774613122185419), 2.275886283421965), ((1.8194630231452105, 1.8214630231452102), (2.2253868778145818, 2.2273868778145816), -0.8657063701678285), ((8.154832076027143, 8.156832076027142), (2.092757255916248, 2.0947572559162477), 0.8732902031237302), ((1.8411679239728573, 1.8431679239728571), (5.905242744083751, 5.907242744083752), -2.268302450466063), ((2.2253868778145804, 2.2273868778145802), (6.178536976854789, 6.18053697685479), -2.436502696962725), ((7.770613122185417, 7.772613122185418), (1.8194630231452105, 1.8214630231452102), 0.7050899566270682), ((7.903242744083751, 7.905242744083751), (6.156832076027142, 6.158832076027143), 2.4440865299186267), ((2.0927572559162484, 2.094757255916248), (1.8411679239728573, 1.8431679239728571), -0.6975061236711663)]
[INFO] [1753420022.835669227] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.0250000953674316, 2.7260000705718994, 2.25600004196167])
[INFO] [1753420022.837093768] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.0250001  2.72600007 2.25600004]
[INFO] [1753420022.839955777] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420022.840740977] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420022.841494113] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420022.842219727] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420022.843045760] [solver_node]: 求解器返回结果: [((8.17653697685479, 8.178536976854788), (5.772613122185418, 5.774613122185419), 2.275886283421965), ((1.8194630231452105, 1.8214630231452102), (2.2253868778145818, 2.2273868778145816), -0.8657063701678285), ((8.154832076027143, 8.156832076027142), (2.092757255916248, 2.0947572559162477), 0.8732902031237302), ((1.8411679239728573, 1.8431679239728571), (5.905242744083751, 5.907242744083752), -2.268302450466063), ((2.2253868778145804, 2.2273868778145802), (6.178536976854789, 6.18053697685479), -2.436502696962725), ((7.770613122185417, 7.772613122185418), (1.8194630231452105, 1.8214630231452102), 0.7050899566270682), ((7.903242744083751, 7.905242744083751), (6.156832076027142, 6.158832076027143), 2.4440865299186267), ((2.0927572559162484, 2.094757255916248), (1.8411679239728573, 1.8431679239728571), -0.6975061236711663)]
[INFO] [1753420022.935988691] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.01200008392334, 2.7260000705718994, 1.9910000562667847])
[INFO] [1753420022.937413328] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.01200008 2.72600007 1.99100006]
[INFO] [1753420022.940302379] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420022.941111099] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420022.941861322] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420022.942653274] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420022.943460298] [solver_node]: 求解器返回结果: [((8.26880664137957, 8.270806641379568), (5.884222449256675, 5.8862224492566755), 2.3274644090526233), ((1.7271933586204304, 1.7291933586204302), (2.113777550743324, 2.115777550743324), -0.8141282445371697), ((8.160978858561705, 8.162978858561704), (1.8928641327406472, 1.894864132740647), 0.8757963320215052), ((1.835021141438295, 1.8370211414382949), (6.105135867259352, 6.107135867259353), -2.265796321568288), ((2.113777550743325, 2.1157775507433247), (6.270806641379569, 6.27280664137957), -2.3849245713320664), ((7.882222449256675, 7.884222449256676), (1.7271933586204304, 1.7291933586204302), 0.7566680822577269), ((8.103135867259352, 8.105135867259351), (6.162978858561705, 6.164978858561706), 2.4465926588164018), ((1.8928641327406475, 1.8948641327406472), (1.8350211414382946, 1.8370211414382944), -0.6949999947733915)]
[INFO] [1753420023.035945205] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.01200008392334, 2.7260000705718994, 1.8980000019073486])
[INFO] [1753420023.037422163] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.01200008 2.72600007 1.898     ]
[INFO] [1753420023.040389967] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420023.041281537] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420023.042038384] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420023.042848289] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420023.043686738] [solver_node]: 求解器返回结果: [((8.303307086172797, 8.305307086172796), (5.930799406543847, 5.932799406543848), 2.348246440887895), ((1.6926929138272033, 1.694692913827203), (2.0672005934561524, 2.069200593456152), -0.7933462127018979), ((8.160978858561705, 8.162978858561704), (1.8214346588917438, 1.8234346588917436), 0.8757963320215052), ((1.835021141438295, 1.8370211414382949), (6.1765653411082555, 6.178565341108256), -2.265796321568288), ((2.067200593456153, 2.0692005934561526), (6.305307086172797, 6.307307086172798), -2.3641425394967945), ((7.928799406543846, 7.930799406543847), (1.6926929138272033, 1.694692913827203), 0.7774501140929987), ((8.174565341108256, 8.176565341108255), (6.162978858561705, 6.164978858561706), 2.4465926588164018), ((1.8214346588917438, 1.8234346588917436), (1.8350211414382946, 1.8370211414382944), -0.6949999947733915)]
[INFO] [1753420023.137062192] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.01200008392334, 2.7260000705718994, 1.8980000019073486])
[INFO] [1753420023.139981547] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.01200008 2.72600007 1.898     ]
[INFO] [1753420023.143039721] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420023.144621929] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420023.147724936] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420023.148552760] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420023.149348904] [solver_node]: 求解器返回结果: [((8.303307086172797, 8.305307086172796), (5.930799406543847, 5.932799406543848), 2.348246440887895), ((1.6926929138272033, 1.694692913827203), (2.0672005934561524, 2.069200593456152), -0.7933462127018979), ((8.160978858561705, 8.162978858561704), (1.8214346588917438, 1.8234346588917436), 0.8757963320215052), ((1.835021141438295, 1.8370211414382949), (6.1765653411082555, 6.178565341108256), -2.265796321568288), ((2.067200593456153, 2.0692005934561526), (6.305307086172797, 6.307307086172798), -2.3641425394967945), ((7.928799406543846, 7.930799406543847), (1.6926929138272033, 1.694692913827203), 0.7774501140929987), ((8.174565341108256, 8.176565341108255), (6.162978858561705, 6.164978858561706), 2.4465926588164018), ((1.8214346588917438, 1.8234346588917436), (1.8350211414382946, 1.8370211414382944), -0.6949999947733915)]
[INFO] [1753420023.236536970] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.9809999465942383, 2.7260000705718994, 1.8980000019073486])
[INFO] [1753420023.238171371] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.98099995 2.72600007 1.898     ]
[INFO] [1753420023.241483854] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420023.242373504] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420023.243189776] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420023.243952480] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420023.244742384] [solver_node]: 求解器返回结果: [((8.313451102754463, 8.315451102754462), (5.914465310631807, 5.916465310631808), 2.3410040847140805), ((1.6825488972455367, 1.6845488972455365), (2.0835346893681916, 2.0855346893681914), -0.8005885688757126), ((8.175787907195316, 8.177787907195315), (1.8287533782031926, 1.8307533782031924), 0.8818150137335148), ((1.820212092804685, 1.8222120928046848), (6.169246621796807, 6.171246621796808), -2.2597776398562783), ((2.083534689368192, 2.085534689368192), (6.315451102754463, 6.317451102754464), -2.371384895670609), ((7.9124653106318075, 7.914465310631808), (1.6825488972455367, 1.6845488972455365), 0.770207757919184), ((8.167246621796808, 8.169246621796807), (6.177787907195315, 6.1797879071953155), 2.4526113405284113), ((1.8287533782031926, 1.8307533782031924), (1.8202120928046848, 1.8222120928046845), -0.6889813130613818)]
[INFO] [1753420023.337564547] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.8519999980926514, 3.1640000343322754, 1.8980000019073486])
[INFO] [1753420023.339166339] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.852      3.16400003 1.898     ]
[INFO] [1753420023.342490662] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420023.343389049] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420023.344145640] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420023.344879639] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420023.345647526] [solver_node]: 求解器返回结果: [((8.35824425145943, 8.360244251459429), (5.521464056849523, 5.523464056849524), 2.3097423819036598), ((1.6377557485405703, 1.63975574854057), (2.4765359431504774, 2.478535943150477), -0.8318502716861336), ((8.15639499670661, 8.158394996706608), (1.929635775474958, 1.9316357754749578), 0.9713251912343766), ((1.839605003293391, 1.8416050032933908), (6.068364224525042, 6.070364224525043), -2.1702674623554166), ((2.4765359431504765, 2.4785359431504763), (6.360244251459429, 6.36224425145943), -2.40264659848103), ((7.519464056849523, 7.521464056849523), (1.6377557485405703, 1.63975574854057), 0.7389460551087631), ((8.066364224525042, 8.068364224525041), (6.158394996706609, 6.16039499670661), 2.542121518029273), ((1.9296357754749582, 1.931635775474958), (1.839605003293391, 1.8416050032933908), -0.5994711355605199)]
[INFO] [1753420023.436851353] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.6829999685287476, 3.1640000343322754, 1.8980000019073486])
[INFO] [1753420023.438360791] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.68299997 3.16400003 1.898     ]
[INFO] [1753420023.441587320] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420023.443482559] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420023.446484251] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420023.449895936] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420023.451039575] [solver_node]: 求解器返回结果: [((8.423727905165082, 8.42572790516508), (5.415336730813291, 5.417336730813291), 2.2659151947205873), ((1.5722720948349185, 1.5742720948349183), (2.582663269186708, 2.584663269186708), -0.8756774588692057), ((8.2579948285135, 8.259994828513499), (1.96369278534422, 1.9656927853442199), 1.0050675326075487), ((1.7380051714865006, 1.7400051714865004), (6.034307214655779, 6.036307214655779), -2.1365251209822445), ((2.5826632691867086, 2.5846632691867084), (6.425727905165081, 6.4277279051650815), -2.4464737856641023), ((7.413336730813291, 7.415336730813292), (1.5722720948349187, 1.5742720948349185), 0.6951188679256909), ((8.03230721465578, 8.03430721465578), (6.259994828513499, 6.2619948285135), 2.575863859402445), ((1.96369278534422, 1.9656927853442199), (1.7380051714865004, 1.7400051714865001), -0.565728794187348)]
[INFO] [1753420023.538169656] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.6829999685287476, 3.1640000343322754, 1.25])
[INFO] [1753420023.539790040] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.68299997 3.16400003 1.25      ]
[INFO] [1753420023.543447458] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420023.544579737] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420023.545348521] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420023.546123448] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420023.546956745] [solver_node]: 求解器返回结果: [((8.677237421745883, 8.679237421745881), (5.865413923912986, 5.867413923912987), 2.4404609808861464), ((1.3187625782541177, 1.3207625782541175), (2.1325860760870134, 2.1345860760870132), -0.7011316727036468), ((8.2579948285135, 8.259994828513499), (1.4166498189761034, 1.4186498189761032), 1.0050675326075487), ((1.7380051714865006, 1.7400051714865004), (6.581350181023896, 6.583350181023897), -2.1365251209822445), ((2.132586076087013, 2.134586076087013), (6.679237421745882, 6.681237421745883), -2.2719279994985433), ((7.863413923912986, 7.865413923912986), (1.3187625782541175, 1.3207625782541172), 0.8696646540912498), ((8.579350181023896, 8.581350181023895), (6.259994828513499, 6.2619948285135), 2.575863859402445), ((1.4166498189761034, 1.4186498189761032), (1.7380051714865004, 1.7400051714865001), -0.565728794187348)]
[INFO] [1753420023.637654546] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.4490000009536743, 3.1640000343322754, 1.25])
[INFO] [1753420023.639208369] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.449      3.16400003 1.25      ]
[INFO] [1753420023.642291055] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420023.643206978] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420023.643941937] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420023.644667839] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420023.645440463] [solver_node]: 求解器返回结果: [((8.735787405348818, 8.737787405348817), (5.681131363588782, 5.683131363588783), 2.3722975897227343), ((1.2602125946511813, 1.262212594651181), (2.316868636411218, 2.3188686364112177), -0.7692950638670589), ((8.409702736504231, 8.41170273650423), (1.4458785040325166, 1.4478785040325164), 1.054283097289447), ((1.5862972634957693, 1.588297263495769), (6.552121495967483, 6.554121495967483), -2.087309556300346), ((2.3168686364112174, 2.318868636411217), (6.7377874053488185, 6.739787405348819), -2.3400913906619554), ((7.679131363588781, 7.681131363588782), (1.2602125946511813, 1.262212594651181), 0.8015012629278376), ((8.550121495967483, 8.552121495967482), (6.411702736504231, 6.413702736504232), 2.625079424084344), ((1.4458785040325166, 1.4478785040325164), (1.5862972634957693, 1.588297263495769), -0.5165132295054493)]
[INFO] [1753420023.737912667] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.3730000257492065, 3.1640000343322754, 1.8980000019073486])
[INFO] [1753420023.740089607] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.37300003 3.16400003 1.898     ]
[INFO] [1753420023.743364969] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420023.744284988] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420023.745056011] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420023.746331941] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420023.747141142] [solver_node]: 求解器返回结果: [((8.566709797927798, 8.568709797927797), (5.214217555430175, 5.216217555430176), 2.176406934930597), ((1.4292902020722014, 1.4312902020722011), (2.783782444569825, 2.7857824445698247), -0.9651857186591963), ((8.461794618468645, 8.463794618468643), (2.0236627035796824, 2.025662703579682), 1.0708947110008245), ((1.5342053815313559, 1.5362053815313557), (5.974337296420317, 5.976337296420318), -2.0706979425889687), ((2.7837824445698245, 2.7857824445698243), (6.568709797927799, 6.570709797927799), -2.5359820454540927), ((7.212217555430175, 7.214217555430175), (1.4292902020722016, 1.4312902020722014), 0.6056106081357003), ((7.972337296420316, 7.974337296420317), (6.4637946184686434, 6.465794618468644), 2.641691037795721), ((2.023662703579683, 2.0256627035796826), (1.5342053815313559, 1.5362053815313557), -0.4999016157940719)]
[INFO] [1753420023.835908791] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.3020000457763672, 3.4010000228881836, 1.8980000019073486])
[INFO] [1753420023.837392917] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.30200005 3.40100002 1.898     ]
[INFO] [1753420023.840368017] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420023.841199362] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420023.841994194] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420023.842800994] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420023.843582194] [solver_node]: 求解器返回结果: [((8.604078048569232, 8.60607804856923), (4.969817806159263, 4.9718178061592635), 2.1541557130547684), ((1.3919219514307684, 1.3939219514307681), (3.0281821938407365, 3.0301821938407363), -0.9874369405350245), ((8.491749197232545, 8.493749197232544), (2.0576148843345923, 2.059614884334592), 1.113233927772642), ((1.504250802767455, 1.5062508027674548), (5.940385115665408, 5.942385115665409), -2.028358725817151), ((3.0281821938407356, 3.0301821938407354), (6.606078048569231, 6.608078048569232), -2.558233267329921), ((6.967817806159263, 6.969817806159264), (1.3919219514307684, 1.3939219514307681), 0.5833593862598722), ((7.938385115665407, 7.940385115665408), (6.493749197232544, 6.495749197232545), 2.6840302545675385), ((2.0576148843345923, 2.059614884334592), (1.5042508027674555, 1.5062508027674553), -0.4575623990222546)]
[INFO] [1753420023.935878459] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.3020000457763672, 3.4010000228881836, 1.652999997138977])
[INFO] [1753420023.937343640] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.30200005 3.40100002 1.653     ]
[INFO] [1753420023.940361269] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420023.941196582] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420023.942214907] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420023.943047083] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420023.943976382] [solver_node]: 求解器返回结果: [((8.657962303362746, 8.659962303362745), (5.096687892999734, 5.098687892999735), 2.209885180437576), ((1.338037696637255, 1.3400376966372547), (2.9013121070002663, 2.903312107000266), -0.9317074731522174), ((8.491749197232545, 8.493749197232544), (1.8378167442935056, 1.8398167442935054), 1.113233927772642), ((1.504250802767455, 1.5062508027674548), (6.160183255706494, 6.162183255706495), -2.028358725817151), ((2.9013121070002654, 2.903312107000265), (6.659962303362746, 6.661962303362746), -2.502503799947114), ((7.094687892999732, 7.096687892999733), (1.338037696637255, 1.3400376966372547), 0.6390888536426792), ((8.158183255706495, 8.160183255706494), (6.493749197232544, 6.495749197232545), 2.6840302545675385), ((1.8378167442935058, 1.8398167442935056), (1.5042508027674555, 1.5062508027674553), -0.4575623990222546)]
[INFO] [1753420024.039464584] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2359999418258667, 3.4010000228881836, 1.652999997138977])
[INFO] [1753420024.041246668] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.23599994 3.40100002 1.653     ]
[INFO] [1753420024.044397164] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420024.045214652] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420024.045932395] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420024.046629977] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420024.047432713] [solver_node]: 求解器返回结果: [((8.689804271459893, 8.691804271459892), (5.044996175871089, 5.046996175871089), 2.187663336205251), ((1.3061957285401058, 1.3081957285401056), (2.953003824128911, 2.955003824128911), -0.953929317384542), ((8.541017419394896, 8.543017419394895), (1.8469570112573281, 1.848957011257328), 1.1275801693874383), ((1.454982580605105, 1.4569825806051049), (6.151042988742671, 6.153042988742672), -2.014012484202355), ((2.9530038241289103, 2.95500382412891), (6.691804271459894, 6.693804271459895), -2.5247256441794383), ((7.042996175871088, 7.044996175871089), (1.3061957285401058, 1.3081957285401056), 0.6168670094103547), ((8.149042988742671, 8.15104298874267), (6.543017419394895, 6.545017419394895), 2.698376496182335), ((1.8469570112573281, 1.848957011257328), (1.4549825806051055, 1.4569825806051053), -0.44321615740745834)]
[INFO] [1753420024.136830873] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1779999732971191, 3.4010000228881836, 1.652999997138977])
[INFO] [1753420024.138293687] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.17799997 3.40100002 1.653     ]
[INFO] [1753420024.141230450] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420024.142025250] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420024.143855623] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420024.144912989] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420024.146050900] [solver_node]: 求解器返回结果: [((8.719198756745415, 8.721198756745414), (4.999440558869756, 5.001440558869756), 2.1675385490185493), ((1.2768012432545852, 1.278801243254585), (2.9985594411302436, 3.0005594411302434), -0.9740541045712436), ((8.585127898984815, 8.587127898984814), (1.8547736613657515, 1.8567736613657513), 1.1403510447985408), ((1.4108721010151837, 1.4128721010151835), (6.143226338634249, 6.14522633863425), -2.0012416087912523), ((2.9985594411302436, 3.0005594411302434), (6.721198756745414, 6.723198756745415), -2.5448504313661404), ((6.997440558869756, 6.999440558869757), (1.2768012432545852, 1.278801243254585), 0.5967422222236529), ((8.14122633863425, 8.143226338634248), (6.587127898984815, 6.589127898984816), 2.7111473715934373), ((1.8547736613657517, 1.8567736613657515), (1.4108721010151837, 1.4128721010151835), -0.4304452819963556)]
[INFO] [1753420024.238841353] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1089999675750732, 3.4010000228881836, 1.652999997138977])
[INFO] [1753420024.240471178] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.10899997 3.40100002 1.653     ]
[INFO] [1753420024.243689067] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420024.244591133] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420024.245366573] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420024.246332064] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420024.247187313] [solver_node]: 求解器返回结果: [((8.755950125316494, 8.757950125316492), (4.9452362147536615, 4.947236214753662), 2.142859697473147), ((1.240049874683506, 1.2420498746835058), (3.0527637852463383, 3.054763785246338), -0.9987329561166464), ((8.638590777217086, 8.640590777217085), (1.8637912572581836, 1.8657912572581834), 1.155741239474566), ((1.357409222782913, 1.3594092227829129), (6.134208742741817, 6.136208742741817), -1.985851414115227), ((3.052763785246338, 3.0547637852463376), (6.757950125316493, 6.759950125316494), -2.569529282911543), ((6.94323621475366, 6.945236214753661), (1.240049874683506, 1.2420498746835058), 0.5720633706782502), ((8.132208742741817, 8.134208742741816), (6.640590777217087, 6.642590777217087), 2.726537566269463), ((1.8637912572581836, 1.8657912572581834), (1.3574092227829135, 1.3594092227829133), -0.4150550873203304)]
[INFO] [1753420024.335905940] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.0449999570846558, 3.4010000228881836, 1.652999997138977])
[INFO] [1753420024.337384690] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.04499996 3.40100002 1.653     ]
[INFO] [1753420024.340313133] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420024.341154686] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420024.341928046] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420024.342684733] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420024.343479597] [solver_node]: 求解器返回结果: [((8.791824181185854, 8.793824181185853), (4.895110680152322, 4.8971106801523225), 2.1192453459641785), ((1.2041758188141465, 1.2061758188141463), (3.1028893198476784, 3.104889319847678), -1.0223473076256149), ((8.689130395110118, 8.691130395110116), (1.8718636969759002, 1.8738636969759), 1.170205429312539), ((1.3068696048898814, 1.3088696048898811), (6.1261363030241, 6.1281363030241005), -1.971387224277254), ((3.1028893198476775, 3.1048893198476772), (6.793824181185853, 6.7958241811858535), -2.593143634420511), ((6.893110680152321, 6.895110680152322), (1.204175818814147, 1.2061758188141467), 0.5484490191692818), ((8.1241363030241, 8.126136303024099), (6.691130395110118, 6.693130395110119), 2.7410017561074356), ((1.8718636969759002, 1.8738636969759), (1.3068696048898818, 1.3088696048898816), -0.40059089748235754)]
[INFO] [1753420024.436089214] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.0449999570846558, 3.4010000228881836, 1.652999997138977])
[INFO] [1753420024.437615453] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.04499996 3.40100002 1.653     ]
[INFO] [1753420024.440658171] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420024.441522700] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420024.442405790] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420024.444344965] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420024.445210775] [solver_node]: 求解器返回结果: [((8.791824181185854, 8.793824181185853), (4.895110680152322, 4.8971106801523225), 2.1192453459641785), ((1.2041758188141465, 1.2061758188141463), (3.1028893198476784, 3.104889319847678), -1.0223473076256149), ((8.689130395110118, 8.691130395110116), (1.8718636969759002, 1.8738636969759), 1.170205429312539), ((1.3068696048898814, 1.3088696048898811), (6.1261363030241, 6.1281363030241005), -1.971387224277254), ((3.1028893198476775, 3.1048893198476772), (6.793824181185853, 6.7958241811858535), -2.593143634420511), ((6.893110680152321, 6.895110680152322), (1.204175818814147, 1.2061758188141467), 0.5484490191692818), ((8.1241363030241, 8.126136303024099), (6.691130395110118, 6.693130395110119), 2.7410017561074356), ((1.8718636969759002, 1.8738636969759), (1.3068696048898818, 1.3088696048898816), -0.40059089748235754)]
[INFO] [1753420024.536879285] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.0099999904632568, 3.4010000228881836, 1.652999997138977])
[INFO] [1753420024.538312370] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.00999999 3.40100002 1.653     ]
[INFO] [1753420024.541369167] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420024.542179040] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420024.542961488] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420024.543657342] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420024.544416589] [solver_node]: 求解器返回结果: [((8.812187699614721, 8.81418769961472), (4.86782206682055, 4.869822066820551), 2.106034726706434), ((1.1838123003852785, 1.1858123003852783), (3.13017793317945, 3.1321779331794497), -1.0355579268833595), ((8.717152904722465, 8.719152904722463), (1.876152969752385, 1.8781529697523849), 1.1781915849337155), ((1.278847095277536, 1.2808470952775357), (6.121847030247615, 6.123847030247616), -1.9634010686560777), ((3.130177933179449, 3.132177933179449), (6.814187699614721, 6.816187699614722), -2.606354253678256), ((6.865822066820549, 6.867822066820549), (1.1838123003852785, 1.1858123003852783), 0.5352383999115371), ((8.119847030247614, 8.121847030247613), (6.719152904722464, 6.721152904722465), 2.7489879117286122), ((1.8761529697523849, 1.8781529697523847), (1.2788470952775361, 1.280847095277536), -0.3926047418611811)]
[INFO] [1753420024.635720164] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.0099999904632568, 3.4010000228881836, 1.652999997138977])
[INFO] [1753420024.637147009] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.00999999 3.40100002 1.653     ]
[INFO] [1753420024.640039835] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420024.640835595] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420024.641599163] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420024.643134810] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420024.644452756] [solver_node]: 求解器返回结果: [((8.812187699614721, 8.81418769961472), (4.86782206682055, 4.869822066820551), 2.106034726706434), ((1.1838123003852785, 1.1858123003852783), (3.13017793317945, 3.1321779331794497), -1.0355579268833595), ((8.717152904722465, 8.719152904722463), (1.876152969752385, 1.8781529697523849), 1.1781915849337155), ((1.278847095277536, 1.2808470952775357), (6.121847030247615, 6.123847030247616), -1.9634010686560777), ((3.130177933179449, 3.132177933179449), (6.814187699614721, 6.816187699614722), -2.606354253678256), ((6.865822066820549, 6.867822066820549), (1.1838123003852785, 1.1858123003852783), 0.5352383999115371), ((8.119847030247614, 8.121847030247613), (6.719152904722464, 6.721152904722465), 2.7489879117286122), ((1.8761529697523849, 1.8781529697523847), (1.2788470952775361, 1.280847095277536), -0.3926047418611811)]
[INFO] [1753420024.738349184] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.0740000009536743, 3.4010000228881836, 1.652999997138977])
[INFO] [1753420024.741838246] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.074      3.40100002 1.653     ]
[INFO] [1753420024.744808866] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420024.745592754] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420024.746311969] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420024.747099921] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420024.747858912] [solver_node]: 求解器返回结果: [((8.775352426396612, 8.777352426396611), (4.9177948113186405, 4.919794811318641), 2.1300323137431696), ((1.2206475736033877, 1.2226475736033875), (3.080205188681359, 3.0822051886813586), -1.0115603398466235), ((8.666116792287964, 8.668116792287963), (1.8682418448253537, 1.8702418448253535), 1.1636289398572928), ((1.3298832077120353, 1.331883207712035), (6.129758155174646, 6.131758155174647), -1.9779637137325004), ((3.080205188681359, 3.0822051886813586), (6.777352426396612, 6.7793524263966125), -2.58235666664152), ((6.91579481131864, 6.9177948113186405), (1.2206475736033877, 1.2226475736033875), 0.559235986948273), ((8.127758155174647, 8.129758155174645), (6.6681167922879645, 6.670116792287965), 2.7344252666521895), ((1.8682418448253537, 1.8702418448253535), (1.3298832077120357, 1.3318832077120355), -0.4071673869376037)]
[INFO] [1753420024.841198368] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.0740000009536743, 3.4010000228881836, 1.652999997138977])
[INFO] [1753420024.842766047] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.074      3.40100002 1.653     ]
[INFO] [1753420024.846258374] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420024.847523680] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420024.849814222] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420024.850565789] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420024.851348237] [solver_node]: 求解器返回结果: [((8.775352426396612, 8.777352426396611), (4.9177948113186405, 4.919794811318641), 2.1300323137431696), ((1.2206475736033877, 1.2226475736033875), (3.080205188681359, 3.0822051886813586), -1.0115603398466235), ((8.666116792287964, 8.668116792287963), (1.8682418448253537, 1.8702418448253535), 1.1636289398572928), ((1.3298832077120353, 1.331883207712035), (6.129758155174646, 6.131758155174647), -1.9779637137325004), ((3.080205188681359, 3.0822051886813586), (6.777352426396612, 6.7793524263966125), -2.58235666664152), ((6.91579481131864, 6.9177948113186405), (1.2206475736033877, 1.2226475736033875), 0.559235986948273), ((8.127758155174647, 8.129758155174645), (6.6681167922879645, 6.670116792287965), 2.7344252666521895), ((1.8682418448253537, 1.8702418448253535), (1.3298832077120357, 1.3318832077120355), -0.4071673869376037)]
[INFO] [1753420024.937305464] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.1430000066757202, 3.4010000228881836, 1.652999997138977])
[INFO] [1753420024.939403810] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.14300001 3.40100002 1.653     ]
[INFO] [1753420024.945133526] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420024.946109418] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420024.947006044] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420024.947724650] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420024.948830625] [solver_node]: 求解器返回结果: [((8.737594881562494, 8.739594881562493), (4.971936394421484, 4.973936394421485), 2.1551210128632907), ((1.258405118437506, 1.2604051184375058), (3.026063605578515, 3.028063605578515), -0.9864716407265024), ((8.612113196891674, 8.614113196891672), (1.8593872667912819, 1.8613872667912816), 1.1481310231914532), ((1.3838868031083265, 1.3858868031083262), (6.138612733208718, 6.140612733208719), -1.99346163039834), ((3.0260636055785146, 3.0280636055785144), (6.7395948815624935, 6.741594881562494), -2.557267967521399), ((6.969936394421484, 6.971936394421484), (1.258405118437506, 1.2604051184375058), 0.5843246860683943), ((8.136612733208718, 8.138612733208717), (6.614113196891673, 6.616113196891674), 2.71892734998635), ((1.859387266791282, 1.8613872667912819), (1.383886803108327, 1.3858868031083267), -0.4226653036034433)]
[INFO] [1753420025.037126203] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.4010000228881836, 1.652999997138977])
[INFO] [1753420025.038687835] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.40100002 1.653     ]
[INFO] [1753420025.041945757] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420025.042905936] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420025.043692384] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420025.044493296] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420025.045291809] [solver_node]: 求解器返回结果: [((8.677544815233473, 8.679544815233472), (5.064601906270631, 5.066601906270631), 2.196165148910218), ((1.3184551847665273, 1.3204551847665271), (2.933398093729369, 2.935398093729369), -0.9454275046795749), ((8.52223891068905, 8.524238910689048), (1.8435245878877737, 1.8455245878877735), 1.122122564682881), ((1.4737610893109503, 1.47576108931095), (6.154475412112226, 6.1564754121122265), -2.019470088906912), ((2.9333980937293687, 2.9353980937293684), (6.679544815233473, 6.681544815233473), -2.5162238314744716), ((7.06260190627063, 7.064601906270631), (1.3184551847665276, 1.3204551847665273), 0.6253688221153217), ((8.152475412112226, 8.154475412112225), (6.524238910689049, 6.52623891068905), 2.6929188914777775), ((1.8435245878877737, 1.8455245878877735), (1.4737610893109503, 1.47576108931095), -0.4486737621120155)]
[INFO] [1753420025.137718864] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.4010000228881836, 1.652999997138977])
[INFO] [1753420025.139325841] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.40100002 1.653     ]
[INFO] [1753420025.142398383] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420025.143290881] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420025.144035440] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420025.144803328] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420025.145614352] [solver_node]: 求解器返回结果: [((8.677544815233473, 8.679544815233472), (5.064601906270631, 5.066601906270631), 2.196165148910218), ((1.3184551847665273, 1.3204551847665271), (2.933398093729369, 2.935398093729369), -0.9454275046795749), ((8.52223891068905, 8.524238910689048), (1.8435245878877737, 1.8455245878877735), 1.122122564682881), ((1.4737610893109503, 1.47576108931095), (6.154475412112226, 6.1564754121122265), -2.019470088906912), ((2.9333980937293687, 2.9353980937293684), (6.679544815233473, 6.681544815233473), -2.5162238314744716), ((7.06260190627063, 7.064601906270631), (1.3184551847665276, 1.3204551847665273), 0.6253688221153217), ((8.152475412112226, 8.154475412112225), (6.524238910689049, 6.52623891068905), 2.6929188914777775), ((1.8435245878877737, 1.8455245878877735), (1.4737610893109503, 1.47576108931095), -0.4486737621120155)]
[INFO] [1753420025.235976694] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.4010000228881836, 1.652999997138977])
[INFO] [1753420025.240109193] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.40100002 1.653     ]
[INFO] [1753420025.246938612] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420025.248503731] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420025.250594558] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420025.251570737] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420025.253134769] [solver_node]: 求解器返回结果: [((8.677544815233473, 8.679544815233472), (5.064601906270631, 5.066601906270631), 2.196165148910218), ((1.3184551847665273, 1.3204551847665271), (2.933398093729369, 2.935398093729369), -0.9454275046795749), ((8.52223891068905, 8.524238910689048), (1.8435245878877737, 1.8455245878877735), 1.122122564682881), ((1.4737610893109503, 1.47576108931095), (6.154475412112226, 6.1564754121122265), -2.019470088906912), ((2.9333980937293687, 2.9353980937293684), (6.679544815233473, 6.681544815233473), -2.5162238314744716), ((7.06260190627063, 7.064601906270631), (1.3184551847665276, 1.3204551847665273), 0.6253688221153217), ((8.152475412112226, 8.154475412112225), (6.524238910689049, 6.52623891068905), 2.6929188914777775), ((1.8435245878877737, 1.8455245878877735), (1.4737610893109503, 1.47576108931095), -0.4486737621120155)]
[INFO] [1753420025.335774202] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.4010000228881836, 1.652999997138977])
[INFO] [1753420025.337212472] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.40100002 1.653     ]
[INFO] [1753420025.340131091] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420025.340954339] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420025.341731667] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420025.342466562] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420025.343313555] [solver_node]: 求解器返回结果: [((8.677544815233473, 8.679544815233472), (5.064601906270631, 5.066601906270631), 2.196165148910218), ((1.3184551847665273, 1.3204551847665271), (2.933398093729369, 2.935398093729369), -0.9454275046795749), ((8.52223891068905, 8.524238910689048), (1.8435245878877737, 1.8455245878877735), 1.122122564682881), ((1.4737610893109503, 1.47576108931095), (6.154475412112226, 6.1564754121122265), -2.019470088906912), ((2.9333980937293687, 2.9353980937293684), (6.679544815233473, 6.681544815233473), -2.5162238314744716), ((7.06260190627063, 7.064601906270631), (1.3184551847665276, 1.3204551847665273), 0.6253688221153217), ((8.152475412112226, 8.154475412112225), (6.524238910689049, 6.52623891068905), 2.6929188914777775), ((1.8435245878877737, 1.8455245878877735), (1.4737610893109503, 1.47576108931095), -0.4486737621120155)]
[INFO] [1753420025.436352559] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.4010000228881836, 1.652999997138977])
[INFO] [1753420025.437962096] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.40100002 1.653     ]
[INFO] [1753420025.441294803] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420025.442222182] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420025.443181785] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420025.443927752] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420025.444710616] [solver_node]: 求解器返回结果: [((8.677544815233473, 8.679544815233472), (5.064601906270631, 5.066601906270631), 2.196165148910218), ((1.3184551847665273, 1.3204551847665271), (2.933398093729369, 2.935398093729369), -0.9454275046795749), ((8.52223891068905, 8.524238910689048), (1.8435245878877737, 1.8455245878877735), 1.122122564682881), ((1.4737610893109503, 1.47576108931095), (6.154475412112226, 6.1564754121122265), -2.019470088906912), ((2.9333980937293687, 2.9353980937293684), (6.679544815233473, 6.681544815233473), -2.5162238314744716), ((7.06260190627063, 7.064601906270631), (1.3184551847665276, 1.3204551847665273), 0.6253688221153217), ((8.152475412112226, 8.154475412112225), (6.524238910689049, 6.52623891068905), 2.6929188914777775), ((1.8435245878877737, 1.8455245878877735), (1.4737610893109503, 1.47576108931095), -0.4486737621120155)]
[INFO] [1753420025.537244586] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.4010000228881836, 1.652999997138977])
[INFO] [1753420025.539105328] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.40100002 1.653     ]
[INFO] [1753420025.543040863] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420025.544045972] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420025.544900261] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420025.545672244] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420025.546469445] [solver_node]: 求解器返回结果: [((8.677544815233473, 8.679544815233472), (5.064601906270631, 5.066601906270631), 2.196165148910218), ((1.3184551847665273, 1.3204551847665271), (2.933398093729369, 2.935398093729369), -0.9454275046795749), ((8.52223891068905, 8.524238910689048), (1.8435245878877737, 1.8455245878877735), 1.122122564682881), ((1.4737610893109503, 1.47576108931095), (6.154475412112226, 6.1564754121122265), -2.019470088906912), ((2.9333980937293687, 2.9353980937293684), (6.679544815233473, 6.681544815233473), -2.5162238314744716), ((7.06260190627063, 7.064601906270631), (1.3184551847665276, 1.3204551847665273), 0.6253688221153217), ((8.152475412112226, 8.154475412112225), (6.524238910689049, 6.52623891068905), 2.6929188914777775), ((1.8435245878877737, 1.8455245878877735), (1.4737610893109503, 1.47576108931095), -0.4486737621120155)]
[INFO] [1753420025.637868159] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.4010000228881836, 1.652999997138977])
[INFO] [1753420025.639520641] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.40100002 1.653     ]
[INFO] [1753420025.642791043] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420025.643733398] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420025.644556711] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420025.645330678] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420025.646132263] [solver_node]: 求解器返回结果: [((8.677544815233473, 8.679544815233472), (5.064601906270631, 5.066601906270631), 2.196165148910218), ((1.3184551847665273, 1.3204551847665271), (2.933398093729369, 2.935398093729369), -0.9454275046795749), ((8.52223891068905, 8.524238910689048), (1.8435245878877737, 1.8455245878877735), 1.122122564682881), ((1.4737610893109503, 1.47576108931095), (6.154475412112226, 6.1564754121122265), -2.019470088906912), ((2.9333980937293687, 2.9353980937293684), (6.679544815233473, 6.681544815233473), -2.5162238314744716), ((7.06260190627063, 7.064601906270631), (1.3184551847665276, 1.3204551847665273), 0.6253688221153217), ((8.152475412112226, 8.154475412112225), (6.524238910689049, 6.52623891068905), 2.6929188914777775), ((1.8435245878877737, 1.8455245878877735), (1.4737610893109503, 1.47576108931095), -0.4486737621120155)]
[INFO] [1753420025.736078532] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.0899999141693115, 1.652999997138977])
[INFO] [1753420025.737696357] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.08999991 1.653     ]
[INFO] [1753420025.741407376] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420025.742305762] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420025.743075570] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420025.743821057] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420025.745068474] [solver_node]: 求解器返回结果: [((8.677544815233473, 8.679544815233472), (5.316744394618688, 5.3187443946186885), 2.196165148910218), ((1.3184551847665273, 1.3204551847665271), (2.681255605381311, 2.683255605381311), -0.9454275046795749), ((8.547650683732684, 8.549650683732683), (1.820243568726745, 1.8222435687267449), 1.0871694855998406), ((1.4483493162673153, 1.4503493162673151), (6.177756431273255, 6.179756431273256), -2.0544231679899525), ((2.681255605381311, 2.683255605381311), (6.679544815233473, 6.681544815233473), -2.5162238314744716), ((7.314744394618688, 7.316744394618689), (1.3184551847665276, 1.3204551847665273), 0.6253688221153217), ((8.175756431273255, 8.177756431273254), (6.5496506837326836, 6.551650683732684), 2.657965812394737), ((1.820243568726745, 1.8222435687267449), (1.4483493162673153, 1.4503493162673151), -0.4836268411950561)]
[INFO] [1753420025.836146510] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.127000093460083, 1.652999997138977])
[INFO] [1753420025.837656237] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.12700009 1.653     ]
[INFO] [1753420025.840742539] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420025.841606141] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420025.842379276] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420025.843161852] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420025.843981453] [solver_node]: 求解器返回结果: [((8.677544815233473, 8.679544815233472), (5.286746600360254, 5.288746600360255), 2.196165148910218), ((1.3184551847665273, 1.3204551847665271), (2.7112533996397454, 2.713253399639745), -0.9454275046795749), ((8.544339296799174, 8.546339296799173), (1.8233105932853477, 1.8253105932853475), 1.0915887896064893), ((1.451660703200825, 1.4536607032008249), (6.174689406714651, 6.176689406714652), -2.050003863983304), ((2.711253399639746, 2.7132533996397457), (6.679544815233473, 6.681544815233473), -2.5162238314744716), ((7.284746600360253, 7.286746600360254), (1.3184551847665276, 1.3204551847665273), 0.6253688221153217), ((8.172689406714651, 8.17468940671465), (6.546339296799174, 6.548339296799175), 2.662385116401386), ((1.8233105932853477, 1.8253105932853475), (1.4516607032008253, 1.453660703200825), -0.47920753718840736)]
[INFO] [1753420025.936758435] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.127000093460083, 1.652999997138977])
[INFO] [1753420025.938294530] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.12700009 1.653     ]
[INFO] [1753420025.941282143] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420025.942591738] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420025.943410378] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420025.944167353] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420025.944943881] [solver_node]: 求解器返回结果: [((8.677544815233473, 8.679544815233472), (5.286746600360254, 5.288746600360255), 2.196165148910218), ((1.3184551847665273, 1.3204551847665271), (2.7112533996397454, 2.713253399639745), -0.9454275046795749), ((8.544339296799174, 8.546339296799173), (1.8233105932853477, 1.8253105932853475), 1.0915887896064893), ((1.451660703200825, 1.4536607032008249), (6.174689406714651, 6.176689406714652), -2.050003863983304), ((2.711253399639746, 2.7132533996397457), (6.679544815233473, 6.681544815233473), -2.5162238314744716), ((7.284746600360253, 7.286746600360254), (1.3184551847665276, 1.3204551847665273), 0.6253688221153217), ((8.172689406714651, 8.17468940671465), (6.546339296799174, 6.548339296799175), 2.662385116401386), ((1.8233105932853477, 1.8253105932853475), (1.4516607032008253, 1.453660703200825), -0.47920753718840736)]
[INFO] [1753420026.037648287] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.127000093460083, 1.652999997138977])
[INFO] [1753420026.039639911] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.12700009 1.653     ]
[INFO] [1753420026.044818736] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420026.047261826] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420026.049109223] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420026.050746664] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420026.052287208] [solver_node]: 求解器返回结果: [((8.677544815233473, 8.679544815233472), (5.286746600360254, 5.288746600360255), 2.196165148910218), ((1.3184551847665273, 1.3204551847665271), (2.7112533996397454, 2.713253399639745), -0.9454275046795749), ((8.544339296799174, 8.546339296799173), (1.8233105932853477, 1.8253105932853475), 1.0915887896064893), ((1.451660703200825, 1.4536607032008249), (6.174689406714651, 6.176689406714652), -2.050003863983304), ((2.711253399639746, 2.7132533996397457), (6.679544815233473, 6.681544815233473), -2.5162238314744716), ((7.284746600360253, 7.286746600360254), (1.3184551847665276, 1.3204551847665273), 0.6253688221153217), ((8.172689406714651, 8.17468940671465), (6.546339296799174, 6.548339296799175), 2.662385116401386), ((1.8233105932853477, 1.8253105932853475), (1.4516607032008253, 1.453660703200825), -0.47920753718840736)]
[INFO] [1753420026.135828645] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.127000093460083, 1.652999997138977])
[INFO] [1753420026.137293795] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.12700009 1.653     ]
[INFO] [1753420026.140519716] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420026.141358453] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420026.142106052] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420026.142907413] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420026.143698181] [solver_node]: 求解器返回结果: [((8.677544815233473, 8.679544815233472), (5.286746600360254, 5.288746600360255), 2.196165148910218), ((1.3184551847665273, 1.3204551847665271), (2.7112533996397454, 2.713253399639745), -0.9454275046795749), ((8.544339296799174, 8.546339296799173), (1.8233105932853477, 1.8253105932853475), 1.0915887896064893), ((1.451660703200825, 1.4536607032008249), (6.174689406714651, 6.176689406714652), -2.050003863983304), ((2.711253399639746, 2.7132533996397457), (6.679544815233473, 6.681544815233473), -2.5162238314744716), ((7.284746600360253, 7.286746600360254), (1.3184551847665276, 1.3204551847665273), 0.6253688221153217), ((8.172689406714651, 8.17468940671465), (6.546339296799174, 6.548339296799175), 2.662385116401386), ((1.8233105932853477, 1.8253105932853475), (1.4516607032008253, 1.453660703200825), -0.47920753718840736)]
[INFO] [1753420026.235789520] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.127000093460083, 1.652999997138977])
[INFO] [1753420026.237273678] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.12700009 1.653     ]
[INFO] [1753420026.240503727] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420026.241358272] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420026.242256019] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420026.243035970] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420026.243843987] [solver_node]: 求解器返回结果: [((8.677544815233473, 8.679544815233472), (5.286746600360254, 5.288746600360255), 2.196165148910218), ((1.3184551847665273, 1.3204551847665271), (2.7112533996397454, 2.713253399639745), -0.9454275046795749), ((8.544339296799174, 8.546339296799173), (1.8233105932853477, 1.8253105932853475), 1.0915887896064893), ((1.451660703200825, 1.4536607032008249), (6.174689406714651, 6.176689406714652), -2.050003863983304), ((2.711253399639746, 2.7132533996397457), (6.679544815233473, 6.681544815233473), -2.5162238314744716), ((7.284746600360253, 7.286746600360254), (1.3184551847665276, 1.3204551847665273), 0.6253688221153217), ((8.172689406714651, 8.17468940671465), (6.546339296799174, 6.548339296799175), 2.662385116401386), ((1.8233105932853477, 1.8253105932853475), (1.4516607032008253, 1.453660703200825), -0.47920753718840736)]
[INFO] [1753420026.337283577] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.127000093460083, 1.652999997138977])
[INFO] [1753420026.338869081] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.12700009 1.653     ]
[INFO] [1753420026.342396641] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420026.343951104] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420026.345337212] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420026.346625526] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420026.348987814] [solver_node]: 求解器返回结果: [((8.677544815233473, 8.679544815233472), (5.286746600360254, 5.288746600360255), 2.196165148910218), ((1.3184551847665273, 1.3204551847665271), (2.7112533996397454, 2.713253399639745), -0.9454275046795749), ((8.544339296799174, 8.546339296799173), (1.8233105932853477, 1.8253105932853475), 1.0915887896064893), ((1.451660703200825, 1.4536607032008249), (6.174689406714651, 6.176689406714652), -2.050003863983304), ((2.711253399639746, 2.7132533996397457), (6.679544815233473, 6.681544815233473), -2.5162238314744716), ((7.284746600360253, 7.286746600360254), (1.3184551847665276, 1.3204551847665273), 0.6253688221153217), ((8.172689406714651, 8.17468940671465), (6.546339296799174, 6.548339296799175), 2.662385116401386), ((1.8233105932853477, 1.8253105932853475), (1.4516607032008253, 1.453660703200825), -0.47920753718840736)]
[INFO] [1753420026.437069024] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.127000093460083, 1.652999997138977])
[INFO] [1753420026.438606751] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.12700009 1.653     ]
[INFO] [1753420026.442634128] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420026.445720271] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420026.446952104] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420026.449064531] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420026.450495664] [solver_node]: 求解器返回结果: [((8.677544815233473, 8.679544815233472), (5.286746600360254, 5.288746600360255), 2.196165148910218), ((1.3184551847665273, 1.3204551847665271), (2.7112533996397454, 2.713253399639745), -0.9454275046795749), ((8.544339296799174, 8.546339296799173), (1.8233105932853477, 1.8253105932853475), 1.0915887896064893), ((1.451660703200825, 1.4536607032008249), (6.174689406714651, 6.176689406714652), -2.050003863983304), ((2.711253399639746, 2.7132533996397457), (6.679544815233473, 6.681544815233473), -2.5162238314744716), ((7.284746600360253, 7.286746600360254), (1.3184551847665276, 1.3204551847665273), 0.6253688221153217), ((8.172689406714651, 8.17468940671465), (6.546339296799174, 6.548339296799175), 2.662385116401386), ((1.8233105932853477, 1.8253105932853475), (1.4516607032008253, 1.453660703200825), -0.47920753718840736)]
[INFO] [1753420026.538004670] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.127000093460083, 1.652999997138977])
[INFO] [1753420026.540559858] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.12700009 1.653     ]
[INFO] [1753420026.543531630] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420026.544328766] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420026.545027468] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420026.545713242] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420026.546463785] [solver_node]: 求解器返回结果: [((8.677544815233473, 8.679544815233472), (5.286746600360254, 5.288746600360255), 2.196165148910218), ((1.3184551847665273, 1.3204551847665271), (2.7112533996397454, 2.713253399639745), -0.9454275046795749), ((8.544339296799174, 8.546339296799173), (1.8233105932853477, 1.8253105932853475), 1.0915887896064893), ((1.451660703200825, 1.4536607032008249), (6.174689406714651, 6.176689406714652), -2.050003863983304), ((2.711253399639746, 2.7132533996397457), (6.679544815233473, 6.681544815233473), -2.5162238314744716), ((7.284746600360253, 7.286746600360254), (1.3184551847665276, 1.3204551847665273), 0.6253688221153217), ((8.172689406714651, 8.17468940671465), (6.546339296799174, 6.548339296799175), 2.662385116401386), ((1.8233105932853477, 1.8253105932853475), (1.4516607032008253, 1.453660703200825), -0.47920753718840736)]
[INFO] [1753420026.642436611] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.127000093460083, 1.652999997138977])
[INFO] [1753420026.646537654] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.12700009 1.653     ]
[INFO] [1753420026.649955483] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420026.650848941] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420026.651580988] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420026.652305355] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420026.653095611] [solver_node]: 求解器返回结果: [((8.677544815233473, 8.679544815233472), (5.286746600360254, 5.288746600360255), 2.196165148910218), ((1.3184551847665273, 1.3204551847665271), (2.7112533996397454, 2.713253399639745), -0.9454275046795749), ((8.544339296799174, 8.546339296799173), (1.8233105932853477, 1.8253105932853475), 1.0915887896064893), ((1.451660703200825, 1.4536607032008249), (6.174689406714651, 6.176689406714652), -2.050003863983304), ((2.711253399639746, 2.7132533996397457), (6.679544815233473, 6.681544815233473), -2.5162238314744716), ((7.284746600360253, 7.286746600360254), (1.3184551847665276, 1.3204551847665273), 0.6253688221153217), ((8.172689406714651, 8.17468940671465), (6.546339296799174, 6.548339296799175), 2.662385116401386), ((1.8233105932853477, 1.8253105932853475), (1.4516607032008253, 1.453660703200825), -0.47920753718840736)]
[INFO] [1753420026.736743866] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.127000093460083, 1.652999997138977])
[INFO] [1753420026.738375483] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.12700009 1.653     ]
[INFO] [1753420026.741456730] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420026.742311467] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420026.743159068] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420026.743889707] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420026.744664667] [solver_node]: 求解器返回结果: [((8.677544815233473, 8.679544815233472), (5.286746600360254, 5.288746600360255), 2.196165148910218), ((1.3184551847665273, 1.3204551847665271), (2.7112533996397454, 2.713253399639745), -0.9454275046795749), ((8.544339296799174, 8.546339296799173), (1.8233105932853477, 1.8253105932853475), 1.0915887896064893), ((1.451660703200825, 1.4536607032008249), (6.174689406714651, 6.176689406714652), -2.050003863983304), ((2.711253399639746, 2.7132533996397457), (6.679544815233473, 6.681544815233473), -2.5162238314744716), ((7.284746600360253, 7.286746600360254), (1.3184551847665276, 1.3204551847665273), 0.6253688221153217), ((8.172689406714651, 8.17468940671465), (6.546339296799174, 6.548339296799175), 2.662385116401386), ((1.8233105932853477, 1.8253105932853475), (1.4516607032008253, 1.453660703200825), -0.47920753718840736)]
[INFO] [1753420026.836707397] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.127000093460083, 1.652999997138977])
[INFO] [1753420026.839417340] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.12700009 1.653     ]
[INFO] [1753420026.843821525] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420026.844740744] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420026.845864158] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420026.846932980] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420026.848086571] [solver_node]: 求解器返回结果: [((8.677544815233473, 8.679544815233472), (5.286746600360254, 5.288746600360255), 2.196165148910218), ((1.3184551847665273, 1.3204551847665271), (2.7112533996397454, 2.713253399639745), -0.9454275046795749), ((8.544339296799174, 8.546339296799173), (1.8233105932853477, 1.8253105932853475), 1.0915887896064893), ((1.451660703200825, 1.4536607032008249), (6.174689406714651, 6.176689406714652), -2.050003863983304), ((2.711253399639746, 2.7132533996397457), (6.679544815233473, 6.681544815233473), -2.5162238314744716), ((7.284746600360253, 7.286746600360254), (1.3184551847665276, 1.3204551847665273), 0.6253688221153217), ((8.172689406714651, 8.17468940671465), (6.546339296799174, 6.548339296799175), 2.662385116401386), ((1.8233105932853477, 1.8253105932853475), (1.4516607032008253, 1.453660703200825), -0.47920753718840736)]
[INFO] [1753420026.936104996] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.127000093460083, 1.652999997138977])
[INFO] [1753420026.937655715] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.12700009 1.653     ]
[INFO] [1753420026.940923333] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420026.941755734] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420026.942485477] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420026.943251253] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420026.944040645] [solver_node]: 求解器返回结果: [((8.677544815233473, 8.679544815233472), (5.286746600360254, 5.288746600360255), 2.196165148910218), ((1.3184551847665273, 1.3204551847665271), (2.7112533996397454, 2.713253399639745), -0.9454275046795749), ((8.544339296799174, 8.546339296799173), (1.8233105932853477, 1.8253105932853475), 1.0915887896064893), ((1.451660703200825, 1.4536607032008249), (6.174689406714651, 6.176689406714652), -2.050003863983304), ((2.711253399639746, 2.7132533996397457), (6.679544815233473, 6.681544815233473), -2.5162238314744716), ((7.284746600360253, 7.286746600360254), (1.3184551847665276, 1.3204551847665273), 0.6253688221153217), ((8.172689406714651, 8.17468940671465), (6.546339296799174, 6.548339296799175), 2.662385116401386), ((1.8233105932853477, 1.8253105932853475), (1.4516607032008253, 1.453660703200825), -0.47920753718840736)]
[INFO] [1753420027.038062775] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.127000093460083, 1.652999997138977])
[INFO] [1753420027.039611863] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.12700009 1.653     ]
[INFO] [1753420027.043807468] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420027.044664445] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420027.045422541] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420027.046113179] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420027.046997357] [solver_node]: 求解器返回结果: [((8.677544815233473, 8.679544815233472), (5.286746600360254, 5.288746600360255), 2.196165148910218), ((1.3184551847665273, 1.3204551847665271), (2.7112533996397454, 2.713253399639745), -0.9454275046795749), ((8.544339296799174, 8.546339296799173), (1.8233105932853477, 1.8253105932853475), 1.0915887896064893), ((1.451660703200825, 1.4536607032008249), (6.174689406714651, 6.176689406714652), -2.050003863983304), ((2.711253399639746, 2.7132533996397457), (6.679544815233473, 6.681544815233473), -2.5162238314744716), ((7.284746600360253, 7.286746600360254), (1.3184551847665276, 1.3204551847665273), 0.6253688221153217), ((8.172689406714651, 8.17468940671465), (6.546339296799174, 6.548339296799175), 2.662385116401386), ((1.8233105932853477, 1.8253105932853475), (1.4516607032008253, 1.453660703200825), -0.47920753718840736)]
[INFO] [1753420027.136129885] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.127000093460083, 0.5479999780654907])
[INFO] [1753420027.137564442] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.12700009 0.54799998]
[INFO] [1753420027.140519286] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420027.141334791] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420027.142050453] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420027.142841734] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420027.143607349] [solver_node]: 求解器返回结果: [((9.165508113140001, 9.16750811314), (6.361040389040578, 6.363040389040578), 2.6026455486903544), ((0.8304918868599983, 0.8324918868599983), (1.636959610959422, 1.6389596109594218), -0.538947104899439), ((8.544339296799174, 8.546339296799173), (0.84277338478089, 0.84477338478089), 1.0915887896064893), ((1.451660703200825, 1.4536607032008249), (7.155226615219109, 7.15722661521911), -2.050003863983304), ((1.6369596109594216, 1.6389596109594213), (7.167508113140001, 7.169508113140002), -2.1097434316943353), ((8.359040389040578, 8.361040389040577), (0.8304918868599984, 0.8324918868599984), 1.0318492218954576), ((9.15322661521911, 9.155226615219108), (6.546339296799174, 6.548339296799175), 2.662385116401386), ((0.84277338478089, 0.84477338478089), (1.4516607032008253, 1.453660703200825), -0.47920753718840736)]
[INFO] [1753420027.240555205] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.127000093460083, 1.0099999904632568])
[INFO] [1753420027.242370121] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.12700009 1.00999999]
[INFO] [1753420027.246273113] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420027.247537266] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420027.248679465] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420027.249433273] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420027.250221353] [solver_node]: 求解器返回结果: [((8.892463550282391, 8.89446355028239), (5.763954474519871, 5.765954474519872), 2.394046303062994), ((1.103536449717609, 1.1055364497176088), (2.234045525480128, 2.2360455254801277), -0.7475463505267991), ((8.544339296799174, 8.546339296799173), (1.2527355518995533, 1.254735551899553), 1.0915887896064893), ((1.451660703200825, 1.4536607032008249), (6.745264448100446, 6.747264448100447), -2.050003863983304), ((2.234045525480128, 2.2360455254801277), (6.894463550282391, 6.896463550282392), -2.3183426773216955), ((7.761954474519871, 7.763954474519871), (1.103536449717609, 1.1055364497176088), 0.8232499762680976), ((8.743264448100447, 8.745264448100446), (6.546339296799174, 6.548339296799175), 2.662385116401386), ((1.2527355518995533, 1.254735551899553), (1.4516607032008253, 1.453660703200825), -0.47920753718840736)]
[INFO] [1753420027.342609308] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.127000093460083, 1.4320000410079956])
[INFO] [1753420027.348139532] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.12700009 1.43200004]
[INFO] [1753420027.353543193] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420027.354396331] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420027.355214235] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420027.355910954] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420027.357182147] [solver_node]: 求解器返回结果: [((8.735775621865995, 8.737775621865994), (5.416930620443209, 5.418930620443209), 2.2543899364742086), ((1.2602243781340055, 1.2622243781340052), (2.5810693795567907, 2.5830693795567905), -0.8872027171155846), ((8.544339296799174, 8.546339296799173), (1.627203193897268, 1.6292031938972678), 1.0915887896064893), ((1.451660703200825, 1.4536607032008249), (6.3707968061027325, 6.372796806102733), -2.050003863983304), ((2.5810693795567907, 2.5830693795567905), (6.737775621865995, 6.739775621865996), -2.457999043910481), ((7.414930620443209, 7.4169306204432095), (1.2602243781340052, 1.262224378134005), 0.683593609679312), ((8.368796806102733, 8.370796806102732), (6.546339296799174, 6.548339296799175), 2.662385116401386), ((1.627203193897268, 1.6292031938972678), (1.4516607032008253, 1.453660703200825), -0.47920753718840736)]
[INFO] [1753420027.441317103] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.127000093460083, 1.4320000410079956])
[INFO] [1753420027.448027159] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.12700009 1.43200004]
[INFO] [1753420027.453420836] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420027.456593349] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420027.457324500] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420027.458539916] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420027.460455123] [solver_node]: 求解器返回结果: [((8.735775621865995, 8.737775621865994), (5.416930620443209, 5.418930620443209), 2.2543899364742086), ((1.2602243781340055, 1.2622243781340052), (2.5810693795567907, 2.5830693795567905), -0.8872027171155846), ((8.544339296799174, 8.546339296799173), (1.627203193897268, 1.6292031938972678), 1.0915887896064893), ((1.451660703200825, 1.4536607032008249), (6.3707968061027325, 6.372796806102733), -2.050003863983304), ((2.5810693795567907, 2.5830693795567905), (6.737775621865995, 6.739775621865996), -2.457999043910481), ((7.414930620443209, 7.4169306204432095), (1.2602243781340052, 1.262224378134005), 0.683593609679312), ((8.368796806102733, 8.370796806102732), (6.546339296799174, 6.548339296799175), 2.662385116401386), ((1.627203193897268, 1.6292031938972678), (1.4516607032008253, 1.453660703200825), -0.47920753718840736)]
[INFO] [1753420027.540658639] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.127000093460083, 1.4320000410079956])
[INFO] [1753420027.542257519] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.12700009 1.43200004]
[INFO] [1753420027.546253888] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420027.548524846] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420027.550053677] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420027.551396105] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420027.552814213] [solver_node]: 求解器返回结果: [((8.735775621865995, 8.737775621865994), (5.416930620443209, 5.418930620443209), 2.2543899364742086), ((1.2602243781340055, 1.2622243781340052), (2.5810693795567907, 2.5830693795567905), -0.8872027171155846), ((8.544339296799174, 8.546339296799173), (1.627203193897268, 1.6292031938972678), 1.0915887896064893), ((1.451660703200825, 1.4536607032008249), (6.3707968061027325, 6.372796806102733), -2.050003863983304), ((2.5810693795567907, 2.5830693795567905), (6.737775621865995, 6.739775621865996), -2.457999043910481), ((7.414930620443209, 7.4169306204432095), (1.2602243781340052, 1.262224378134005), 0.683593609679312), ((8.368796806102733, 8.370796806102732), (6.546339296799174, 6.548339296799175), 2.662385116401386), ((1.627203193897268, 1.6292031938972678), (1.4516607032008253, 1.453660703200825), -0.47920753718840736)]
[INFO] [1753420027.637020466] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 3.127000093460083, 1.4429999589920044])
[INFO] [1753420027.640227347] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 3.12700009 1.44299996]
[INFO] [1753420027.645127735] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420027.647557448] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420027.649301580] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420027.650075067] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420027.651038991] [solver_node]: 求解器返回结果: [((8.732552348806808, 8.734552348806806), (5.409744879517741, 5.411744879517742), 2.2512769609999133), ((1.263447651193193, 1.2654476511931927), (2.5882551204822586, 2.5902551204822584), -0.8903156925898799), ((8.544339296799174, 8.546339296799173), (1.6369641248363116, 1.6389641248363114), 1.0915887896064893), ((1.451660703200825, 1.4536607032008249), (6.361035875163688, 6.363035875163689), -2.050003863983304), ((2.588255120482259, 2.590255120482259), (6.734552348806807, 6.736552348806808), -2.4611120193847764), ((7.4077448795177405, 7.409744879517741), (1.2634476511931927, 1.2654476511931925), 0.6804806342050168), ((8.35903587516369, 8.361035875163688), (6.546339296799174, 6.548339296799175), 2.662385116401386), ((1.6369641248363116, 1.6389641248363114), (1.4516607032008253, 1.453660703200825), -0.47920753718840736)]
[INFO] [1753420027.737603275] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 4.333000183105469, 1.4429999589920044])
[INFO] [1753420027.739318158] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 4.33300018 1.44299996]
[INFO] [1753420027.743213533] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420027.744325716] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420027.745650639] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420027.746563457] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420027.747478420] [solver_node]: 求解器返回结果: [((8.732552348806808, 8.734552348806806), (4.472356695965024, 4.4743566959650245), 2.2512769609999133), ((1.263447651193193, 1.2654476511931927), (3.525643304034975, 3.527643304034975), -0.8903156925898799), ((8.470302654865677, 8.472302654865675), (1.6928206171333071, 1.694820617133307), 1.203157944396551), ((1.5256973451343225, 1.5276973451343223), (6.305179382866693, 6.3071793828666936), -1.9384347091932421), ((3.5256433040349755, 3.5276433040349753), (6.734552348806807, 6.736552348806808), -2.4611120193847764), ((6.470356695965024, 6.472356695965025), (1.2634476511931927, 1.2654476511931925), 0.6804806342050168), ((8.303179382866693, 8.305179382866692), (6.472302654865676, 6.474302654865677), 2.7739542711914478), ((1.6928206171333071, 1.694820617133307), (1.5256973451343228, 1.5276973451343225), -0.36763838239834545)]
[INFO] [1753420027.835959352] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 4.264999866485596, 1.4429999589920044])
[INFO] [1753420027.837608665] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 4.26499987 1.44299996]
[INFO] [1753420027.840827482] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420027.841730349] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420027.842509884] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420027.843318189] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420027.844136957] [solver_node]: 求解器返回结果: [((8.732552348806808, 8.734552348806806), (4.525211329911243, 4.5272113299112435), 2.2512769609999133), ((1.263447651193193, 1.2654476511931927), (3.4727886700887574, 3.474788670088757), -0.8903156925898799), ((8.4731947816228, 8.475194781622799), (1.6907820321858222, 1.692782032185822), 1.1982014241707164), ((1.5228052183772003, 1.5248052183772), (6.307217967814178, 6.309217967814178), -1.9433912294190767), ((3.472788670088757, 3.4747886700887567), (6.734552348806807, 6.736552348806808), -2.4611120193847764), ((6.523211329911242, 6.525211329911243), (1.2634476511931927, 1.2654476511931925), 0.6804806342050168), ((8.305217967814178, 8.307217967814177), (6.4751947816227995, 6.4771947816228), 2.768997750965613), ((1.6907820321858222, 1.692782032185822), (1.5228052183772003, 1.5248052183772), -0.37259490262418)]
[INFO] [1753420027.935872995] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 4.264999866485596, 1.4429999589920044])
[INFO] [1753420027.937434211] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 4.26499987 1.44299996]
[INFO] [1753420027.940594115] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420027.941474005] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420027.942231364] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420027.943027572] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420027.943811396] [solver_node]: 求解器返回结果: [((8.732552348806808, 8.734552348806806), (4.525211329911243, 4.5272113299112435), 2.2512769609999133), ((1.263447651193193, 1.2654476511931927), (3.4727886700887574, 3.474788670088757), -0.8903156925898799), ((8.4731947816228, 8.475194781622799), (1.6907820321858222, 1.692782032185822), 1.1982014241707164), ((1.5228052183772003, 1.5248052183772), (6.307217967814178, 6.309217967814178), -1.9433912294190767), ((3.472788670088757, 3.4747886700887567), (6.734552348806807, 6.736552348806808), -2.4611120193847764), ((6.523211329911242, 6.525211329911243), (1.2634476511931927, 1.2654476511931925), 0.6804806342050168), ((8.305217967814178, 8.307217967814177), (6.4751947816227995, 6.4771947816228), 2.768997750965613), ((1.6907820321858222, 1.692782032185822), (1.5228052183772003, 1.5248052183772), -0.37259490262418)]
[INFO] [1753420028.037467666] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 4.264999866485596, 1.4429999589920044])
[INFO] [1753420028.039045554] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 4.26499987 1.44299996]
[INFO] [1753420028.044001878] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420028.049450405] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420028.052180444] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420028.053022286] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420028.054209574] [solver_node]: 求解器返回结果: [((8.732552348806808, 8.734552348806806), (4.525211329911243, 4.5272113299112435), 2.2512769609999133), ((1.263447651193193, 1.2654476511931927), (3.4727886700887574, 3.474788670088757), -0.8903156925898799), ((8.4731947816228, 8.475194781622799), (1.6907820321858222, 1.692782032185822), 1.1982014241707164), ((1.5228052183772003, 1.5248052183772), (6.307217967814178, 6.309217967814178), -1.9433912294190767), ((3.472788670088757, 3.4747886700887567), (6.734552348806807, 6.736552348806808), -2.4611120193847764), ((6.523211329911242, 6.525211329911243), (1.2634476511931927, 1.2654476511931925), 0.6804806342050168), ((8.305217967814178, 8.307217967814177), (6.4751947816227995, 6.4771947816228), 2.768997750965613), ((1.6907820321858222, 1.692782032185822), (1.5228052183772003, 1.5248052183772), -0.37259490262418)]
[INFO] [1753420028.136396875] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 4.264999866485596, 1.4429999589920044])
[INFO] [1753420028.138366323] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 4.26499987 1.44299996]
[INFO] [1753420028.142566249] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420028.143453211] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420028.145398754] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420028.147751570] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420028.148604163] [solver_node]: 求解器返回结果: [((8.732552348806808, 8.734552348806806), (4.525211329911243, 4.5272113299112435), 2.2512769609999133), ((1.263447651193193, 1.2654476511931927), (3.4727886700887574, 3.474788670088757), -0.8903156925898799), ((8.4731947816228, 8.475194781622799), (1.6907820321858222, 1.692782032185822), 1.1982014241707164), ((1.5228052183772003, 1.5248052183772), (6.307217967814178, 6.309217967814178), -1.9433912294190767), ((3.472788670088757, 3.4747886700887567), (6.734552348806807, 6.736552348806808), -2.4611120193847764), ((6.523211329911242, 6.525211329911243), (1.2634476511931927, 1.2654476511931925), 0.6804806342050168), ((8.305217967814178, 8.307217967814177), (6.4751947816227995, 6.4771947816228), 2.768997750965613), ((1.6907820321858222, 1.692782032185822), (1.5228052183772003, 1.5248052183772), -0.37259490262418)]
[INFO] [1753420028.240298890] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 4.264999866485596, 1.4429999589920044])
[INFO] [1753420028.241873130] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 4.26499987 1.44299996]
[INFO] [1753420028.245815706] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420028.247803587] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420028.248698869] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420028.249463845] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420028.250231988] [solver_node]: 求解器返回结果: [((8.732552348806808, 8.734552348806806), (4.525211329911243, 4.5272113299112435), 2.2512769609999133), ((1.263447651193193, 1.2654476511931927), (3.4727886700887574, 3.474788670088757), -0.8903156925898799), ((8.4731947816228, 8.475194781622799), (1.6907820321858222, 1.692782032185822), 1.1982014241707164), ((1.5228052183772003, 1.5248052183772), (6.307217967814178, 6.309217967814178), -1.9433912294190767), ((3.472788670088757, 3.4747886700887567), (6.734552348806807, 6.736552348806808), -2.4611120193847764), ((6.523211329911242, 6.525211329911243), (1.2634476511931927, 1.2654476511931925), 0.6804806342050168), ((8.305217967814178, 8.307217967814177), (6.4751947816227995, 6.4771947816228), 2.768997750965613), ((1.6907820321858222, 1.692782032185822), (1.5228052183772003, 1.5248052183772), -0.37259490262418)]
[INFO] [1753420028.336954582] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 4.264999866485596, 1.4429999589920044])
[INFO] [1753420028.338438740] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 4.26499987 1.44299996]
[INFO] [1753420028.341395664] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420028.343879267] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420028.345371041] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420028.347229703] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420028.348161562] [solver_node]: 求解器返回结果: [((8.732552348806808, 8.734552348806806), (4.525211329911243, 4.5272113299112435), 2.2512769609999133), ((1.263447651193193, 1.2654476511931927), (3.4727886700887574, 3.474788670088757), -0.8903156925898799), ((8.4731947816228, 8.475194781622799), (1.6907820321858222, 1.692782032185822), 1.1982014241707164), ((1.5228052183772003, 1.5248052183772), (6.307217967814178, 6.309217967814178), -1.9433912294190767), ((3.472788670088757, 3.4747886700887567), (6.734552348806807, 6.736552348806808), -2.4611120193847764), ((6.523211329911242, 6.525211329911243), (1.2634476511931927, 1.2654476511931925), 0.6804806342050168), ((8.305217967814178, 8.307217967814177), (6.4751947816227995, 6.4771947816228), 2.768997750965613), ((1.6907820321858222, 1.692782032185822), (1.5228052183772003, 1.5248052183772), -0.37259490262418)]
[INFO] [1753420028.435926737] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 4.264999866485596, 1.4429999589920044])
[INFO] [1753420028.437434799] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 4.26499987 1.44299996]
[INFO] [1753420028.440473613] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420028.441317758] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420028.442063629] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420028.442894686] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420028.443725743] [solver_node]: 求解器返回结果: [((8.732552348806808, 8.734552348806806), (4.525211329911243, 4.5272113299112435), 2.2512769609999133), ((1.263447651193193, 1.2654476511931927), (3.4727886700887574, 3.474788670088757), -0.8903156925898799), ((8.4731947816228, 8.475194781622799), (1.6907820321858222, 1.692782032185822), 1.1982014241707164), ((1.5228052183772003, 1.5248052183772), (6.307217967814178, 6.309217967814178), -1.9433912294190767), ((3.472788670088757, 3.4747886700887567), (6.734552348806807, 6.736552348806808), -2.4611120193847764), ((6.523211329911242, 6.525211329911243), (1.2634476511931927, 1.2654476511931925), 0.6804806342050168), ((8.305217967814178, 8.307217967814177), (6.4751947816227995, 6.4771947816228), 2.768997750965613), ((1.6907820321858222, 1.692782032185822), (1.5228052183772003, 1.5248052183772), -0.37259490262418)]
[INFO] [1753420028.535926112] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 4.264999866485596, 1.4429999589920044])
[INFO] [1753420028.537396734] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 4.26499987 1.44299996]
[INFO] [1753420028.540500541] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420028.541383823] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420028.542353923] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420028.543335799] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420028.544265130] [solver_node]: 求解器返回结果: [((8.732552348806808, 8.734552348806806), (4.525211329911243, 4.5272113299112435), 2.2512769609999133), ((1.263447651193193, 1.2654476511931927), (3.4727886700887574, 3.474788670088757), -0.8903156925898799), ((8.4731947816228, 8.475194781622799), (1.6907820321858222, 1.692782032185822), 1.1982014241707164), ((1.5228052183772003, 1.5248052183772), (6.307217967814178, 6.309217967814178), -1.9433912294190767), ((3.472788670088757, 3.4747886700887567), (6.734552348806807, 6.736552348806808), -2.4611120193847764), ((6.523211329911242, 6.525211329911243), (1.2634476511931927, 1.2654476511931925), 0.6804806342050168), ((8.305217967814178, 8.307217967814177), (6.4751947816227995, 6.4771947816228), 2.768997750965613), ((1.6907820321858222, 1.692782032185822), (1.5228052183772003, 1.5248052183772), -0.37259490262418)]
[INFO] [1753420028.636983558] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 4.264999866485596, 1.4429999589920044])
[INFO] [1753420028.638532965] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 4.26499987 1.44299996]
[INFO] [1753420028.641657028] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420028.643466537] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420028.644387580] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420028.645156044] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420028.645957148] [solver_node]: 求解器返回结果: [((8.732552348806808, 8.734552348806806), (4.525211329911243, 4.5272113299112435), 2.2512769609999133), ((1.263447651193193, 1.2654476511931927), (3.4727886700887574, 3.474788670088757), -0.8903156925898799), ((8.4731947816228, 8.475194781622799), (1.6907820321858222, 1.692782032185822), 1.1982014241707164), ((1.5228052183772003, 1.5248052183772), (6.307217967814178, 6.309217967814178), -1.9433912294190767), ((3.472788670088757, 3.4747886700887567), (6.734552348806807, 6.736552348806808), -2.4611120193847764), ((6.523211329911242, 6.525211329911243), (1.2634476511931927, 1.2654476511931925), 0.6804806342050168), ((8.305217967814178, 8.307217967814177), (6.4751947816227995, 6.4771947816228), 2.768997750965613), ((1.6907820321858222, 1.692782032185822), (1.5228052183772003, 1.5248052183772), -0.37259490262418)]
[INFO] [1753420028.737522656] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 4.264999866485596, 1.4429999589920044])
[INFO] [1753420028.739132449] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 4.26499987 1.44299996]
[INFO] [1753420028.742286497] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420028.743200531] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420028.743970755] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420028.744718290] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420028.745504354] [solver_node]: 求解器返回结果: [((8.732552348806808, 8.734552348806806), (4.525211329911243, 4.5272113299112435), 2.2512769609999133), ((1.263447651193193, 1.2654476511931927), (3.4727886700887574, 3.474788670088757), -0.8903156925898799), ((8.4731947816228, 8.475194781622799), (1.6907820321858222, 1.692782032185822), 1.1982014241707164), ((1.5228052183772003, 1.5248052183772), (6.307217967814178, 6.309217967814178), -1.9433912294190767), ((3.472788670088757, 3.4747886700887567), (6.734552348806807, 6.736552348806808), -2.4611120193847764), ((6.523211329911242, 6.525211329911243), (1.2634476511931927, 1.2654476511931925), 0.6804806342050168), ((8.305217967814178, 8.307217967814177), (6.4751947816227995, 6.4771947816228), 2.768997750965613), ((1.6907820321858222, 1.692782032185822), (1.5228052183772003, 1.5248052183772), -0.37259490262418)]
[INFO] [1753420028.836056690] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 4.264999866485596, 1.4429999589920044])
[INFO] [1753420028.837620434] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 4.26499987 1.44299996]
[INFO] [1753420028.840686096] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420028.841529345] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420028.842941086] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420028.844489757] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420028.845310638] [solver_node]: 求解器返回结果: [((8.732552348806808, 8.734552348806806), (4.525211329911243, 4.5272113299112435), 2.2512769609999133), ((1.263447651193193, 1.2654476511931927), (3.4727886700887574, 3.474788670088757), -0.8903156925898799), ((8.4731947816228, 8.475194781622799), (1.6907820321858222, 1.692782032185822), 1.1982014241707164), ((1.5228052183772003, 1.5248052183772), (6.307217967814178, 6.309217967814178), -1.9433912294190767), ((3.472788670088757, 3.4747886700887567), (6.734552348806807, 6.736552348806808), -2.4611120193847764), ((6.523211329911242, 6.525211329911243), (1.2634476511931927, 1.2654476511931925), 0.6804806342050168), ((8.305217967814178, 8.307217967814177), (6.4751947816227995, 6.4771947816228), 2.768997750965613), ((1.6907820321858222, 1.692782032185822), (1.5228052183772003, 1.5248052183772), -0.37259490262418)]
[INFO] [1753420028.935781820] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 1.2610000371932983, 4.264999866485596, 1.4429999589920044])
[INFO] [1753420028.937277338] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 1.26100004 4.26499987 1.44299996]
[INFO] [1753420028.940218134] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420028.941017414] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420028.941791958] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420028.942554502] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420028.943570106] [solver_node]: 求解器返回结果: [((8.732552348806808, 8.734552348806806), (4.525211329911243, 4.5272113299112435), 2.2512769609999133), ((1.263447651193193, 1.2654476511931927), (3.4727886700887574, 3.474788670088757), -0.8903156925898799), ((8.4731947816228, 8.475194781622799), (1.6907820321858222, 1.692782032185822), 1.1982014241707164), ((1.5228052183772003, 1.5248052183772), (6.307217967814178, 6.309217967814178), -1.9433912294190767), ((3.472788670088757, 3.4747886700887567), (6.734552348806807, 6.736552348806808), -2.4611120193847764), ((6.523211329911242, 6.525211329911243), (1.2634476511931927, 1.2654476511931925), 0.6804806342050168), ((8.305217967814178, 8.307217967814177), (6.4751947816227995, 6.4771947816228), 2.768997750965613), ((1.6907820321858222, 1.692782032185822), (1.5228052183772003, 1.5248052183772), -0.37259490262418)]
[INFO] [1753420029.037183177] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.312000036239624, 4.264999866485596, 1.1019999980926514])
[INFO] [1753420029.038901484] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.31200004 4.26499987 1.102     ]
[INFO] [1753420029.041939082] [solver_node]: 求解器返回结果: []
[INFO] [1753420029.138451733] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.313999891281128, 4.264999866485596, 1.1019999980926514])
[INFO] [1753420029.141636725] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.31399989 4.26499987 1.102     ]
[INFO] [1753420029.145765897] [solver_node]: 求解器返回结果: []
[INFO] [1753420029.237059498] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2739999294281006, 4.264999866485596, 1.1019999980926514])
[INFO] [1753420029.239190869] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.27399993 4.26499987 1.102     ]
[INFO] [1753420029.244313822] [solver_node]: 求解器返回结果: []
[INFO] [1753420029.340536995] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.2739999294281006, 4.264999866485596, 0.9819999933242798])
[INFO] [1753420029.343230297] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.27399993 4.26499987 0.98199999]
[INFO] [1753420029.346961189] [solver_node]: 求解器返回结果: []
[INFO] [1753420029.437070542] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.1710000038146973, 4.264999866485596, 0.9399999976158142])
[INFO] [1753420029.439790629] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.171      4.26499987 0.94      ]
[INFO] [1753420029.442937317] [solver_node]: 求解器返回结果: []
[INFO] [1753420029.535741637] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.13700008392334, 4.264999866485596, 0.9399999976158142])
[INFO] [1753420029.537151138] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.13700008 4.26499987 0.94      ]
[INFO] [1753420029.539829976] [solver_node]: 求解器返回结果: []
[INFO] [1753420029.636492230] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.13700008392334, 4.264999866485596, 0.9399999976158142])
[INFO] [1753420029.638100519] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.13700008 4.26499987 0.94      ]
[INFO] [1753420029.641290824] [solver_node]: 求解器返回结果: []
[INFO] [1753420029.740269605] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.13700008392334, 4.264999866485596, 0.9399999976158142])
[INFO] [1753420029.742406416] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.13700008 4.26499987 0.94      ]
[INFO] [1753420029.745548624] [solver_node]: 求解器返回结果: []
[INFO] [1753420029.837315771] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.13700008392334, 4.264999866485596, 0.9399999976158142])
[INFO] [1753420029.839246562] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.13700008 4.26499987 0.94      ]
[INFO] [1753420029.844343562] [solver_node]: 求解器返回结果: []
[INFO] [1753420029.936235511] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.13700008392334, 4.264999866485596, 0.9399999976158142])
[INFO] [1753420029.937920057] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.13700008 4.26499987 0.94      ]
[INFO] [1753420029.941654149] [solver_node]: 求解器返回结果: []
[INFO] [1753420030.039969717] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.13700008392334, 4.264999866485596, 0.9399999976158142])
[INFO] [1753420030.041639799] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.13700008 4.26499987 0.94      ]
[INFO] [1753420030.046204020] [solver_node]: 求解器返回结果: []
[INFO] [1753420030.139539393] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.13700008392334, 4.264999866485596, 0.9399999976158142])
[INFO] [1753420030.141064000] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.13700008 4.26499987 0.94      ]
[INFO] [1753420030.143780727] [solver_node]: 求解器返回结果: []
[INFO] [1753420030.235811209] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.13700008392334, 4.264999866485596, 0.9399999976158142])
[INFO] [1753420030.237237126] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.13700008 4.26499987 0.94      ]
[INFO] [1753420030.239922268] [solver_node]: 求解器返回结果: []
[INFO] [1753420030.336896819] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.13700008392334, 4.701000213623047, 0.9399999976158142])
[INFO] [1753420030.338477651] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.13700008 4.70100021 0.94      ]
[INFO] [1753420030.342208415] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420030.344061669] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420030.344789844] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420030.345510466] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420030.346266706] [solver_node]: 求解器返回结果: [((8.81133518331901, 8.813335183319008), (5.747912244629995, 5.7499122446299955), 2.646324032899773), ((1.18466481668099, 1.1866648166809899), (2.250087755370005, 2.2520877553700047), -0.49526862069002014), ((7.777524452616665, 7.779524452616665), (1.1872980438479368, 1.1892980438479366), 1.0825277466283603), ((2.2184755473833344, 2.220475547383334), (6.810701956152063, 6.812701956152064), -2.059064906961433), ((2.2500877553700023, 2.252087755370002), (6.81333518331901, 6.815335183319011), -2.066064947484916), ((7.745912244629994, 7.747912244629995), (1.18466481668099, 1.1866648166809899), 1.0755277061048765), ((8.808701956152063, 8.810701956152062), (5.779524452616666, 5.781524452616667), 2.6533240734232573), ((1.1872980438479368, 1.1892980438479366), (2.218475547383334, 2.2204755473833337), -0.48826858016653607)]
[INFO] [1753420030.439668672] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.13700008392334, 4.672999858856201, 0.9399999976158142])
[INFO] [1753420030.442871681] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.13700008 4.67299986 0.94      ]
[INFO] [1753420030.449157537] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420030.450389914] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420030.451212107] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420030.452059996] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420030.452844684] [solver_node]: 求解器返回结果: [((8.81133518331901, 8.813335183319008), (5.761219917573414, 5.763219917573415), 2.646324032899773), ((1.18466481668099, 1.1866648166809899), (2.236780082426584, 2.238780082426584), -0.49526862069002014), ((7.7802415064446375, 7.782241506444638), (1.1864329408806291, 1.188432940880629), 1.0802108790006422), ((2.2157584935553616, 2.2177584935553614), (6.811567059119371, 6.8135670591193715), -2.061381774589151), ((2.236780082426582, 2.2387800824265818), (6.81333518331901, 6.815335183319011), -2.066064947484916), ((7.7592199175734144, 7.761219917573415), (1.18466481668099, 1.1866648166809899), 1.0755277061048765), ((8.80956705911937, 8.811567059119369), (5.782241506444638, 5.784241506444639), 2.6510072057955387), ((1.1864329408806291, 1.188432940880629), (2.2157584935553616, 2.2177584935553614), -0.49058544779425445)]
[INFO] [1753420030.538328056] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.13700008392334, 4.663000106811523, 0.9399999976158142])
[INFO] [1753420030.539926361] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.13700008 4.66300011 0.94      ]
[INFO] [1753420030.543010840] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420030.543877129] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420030.544628345] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420030.545386344] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420030.546183064] [solver_node]: 求解器返回结果: [((8.81133518331901, 8.813335183319008), (5.765972479847499, 5.7679724798475), 2.646324032899773), ((1.18466481668099, 1.1866648166809899), (2.2320275201525006, 2.2340275201525004), -0.49526862069002014), ((7.781220499829565, 7.783220499829565), (1.1861206006978378, 1.1881206006978375), 1.0793785563999347), ((2.2147795001704336, 2.2167795001704333), (6.811879399302161, 6.813879399302162), -2.0622140971898584), ((2.2320275201524975, 2.2340275201524973), (6.81333518331901, 6.815335183319011), -2.066064947484916), ((7.7639724798474985, 7.765972479847499), (1.18466481668099, 1.1866648166809899), 1.0755277061048765), ((8.809879399302162, 8.81187939930216), (5.783220499829565, 5.785220499829566), 2.6501748831948313), ((1.1861206006978378, 1.1881206006978375), (2.214779500170434, 2.216779500170434), -0.4914177703949618)]
[INFO] [1753420030.641998295] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.13700008392334, 4.64900016784668, 0.9399999976158142])
[INFO] [1753420030.644148419] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.13700008 4.64900017 0.94      ]
[INFO] [1753420030.648361049] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420030.650252863] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420030.651160114] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420030.651947042] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420030.652754450] [solver_node]: 求解器返回结果: [((8.81133518331901, 8.813335183319008), (5.772626203006485, 5.774626203006486), 2.646324032899773), ((1.18466481668099, 1.1866648166809899), (2.2253737969935137, 2.2273737969935135), -0.49526862069002014), ((7.782598847130237, 7.784598847130238), (1.1856802875664416, 1.1876802875664414), 1.0782089156882275), ((2.213401152869762, 2.2154011528697617), (6.812319712433559, 6.8143197124335595), -2.0633837379015656), ((2.2253737969935115, 2.2273737969935112), (6.81333518331901, 6.815335183319011), -2.066064947484916), ((7.770626203006485, 7.772626203006486), (1.18466481668099, 1.1866648166809899), 1.0755277061048765), ((8.810319712433559, 8.812319712433558), (5.784598847130238, 5.7865988471302385), 2.649005242483124), ((1.1856802875664416, 1.1876802875664414), (2.213401152869762, 2.2154011528697617), -0.49258741110666904)]
[INFO] [1753420030.737378925] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.13700008392334, 4.64900016784668, 0.9399999976158142])
[INFO] [1753420030.738942829] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.13700008 4.64900017 0.94      ]
[INFO] [1753420030.741997099] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420030.743743695] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420030.744608001] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420030.745386448] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420030.748173417] [solver_node]: 求解器返回结果: [((8.81133518331901, 8.813335183319008), (5.772626203006485, 5.774626203006486), 2.646324032899773), ((1.18466481668099, 1.1866648166809899), (2.2253737969935137, 2.2273737969935135), -0.49526862069002014), ((7.782598847130237, 7.784598847130238), (1.1856802875664416, 1.1876802875664414), 1.0782089156882275), ((2.213401152869762, 2.2154011528697617), (6.812319712433559, 6.8143197124335595), -2.0633837379015656), ((2.2253737969935115, 2.2273737969935112), (6.81333518331901, 6.815335183319011), -2.066064947484916), ((7.770626203006485, 7.772626203006486), (1.18466481668099, 1.1866648166809899), 1.0755277061048765), ((8.810319712433559, 8.812319712433558), (5.784598847130238, 5.7865988471302385), 2.649005242483124), ((1.1856802875664416, 1.1876802875664414), (2.213401152869762, 2.2154011528697617), -0.49258741110666904)]
[INFO] [1753420030.836490991] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.13700008392334, 4.644000053405762, 0.9399999976158142])
[INFO] [1753420030.838061455] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.13700008 4.64400005 0.94      ]
[INFO] [1753420030.841072941] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420030.841903390] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420030.842861553] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420030.843593120] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420030.844331247] [solver_node]: 求解器返回结果: [((8.81133518331901, 8.813335183319008), (5.775002597456251, 5.777002597456252), 2.646324032899773), ((1.18466481668099, 1.1866648166809899), (2.222997402543748, 2.224997402543748), -0.49526862069002014), ((7.783093324960608, 7.7850933249606085), (1.1855221670851332, 1.187522167085133), 1.0777899361485694), ((2.2129066750393913, 2.214906675039391), (6.812477832914866, 6.814477832914867), -2.0638027174412237), ((2.2229974025437453, 2.224997402543745), (6.81333518331901, 6.815335183319011), -2.066064947484916), ((7.773002597456251, 7.775002597456251), (1.18466481668099, 1.1866648166809899), 1.0755277061048765), ((8.810477832914867, 8.812477832914865), (5.7850933249606085, 5.787093324960609), 2.648586262943466), ((1.1855221670851332, 1.187522167085133), (2.2129066750393913, 2.214906675039391), -0.49300639064632695)]
[INFO] [1753420030.939764742] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.13700008392334, 4.6519999504089355, 0.9399999976158142])
[INFO] [1753420030.942089910] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.13700008 4.65199995 0.94      ]
[INFO] [1753420030.947277247] [solver_node]: [PoseSolver] 第0个组合有8个有效解
[INFO] [1753420030.948187218] [solver_node]: [PoseSolver] 处理完第0个组合后的筛选结果:
[INFO] [1753420030.948939553] [solver_node]: [PoseSolver] 排序后的最终筛选结果:
[INFO] [1753420030.950490689] [solver_node]: [PoseSolver] 找到8个完美相容解 (相容数=N)
[INFO] [1753420030.951315921] [solver_node]: 求解器返回结果: [((8.81133518331901, 8.813335183319008), (5.7712005023118955, 5.773200502311896), 2.646324032899773), ((1.18466481668099, 1.1866648166809899), (2.2267994976881047, 2.2287994976881045), -0.49526862069002014), ((7.782302745008074, 7.784302745008075), (1.1857749326729492, 1.187774932672949), 1.078459965893252), ((2.213697254991924, 2.2156972549919236), (6.81222506732705, 6.814225067327051), -2.063132687696541), ((2.2267994976881016, 2.2287994976881014), (6.81333518331901, 6.815335183319011), -2.066064947484916), ((7.769200502311894, 7.771200502311895), (1.18466481668099, 1.1866648166809899), 1.0755277061048765), ((8.810225067327051, 8.81222506732705), (5.784302745008076, 5.786302745008077), 2.6492562926881487), ((1.1857749326729492, 1.187774932672949), (2.213697254991924, 2.2156972549919236), -0.4923363609016443)]
[INFO] [1753420031.036044911] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.5789999961853027, 4.6519999504089355, 0.9399999976158142])
[INFO] [1753420031.037846420] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.579      4.65199995 0.94      ]
[INFO] [1753420031.041583232] [solver_node]: 求解器返回结果: []
[INFO] [1753420031.139033123] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.569000005722046, 4.6519999504089355, 0.9399999976158142])
[INFO] [1753420031.140768454] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.56900001 4.65199995 0.94      ]
[INFO] [1753420031.145729547] [solver_node]: 求解器返回结果: []
[INFO] [1753420031.238838709] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.51200008392334, 4.646999835968018, 0.9399999976158142])
[INFO] [1753420031.240932832] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.51200008 4.64699984 0.94      ]
[INFO] [1753420031.244807183] [solver_node]: 求解器返回结果: []
[INFO] [1753420031.344424637] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.51200008392334, 4.64300012588501, 0.9399999976158142])
[INFO] [1753420031.345998589] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.51200008 4.64300013 0.94      ]
[INFO] [1753420031.348708085] [solver_node]: 求解器返回结果: []
[INFO] [1753420031.442083556] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.51200008392334, 4.640999794006348, 0.9399999976158142])
[INFO] [1753420031.444160046] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.51200008 4.64099979 0.94      ]
[INFO] [1753420031.447002536] [solver_node]: 求解器返回结果: []
[INFO] [1753420031.537014451] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.38100004196167, 4.640999794006348, 0.9399999976158142])
[INFO] [1753420031.540879618] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.38100004 4.64099979 0.94      ]
[INFO] [1753420031.547079136] [solver_node]: 求解器返回结果: []
[INFO] [1753420031.643702354] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.38100004196167, 4.640999794006348, 0.9399999976158142])
[INFO] [1753420031.646691567] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.38100004 4.64099979 0.94      ]
[INFO] [1753420031.650476764] [solver_node]: 求解器返回结果: []
[INFO] [1753420031.738720898] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 2.38100004196167, 4.640999794006348, 0.9399999976158142])
[INFO] [1753420031.740236353] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 2.38100004 4.64099979 0.94      ]
[INFO] [1753420031.743097468] [solver_node]: 求解器返回结果: []
[INFO] [1753420031.839431911] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.565000057220459, 4.642000198364258, 0.9399999976158142])
[INFO] [1753420031.840961735] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.56500006 4.6420002  0.94      ]
[INFO] [1753420031.844020229] [solver_node]: 求解器返回结果: []
[INFO] [1753420031.936736295] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.565000057220459, 4.644999980926514, 0.39100000262260437])
[INFO] [1753420031.938312839] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.56500006 4.64499998 0.391     ]
[WARN] [1753420031.939575937] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420031.940383505] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420031.941248003] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420032.036977667] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.565000057220459, 4.644999980926514, 0.39100000262260437])
[INFO] [1753420032.038526978] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.56500006 4.64499998 0.391     ]
[WARN] [1753420032.039724475] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420032.040680078] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420032.041695779] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420032.139638354] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.565000057220459, 4.646999835968018, 0.39100000262260437])
[INFO] [1753420032.142964950] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.56500006 4.64699984 0.391     ]
[WARN] [1753420032.145182819] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420032.146830660] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420032.148402725] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420032.237447934] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.565999984741211, 4.64900016784668, 0.39100000262260437])
[INFO] [1753420032.239224930] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.56599998 4.64900017 0.391     ]
[WARN] [1753420032.240753473] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420032.242245472] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420032.243108273] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420032.337812478] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.567999839782715, 4.64900016784668, 0.39100000262260437])
[INFO] [1753420032.341222627] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.56799984 4.64900017 0.391     ]
[WARN] [1753420032.342991655] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420032.343862361] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420032.345217269] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420032.437638643] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.570000171661377, 4.64900016784668, 0.39100000262260437])
[INFO] [1753420032.440848692] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.57000017 4.64900017 0.391     ]
[WARN] [1753420032.442897534] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420032.445477875] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420032.447528221] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420032.537074784] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.572000026702881, 4.6519999504089355, 0.39100000262260437])
[INFO] [1753420032.539256844] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.57200003 4.65199995 0.391     ]
[WARN] [1753420032.542447405] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420032.544383029] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420032.545224486] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

[INFO] [1753420032.639327878] [solver_node]: 数据详情:
- 第一个元素类型: <class 'float'>
- 整个数组类型: <class 'array.array'>
- 数组长度: 4
- 示例值: array('f', [0.0, 5.572000026702881, 4.6539998054504395, 0.39100000262260437])
[INFO] [1753420032.640941863] [solver_node]: 调用求解器前，distances shape: (4,), values: [       nan 5.57200003 4.65399981 0.391     ]
[WARN] [1753420032.643176501] [solver_node]: [PoseSolver] 激光数量不足(2)，无法生成三激光组合
[ERROR] [1753420032.645407683] [solver_node]: 求解错误: not enough values to unpack (expected 2, got 0)
[ERROR] [1753420032.646351958] [solver_node]: 详细错误信息: Traceback (most recent call last):
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/solver_node.py", line 111, in scan_callback
    solutions = self.solver.solve(distances)
  File "/home/orin/rc2025_ros2_ws/install/laser_solver/lib/python3.10/site-packages/laser_solver/positioning_algorithm/batch_pose_calculator.py", line 120, in solve
    final_sol_1, valid_1 = self.case1_solver.solve(combinations)  # 返回 (N_cbn, 5) 格式
ValueError: not enough values to unpack (expected 2, got 0)

